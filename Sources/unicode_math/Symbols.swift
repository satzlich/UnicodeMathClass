// This file is generated by gen-symbols.py
// Do not edit by hand!

public let MATH_SYMBOLS: [MathSymbol] = [
    .init("\u{00021}", "mathexclam",               "exclamation mark"),
    .init("\u{00023}", "mathoctothorpe",           "number sign"),
    .init("\u{00024}", "mathdollar",               "dollar sign"),
    .init("\u{00025}", "mathpercent",              "percent sign"),
    .init("\u{00026}", "mathampersand",            "ampersand"),
    .init("\u{00028}", "lparen",                   "left parenthesis"),
    .init("\u{00029}", "rparen",                   "right parenthesis"),
    .init("\u{0002b}", "mathplus",                 "plus sign b:"),
    .init("\u{0002c}", "mathcomma",                "comma"),
    .init("\u{0002e}", "mathperiod",               "full stop, period"),
    .init("\u{0002f}", "mathslash",                "solidus"),
    .init("\u{0003a}", "mathcolon",                "colon"),
    .init("\u{0003b}", "mathsemicolon",            "semicolon p:"),
    .init("\u{0003c}", "less",                     "less-than sign r:"),
    .init("\u{0003d}", "equal",                    "equals sign r:"),
    .init("\u{0003e}", "greater",                  "greater-than sign r:"),
    .init("\u{0003f}", "mathquestion",             "question mark"),
    .init("\u{00040}", "mathatsign",               "commercial at"),
    .init("\u{0005b}", "lbrack",                   "left square bracket"),
    .init("\u{0005c}", "backslash",                "reverse solidus"),
    .init("\u{0005d}", "rbrack",                   "right square bracket"),
    .init("\u{0007b}", "lbrace",                   "left curly bracket"),
    .init("\u{0007c}", "vert",                     "vertical bar"),
    .init("\u{0007d}", "rbrace",                   "right curly bracket"),
    .init("\u{000a3}", "mathsterling",             "pound sign"),
    .init("\u{000a5}", "mathyen",                  "yen sign"),
    .init("\u{000a7}", "mathsection",              "section symbol"),
    .init("\u{000ac}", "neg",                      "/neg /lnot not sign"),
    .init("\u{000b1}", "pm",                       "plus-or-minus sign"),
    .init("\u{000b6}", "mathparagraph",            "paragraph symbol"),
    .init("\u{000b7}", "cdotp",                    "/centerdot b: middle dot"),
    .init("\u{000d7}", "times",                    "multiply sign"),
    .init("\u{000f0}", "matheth",                  "eth"),
    .init("\u{000f7}", "div",                      "divide sign"),
    .init("\u{001b5}", "Zbar",                     "impedance (latin capital letter z with stroke)"),
    .init("\u{00300}", "grave",                    "grave accent"),
    .init("\u{00301}", "acute",                    "acute accent"),
    .init("\u{00302}", "hat",                      "circumflex accent"),
    .init("\u{00302}", "widehat",                  "circumflex accent"),
    .init("\u{00303}", "tilde",                    "tilde"),
    .init("\u{00303}", "widetilde",                "tilde"),
    .init("\u{00304}", "bar",                      "macron"),
    .init("\u{00305}", "overbar",                  "overbar embellishment"),
    .init("\u{00305}", "wideoverbar",              "stretchy overbar embellishment"),
    .init("\u{00306}", "breve",                    "breve"),
    .init("\u{00306}", "widebreve",                "stretchy breve"),
    .init("\u{00307}", "dot",                      "dot above"),
    .init("\u{00308}", "ddot",                     "dieresis"),
    .init("\u{00309}", "ovhook",                   "combining hook above"),
    .init("\u{0030a}", "ocirc",                    "ring"),
    .init("\u{0030c}", "check",                    "caron"),
    .init("\u{0030c}", "widecheck",                "stretchy caron"),
    .init("\u{00310}", "candra",                   "candrabindu (non-spacing)"),
    .init("\u{00312}", "oturnedcomma",             "combining turned comma above"),
    .init("\u{00315}", "ocommatopright",           "combining comma above right"),
    .init("\u{0031a}", "droang",                   "left angle above (non-spacing)"),
    .init("\u{00330}", "wideutilde",               "under tilde accent (multiple characters and non-spacing)"),
    .init("\u{00332}", "mathunderbar",             "combining low line"),
    .init("\u{00338}", "notaccent",                "combining long solidus overlay"),
    .init("\u{0034d}", "underleftrightarrow",      "underleftrightarrow accent"),
    .init("\u{00391}", "mupAlpha",                 "capital alpha, greek"),
    .init("\u{00392}", "mupBeta",                  "capital beta, greek"),
    .init("\u{00393}", "mupGamma",                 "capital gamma, greek"),
    .init("\u{00394}", "mupDelta",                 "capital delta, greek"),
    .init("\u{00395}", "mupEpsilon",               "capital epsilon, greek"),
    .init("\u{00396}", "mupZeta",                  "capital zeta, greek"),
    .init("\u{00397}", "mupEta",                   "capital eta, greek"),
    .init("\u{00398}", "mupTheta",                 "capital theta, greek"),
    .init("\u{00399}", "mupIota",                  "capital iota, greek"),
    .init("\u{0039a}", "mupKappa",                 "capital kappa, greek"),
    .init("\u{0039b}", "mupLambda",                "capital lambda, greek"),
    .init("\u{0039c}", "mupMu",                    "capital mu, greek"),
    .init("\u{0039d}", "mupNu",                    "capital nu, greek"),
    .init("\u{0039e}", "mupXi",                    "capital xi, greek"),
    .init("\u{0039f}", "mupOmicron",               "capital omicron, greek"),
    .init("\u{003a0}", "mupPi",                    "capital pi, greek"),
    .init("\u{003a1}", "mupRho",                   "capital rho, greek"),
    .init("\u{003a3}", "mupSigma",                 "capital sigma, greek"),
    .init("\u{003a4}", "mupTau",                   "capital tau, greek"),
    .init("\u{003a5}", "mupUpsilon",               "capital upsilon, greek"),
    .init("\u{003a6}", "mupPhi",                   "capital phi, greek"),
    .init("\u{003a7}", "mupChi",                   "capital chi, greek"),
    .init("\u{003a8}", "mupPsi",                   "capital psi, greek"),
    .init("\u{003a9}", "mupOmega",                 "capital omega, greek"),
    .init("\u{003b1}", "mupalpha",                 "small alpha, greek"),
    .init("\u{003b2}", "mupbeta",                  "small beta, greek"),
    .init("\u{003b3}", "mupgamma",                 "small gamma, greek"),
    .init("\u{003b4}", "mupdelta",                 "small delta, greek"),
    .init("\u{003b5}", "mupvarepsilon",            "rounded small varepsilon, greek"),
    .init("\u{003b6}", "mupzeta",                  "small zeta, greek"),
    .init("\u{003b7}", "mupeta",                   "small eta, greek"),
    .init("\u{003b8}", "muptheta",                 "straight theta, small theta, greek"),
    .init("\u{003b9}", "mupiota",                  "small iota, greek"),
    .init("\u{003ba}", "mupkappa",                 "small kappa, greek"),
    .init("\u{003bb}", "muplambda",                "small lambda, greek"),
    .init("\u{003bc}", "mupmu",                    "small mu, greek"),
    .init("\u{003bd}", "mupnu",                    "small nu, greek"),
    .init("\u{003be}", "mupxi",                    "small xi, greek"),
    .init("\u{003bf}", "mupomicron",               "small omicron, greek"),
    .init("\u{003c0}", "muppi",                    "small pi, greek"),
    .init("\u{003c1}", "muprho",                   "small rho, greek"),
    .init("\u{003c2}", "mupvarsigma",              "terminal sigma, greek"),
    .init("\u{003c3}", "mupsigma",                 "small sigma, greek"),
    .init("\u{003c4}", "muptau",                   "small tau, greek"),
    .init("\u{003c5}", "mupupsilon",               "small upsilon, greek"),
    .init("\u{003c6}", "mupvarphi",                "curly or open small phi, greek"),
    .init("\u{003c7}", "mupchi",                   "small chi, greek"),
    .init("\u{003c8}", "muppsi",                   "small psi, greek"),
    .init("\u{003c9}", "mupomega",                 "small omega, greek"),
    .init("\u{003d1}", "mupvartheta",              "/vartheta - curly or open theta"),
    .init("\u{003d5}", "mupphi",                   "/straightphi - small phi, greek"),
    .init("\u{003d6}", "mupvarpi",                 "rounded small pi (pomega), greek"),
    .init("\u{003dc}", "upDigamma",                "capital digamma"),
    .init("\u{003dd}", "updigamma",                "old greek small letter digamma"),
    .init("\u{003f0}", "mupvarkappa",              "rounded small kappa, greek"),
    .init("\u{003f1}", "mupvarrho",                "rounded small rho, greek"),
    .init("\u{003f4}", "mupvarTheta",              "greek capital theta symbol"),
    .init("\u{003f5}", "mupepsilon",               "greek lunate varepsilon symbol"),
    .init("\u{003f6}", "upbackepsilon",            "greek reversed lunate epsilon symbol"),
    .init("\u{02010}", "mathhyphen",               "hyphen"),
    .init("\u{02015}", "horizbar",                 "horizontal bar"),
    .init("\u{02016}", "Vert",                     "double vertical bar"),
    .init("\u{02017}", "twolowline",               "double low line (spacing)"),
    .init("\u{02020}", "dagger",                   "dagger relation"),
    .init("\u{02021}", "ddagger",                  "double dagger relation"),
    .init("\u{02022}", "smblkcircle",              "/bullet b: round bullet, filled"),
    .init("\u{02025}", "enleadertwodots",          "double baseline dot (en leader)"),
    .init("\u{02026}", "unicodeellipsis",          "ellipsis (horizontal)"),
    .init("\u{02032}", "prime",                    "prime or minute, not superscripted"),
    .init("\u{02033}", "dprime",                   "double prime or second, not superscripted"),
    .init("\u{02034}", "trprime",                  "triple prime (not superscripted)"),
    .init("\u{02035}", "backprime",                "reverse prime, not superscripted"),
    .init("\u{02036}", "backdprime",               "double reverse prime, not superscripted"),
    .init("\u{02037}", "backtrprime",              "triple reverse prime, not superscripted"),
    .init("\u{02038}", "caretinsert",              "caret (insertion mark)"),
    .init("\u{0203c}", "Exclam",                   "double exclamation mark"),
    .init("\u{02040}", "tieconcat",                "character tie, z notation sequence concatenation"),
    .init("\u{02043}", "hyphenbullet",             "rectangle, filled (hyphen bullet)"),
    .init("\u{02044}", "fracslash",                "fraction slash"),
    .init("\u{02047}", "Question",                 "double question mark"),
    .init("\u{02050}", "closure",                  "close up"),
    .init("\u{02057}", "qprime",                   "quadruple prime, not superscripted"),
    .init("\u{020ac}", "euro",                     "euro sign"),
    .init("\u{020d0}", "leftharpoonaccent",        "combining left harpoon above"),
    .init("\u{020d0}", "overleftharpoon",          "combining left harpoon above"),
    .init("\u{020d1}", "rightharpoonaccent",       "combining right harpoon above"),
    .init("\u{020d1}", "overrightharpoon",         "combining right harpoon above"),
    .init("\u{020d2}", "vertoverlay",              "combining long vertical line overlay"),
    .init("\u{020d6}", "overleftarrow",            "combining left arrow above"),
    .init("\u{020d7}", "overrightarrow",           "combining left arrow above"),
    .init("\u{020d7}", "vec",                      "combining right arrow above"),
    .init("\u{020db}", "dddot",                    "combining three dots above"),
    .init("\u{020dc}", "ddddot",                   "combining four dots above"),
    .init("\u{020dd}", "enclosecircle",            "combining enclosing circle"),
    .init("\u{020de}", "enclosesquare",            "combining enclosing square"),
    .init("\u{020df}", "enclosediamond",           "combining enclosing diamond"),
    .init("\u{020e1}", "overleftrightarrow",       "combining left right arrow above"),
    .init("\u{020e4}", "enclosetriangle",          "combining enclosing upward pointing triangle"),
    .init("\u{020e7}", "annuity",                  "combining annuity symbol"),
    .init("\u{020e8}", "threeunderdot",            "combining triple underdot"),
    .init("\u{020e9}", "widebridgeabove",          "combining wide bridge above"),
    .init("\u{020ec}", "underrightharpoondown",    "combining rightwards harpoon with barb downwards"),
    .init("\u{020ed}", "underleftharpoondown",     "combining leftwards harpoon with barb downwards"),
    .init("\u{020ee}", "underleftarrow",           "combining left arrow below"),
    .init("\u{020ef}", "underrightarrow",          "combining right arrow below"),
    .init("\u{020f0}", "asteraccent",              "combining asterisk above"),
    .init("\u{02102}", "BbbC",                     "/bbb c, open face c"),
    .init("\u{02107}", "Eulerconst",               "euler constant"),
    .init("\u{0210a}", "mscrg",                    "/scr g, script letter g"),
    .init("\u{0210b}", "mscrH",                    "hamiltonian (script capital h)"),
    .init("\u{0210c}", "mfrakH",                   "/frak h, upper case h"),
    .init("\u{0210d}", "BbbH",                     "/bbb h, open face h"),
    .init("\u{0210e}", "Planckconst",              "planck constant"),
    .init("\u{0210f}", "hslash",                   "/hslash - variant planck's over 2pi"),
    .init("\u{02110}", "mscrI",                    "/scr i, script letter i"),
    .init("\u{02111}", "Im",                       "imaginary part"),
    .init("\u{02112}", "mscrL",                    "lagrangian (script capital l)"),
    .init("\u{02113}", "ell",                      "cursive small l"),
    .init("\u{02115}", "BbbN",                     "/bbb n, open face n"),
    .init("\u{02118}", "wp",                       "weierstrass p"),
    .init("\u{02119}", "BbbP",                     "/bbb p, open face p"),
    .init("\u{0211a}", "BbbQ",                     "/bbb q, open face q"),
    .init("\u{0211b}", "mscrR",                    "/scr r, script letter r"),
    .init("\u{0211c}", "Re",                       "real part"),
    .init("\u{0211d}", "BbbR",                     "/bbb r, open face r"),
    .init("\u{02124}", "BbbZ",                     "/bbb z, open face z"),
    .init("\u{02127}", "mho",                      "conductance"),
    .init("\u{02128}", "mfrakZ",                   "/frak z, upper case z"),
    .init("\u{02129}", "turnediota",               "turned iota"),
    .init("\u{0212b}", "Angstrom",                 "angstrom capital a, ring"),
    .init("\u{0212c}", "mscrB",                    "bernoulli function (script capital b)"),
    .init("\u{0212d}", "mfrakC",                   "black-letter capital c"),
    .init("\u{0212f}", "mscre",                    "/scr e, script letter e"),
    .init("\u{02130}", "mscrE",                    "/scr e, script letter e"),
    .init("\u{02131}", "mscrF",                    "/scr f, script letter f"),
    .init("\u{02132}", "Finv",                     "turned capital f"),
    .init("\u{02133}", "mscrM",                    "physics m-matrix (script capital m)"),
    .init("\u{02134}", "mscro",                    "order of (script small o)"),
    .init("\u{02135}", "aleph",                    "aleph, hebrew"),
    .init("\u{02136}", "beth",                     "beth, hebrew"),
    .init("\u{02137}", "gimel",                    "gimel, hebrew"),
    .init("\u{02138}", "daleth",                   "daleth, hebrew"),
    .init("\u{0213c}", "Bbbpi",                    "double-struck small pi"),
    .init("\u{0213d}", "Bbbgamma",                 "double-struck small gamma"),
    .init("\u{0213e}", "BbbGamma",                 "double-struck capital gamma"),
    .init("\u{0213f}", "BbbPi",                    "double-struck capital pi"),
    .init("\u{02140}", "Bbbsum",                   "double-struck n-ary summation"),
    .init("\u{02141}", "Game",                     "turned sans-serif capital g"),
    .init("\u{02142}", "sansLturned",              "turned sans-serif capital l"),
    .init("\u{02143}", "sansLmirrored",            "reversed sans-serif capital l"),
    .init("\u{02144}", "Yup",                      "turned sans-serif capital y"),
    .init("\u{02145}", "mitBbbD",                  "double-struck italic capital d"),
    .init("\u{02146}", "mitBbbd",                  "double-struck italic small d"),
    .init("\u{02147}", "mitBbbe",                  "double-struck italic small e"),
    .init("\u{02148}", "mitBbbi",                  "double-struck italic small i"),
    .init("\u{02149}", "mitBbbj",                  "double-struck italic small j"),
    .init("\u{0214a}", "PropertyLine",             "property line"),
    .init("\u{0214b}", "upand",                    "turned ampersand"),
    .init("\u{02190}", "leftarrow",                "/leftarrow /gets a: leftward arrow"),
    .init("\u{02191}", "uparrow",                  "upward arrow"),
    .init("\u{02192}", "rightarrow",               "/rightarrow /to a: rightward arrow"),
    .init("\u{02193}", "downarrow",                "downward arrow"),
    .init("\u{02194}", "leftrightarrow",           "left and right arrow"),
    .init("\u{02195}", "updownarrow",              "up and down arrow"),
    .init("\u{02196}", "nwarrow",                  "nw pointing arrow"),
    .init("\u{02197}", "nearrow",                  "ne pointing arrow"),
    .init("\u{02198}", "searrow",                  "se pointing arrow"),
    .init("\u{02199}", "swarrow",                  "sw pointing arrow"),
    .init("\u{0219a}", "nleftarrow",               "not left arrow"),
    .init("\u{0219b}", "nrightarrow",              "not right arrow"),
    .init("\u{0219c}", "leftwavearrow",            "left arrow-wavy"),
    .init("\u{0219d}", "rightwavearrow",           "right arrow-wavy"),
    .init("\u{0219e}", "twoheadleftarrow",         "left two-headed arrow"),
    .init("\u{0219f}", "twoheaduparrow",           "up two-headed arrow"),
    .init("\u{021a0}", "twoheadrightarrow",        "right two-headed arrow"),
    .init("\u{021a1}", "twoheaddownarrow",         "down two-headed arrow"),
    .init("\u{021a2}", "leftarrowtail",            "left arrow-tailed"),
    .init("\u{021a3}", "rightarrowtail",           "right arrow-tailed"),
    .init("\u{021a4}", "mapsfrom",                 "maps to, leftward"),
    .init("\u{021a5}", "mapsup",                   "maps to, upward"),
    .init("\u{021a6}", "mapsto",                   "maps to, rightward"),
    .init("\u{021a7}", "mapsdown",                 "maps to, downward"),
    .init("\u{021a8}", "updownarrowbar",           "up down arrow with base (perpendicular)"),
    .init("\u{021a9}", "hookleftarrow",            "left arrow-hooked"),
    .init("\u{021aa}", "hookrightarrow",           "right arrow-hooked"),
    .init("\u{021ab}", "looparrowleft",            "left arrow-looped"),
    .init("\u{021ac}", "looparrowright",           "right arrow-looped"),
    .init("\u{021ad}", "leftrightsquigarrow",      "left and right arr-wavy"),
    .init("\u{021ae}", "nleftrightarrow",          "not left and right arrow"),
    .init("\u{021af}", "downzigzagarrow",          "downwards zigzag arrow"),
    .init("\u{021b0}", "Lsh",                      "/lsh a:"),
    .init("\u{021b1}", "Rsh",                      "/rsh a:"),
    .init("\u{021b2}", "Ldsh",                     "left down angled arrow"),
    .init("\u{021b3}", "Rdsh",                     "right down angled arrow"),
    .init("\u{021b4}", "linefeed",                 "rightwards arrow with corner downwards"),
    .init("\u{021b5}", "carriagereturn",           "downwards arrow with corner leftward = carriage return"),
    .init("\u{021b6}", "curvearrowleft",           "left curved arrow"),
    .init("\u{021b7}", "curvearrowright",          "right curved arrow"),
    .init("\u{021b8}", "barovernorthwestarrow",    "north west arrow to long bar"),
    .init("\u{021b9}", "barleftarrowrightarrowbar", "leftwards arrow to bar over rightwards arrow to bar"),
    .init("\u{021ba}", "acwopencirclearrow",       "anticlockwise open circle arrow"),
    .init("\u{021bb}", "cwopencirclearrow",        "clockwise open circle arrow"),
    .init("\u{021bc}", "leftharpoonup",            "left harpoon-up"),
    .init("\u{021bd}", "leftharpoondown",          "left harpoon-down"),
    .init("\u{021be}", "upharpoonright",           "/upharpoonright /restriction a: up harpoon-right"),
    .init("\u{021bf}", "upharpoonleft",            "up harpoon-left"),
    .init("\u{021c0}", "rightharpoonup",           "right harpoon-up"),
    .init("\u{021c1}", "rightharpoondown",         "right harpoon-down"),
    .init("\u{021c2}", "downharpoonright",         "down harpoon-right"),
    .init("\u{021c3}", "downharpoonleft",          "down harpoon-left"),
    .init("\u{021c4}", "rightleftarrows",          "right arrow over left arrow"),
    .init("\u{021c5}", "updownarrows",             "up arrow, down arrow"),
    .init("\u{021c6}", "leftrightarrows",          "left arrow over right arrow"),
    .init("\u{021c7}", "leftleftarrows",           "two left arrows"),
    .init("\u{021c8}", "upuparrows",               "two up arrows"),
    .init("\u{021c9}", "rightrightarrows",         "two right arrows"),
    .init("\u{021ca}", "downdownarrows",           "two down arrows"),
    .init("\u{021cb}", "leftrightharpoons",        "left harpoon over right"),
    .init("\u{021cc}", "rightleftharpoons",        "right harpoon over left"),
    .init("\u{021cd}", "nLeftarrow",               "not implied by"),
    .init("\u{021ce}", "nLeftrightarrow",          "not left and right double arrows"),
    .init("\u{021cf}", "nRightarrow",              "not implies"),
    .init("\u{021d0}", "Leftarrow",                "is implied by"),
    .init("\u{021d1}", "Uparrow",                  "up double arrow"),
    .init("\u{021d2}", "Rightarrow",               "implies"),
    .init("\u{021d3}", "Downarrow",                "down double arrow"),
    .init("\u{021d4}", "Leftrightarrow",           "left and right double arrow"),
    .init("\u{021d5}", "Updownarrow",              "up and down double arrow"),
    .init("\u{021d6}", "Nwarrow",                  "nw pointing double arrow"),
    .init("\u{021d7}", "Nearrow",                  "ne pointing double arrow"),
    .init("\u{021d8}", "Searrow",                  "se pointing double arrow"),
    .init("\u{021d9}", "Swarrow",                  "sw pointing double arrow"),
    .init("\u{021da}", "Lleftarrow",               "left triple arrow"),
    .init("\u{021db}", "Rrightarrow",              "right triple arrow"),
    .init("\u{021dc}", "leftsquigarrow",           "leftwards squiggle arrow"),
    .init("\u{021dd}", "rightsquigarrow",          "rightwards squiggle arrow"),
    .init("\u{021de}", "nHuparrow",                "upwards arrow with double stroke"),
    .init("\u{021df}", "nHdownarrow",              "downwards arrow with double stroke"),
    .init("\u{021e0}", "leftdasharrow",            "leftwards dashed arrow"),
    .init("\u{021e1}", "updasharrow",              "upwards dashed arrow"),
    .init("\u{021e2}", "rightdasharrow",           "rightwards dashed arrow"),
    .init("\u{021e3}", "downdasharrow",            "downwards dashed arrow"),
    .init("\u{021e4}", "barleftarrow",             "leftwards arrow to bar"),
    .init("\u{021e5}", "rightarrowbar",            "rightwards arrow to bar"),
    .init("\u{021e6}", "leftwhitearrow",           "leftwards white arrow"),
    .init("\u{021e7}", "upwhitearrow",             "upwards white arrow"),
    .init("\u{021e8}", "rightwhitearrow",          "rightwards white arrow"),
    .init("\u{021e9}", "downwhitearrow",           "downwards white arrow"),
    .init("\u{021ea}", "whitearrowupfrombar",      "upwards white arrow from bar"),
    .init("\u{021f4}", "circleonrightarrow",       "right arrow with small circle"),
    .init("\u{021f5}", "downuparrows",             "downwards arrow leftwards of upwards arrow"),
    .init("\u{021f6}", "rightthreearrows",         "three rightwards arrows"),
    .init("\u{021f7}", "nvleftarrow",              "leftwards arrow with vertical stroke"),
    .init("\u{021f8}", "nvrightarrow",             "rightwards arrow with vertical stroke"),
    .init("\u{021f9}", "nvleftrightarrow",         "left right arrow with vertical stroke"),
    .init("\u{021fa}", "nVleftarrow",              "leftwards arrow with double vertical stroke"),
    .init("\u{021fb}", "nVrightarrow",             "rightwards arrow with double vertical stroke"),
    .init("\u{021fc}", "nVleftrightarrow",         "left right arrow with double vertical stroke"),
    .init("\u{021fd}", "leftarrowtriangle",        "leftwards open-headed arrow"),
    .init("\u{021fe}", "rightarrowtriangle",       "rightwards open-headed arrow"),
    .init("\u{021ff}", "leftrightarrowtriangle",   "left right open-headed arrow"),
    .init("\u{02200}", "forall",                   "for all"),
    .init("\u{02201}", "complement",               "complement sign"),
    .init("\u{02202}", "partial",                  "partial differential"),
    .init("\u{02203}", "exists",                   "at least one exists"),
    .init("\u{02204}", "nexists",                  "negated exists"),
    .init("\u{02205}", "varnothing",               "circle, slash"),
    .init("\u{02206}", "increment",                "laplacian (delta; nabla\\string^2)"),
    .init("\u{02207}", "nabla",                    "nabla, del, hamilton operator"),
    .init("\u{02208}", "in",                       "set membership, variant"),
    .init("\u{02209}", "notin",                    "negated set membership"),
    .init("\u{0220a}", "smallin",                  "set membership (small set membership)"),
    .init("\u{0220b}", "ni",                       "contains, variant"),
    .init("\u{0220c}", "nni",                      "negated contains, variant"),
    .init("\u{0220d}", "smallni",                  "/ni /owns r: contains (small contains as member)"),
    .init("\u{0220e}", "QED",                      "end of proof"),
    .init("\u{0220f}", "prod",                     "product operator"),
    .init("\u{02210}", "coprod",                   "coproduct operator"),
    .init("\u{02211}", "sum",                      "summation operator"),
    .init("\u{02212}", "minus",                    "minus sign"),
    .init("\u{02213}", "mp",                       "minus-or-plus sign"),
    .init("\u{02214}", "dotplus",                  "plus sign, dot above"),
    .init("\u{02215}", "divslash",                 "division slash"),
    .init("\u{02216}", "setminus",                 "set minus (cf. reverse solidus)"),
    .init("\u{02217}", "ast",                      "centered asterisk"),
    .init("\u{02218}", "vysmwhtcircle",            "composite function (small circle)"),
    .init("\u{02219}", "vysmblkcircle",            "bullet operator"),
    .init("\u{0221a}", "sqrt",                     "radical"),
    .init("\u{0221a}", "surd",                     "radical"),
    .init("\u{0221b}", "cuberoot",                 "cube root"),
    .init("\u{0221c}", "fourthroot",               "fourth root"),
    .init("\u{0221d}", "propto",                   "is proportional to"),
    .init("\u{0221e}", "infty",                    "infinity"),
    .init("\u{0221f}", "rightangle",               "right (90 degree) angle"),
    .init("\u{02220}", "angle",                    "angle"),
    .init("\u{02221}", "measuredangle",            "angle-measured"),
    .init("\u{02222}", "sphericalangle",           "angle-spherical"),
    .init("\u{02223}", "mid",                      "/mid r:"),
    .init("\u{02224}", "nmid",                     "negated mid"),
    .init("\u{02225}", "parallel",                 "parallel"),
    .init("\u{02226}", "nparallel",                "not parallel"),
    .init("\u{02227}", "wedge",                    "/wedge /land b: logical and"),
    .init("\u{02228}", "vee",                      "/vee /lor b: logical or"),
    .init("\u{02229}", "cap",                      "intersection"),
    .init("\u{0222a}", "cup",                      "union or logical sum"),
    .init("\u{0222b}", "int",                      "integral operator"),
    .init("\u{0222c}", "iint",                     "double integral operator"),
    .init("\u{0222d}", "iiint",                    "triple integral operator"),
    .init("\u{0222e}", "oint",                     "contour integral operator"),
    .init("\u{0222f}", "oiint",                    "double contour integral operator"),
    .init("\u{02230}", "oiiint",                   "triple contour integral operator"),
    .init("\u{02231}", "intclockwise",             "clockwise integral"),
    .init("\u{02232}", "varointclockwise",         "contour integral, clockwise"),
    .init("\u{02233}", "ointctrclockwise",         "contour integral, anticlockwise"),
    .init("\u{02234}", "therefore",                "therefore"),
    .init("\u{02235}", "because",                  "because"),
    .init("\u{02236}", "mathratio",                "ratio"),
    .init("\u{02237}", "Colon",                    "two colons"),
    .init("\u{02238}", "dotminus",                 "minus sign, dot above"),
    .init("\u{02239}", "dashcolon",                "excess (-:)"),
    .init("\u{0223a}", "dotsminusdots",            "minus with four dots, geometric properties"),
    .init("\u{0223b}", "kernelcontraction",        "homothetic"),
    .init("\u{0223c}", "sim",                      "similar"),
    .init("\u{0223d}", "backsim",                  "reverse similar"),
    .init("\u{0223e}", "invlazys",                 "most positive [inverted lazy s]"),
    .init("\u{0223f}", "sinewave",                 "sine wave"),
    .init("\u{02240}", "wr",                       "wreath product"),
    .init("\u{02241}", "nsim",                     "not similar"),
    .init("\u{02242}", "eqsim",                    "equals, similar"),
    .init("\u{02243}", "simeq",                    "similar, equals"),
    .init("\u{02244}", "nsime",                    "not similar, equals"),
    .init("\u{02243}", "sime",                     "similar, equals (alias)"),
    .init("\u{02244}", "nsimeq",                   "not similar, equals (alias)"),
    .init("\u{02245}", "cong",                     "congruent with"),
    .init("\u{02246}", "simneqq",                  "similar, not equals [vert only for 9573 entity]"),
    .init("\u{02247}", "ncong",                    "not congruent with"),
    .init("\u{02248}", "approx",                   "approximate"),
    .init("\u{02249}", "napprox",                  "not approximate"),
    .init("\u{0224a}", "approxeq",                 "approximate, equals"),
    .init("\u{0224b}", "approxident",              "approximately identical to"),
    .init("\u{0224c}", "backcong",                 "all equal to"),
    .init("\u{0224d}", "asymp",                    "asymptotically equal to"),
    .init("\u{0224e}", "Bumpeq",                   "bumpy equals"),
    .init("\u{0224f}", "bumpeq",                   "bumpy equals, equals"),
    .init("\u{02250}", "doteq",                    "equals, single dot above"),
    .init("\u{02251}", "Doteq",                    "/doteqdot /doteq r: equals, even dots"),
    .init("\u{02252}", "fallingdotseq",            "equals, falling dots"),
    .init("\u{02253}", "risingdotseq",             "equals, rising dots"),
    .init("\u{02254}", "coloneq",                  "colon, equals"),
    .init("\u{02255}", "eqcolon",                  "equals, colon"),
    .init("\u{02256}", "eqcirc",                   "circle on equals sign"),
    .init("\u{02257}", "circeq",                   "circle, equals"),
    .init("\u{02258}", "arceq",                    "arc, equals; corresponds to"),
    .init("\u{02259}", "wedgeq",                   "corresponds to (wedge, equals)"),
    .init("\u{0225a}", "veeeq",                    "logical or, equals"),
    .init("\u{0225b}", "stareq",                   "star equals"),
    .init("\u{0225c}", "triangleq",                "triangle, equals"),
    .init("\u{0225d}", "eqdef",                    "equals by definition"),
    .init("\u{0225e}", "measeq",                   "measured by (m over equals)"),
    .init("\u{0225f}", "questeq",                  "equal with questionmark"),
    .init("\u{02260}", "ne",                       "/ne /neq r: not equal"),
    .init("\u{02261}", "equiv",                    "identical with"),
    .init("\u{02262}", "nequiv",                   "not identical with"),
    .init("\u{02263}", "Equiv",                    "strict equivalence (4 lines)"),
    .init("\u{02264}", "leq",                      "/leq /le r: less-than-or-equal"),
    .init("\u{02265}", "geq",                      "/geq /ge r: greater-than-or-equal"),
    .init("\u{02266}", "leqq",                     "less, double equals"),
    .init("\u{02267}", "geqq",                     "greater, double equals"),
    .init("\u{02268}", "lneqq",                    "less, not double equals"),
    .init("\u{02269}", "gneqq",                    "greater, not double equals"),
    .init("\u{0226a}", "ll",                       "much less than, type 2"),
    .init("\u{0226b}", "gg",                       "much greater than, type 2"),
    .init("\u{0226c}", "between",                  "between"),
    .init("\u{0226d}", "nasymp",                   "not asymptotically equal to"),
    .init("\u{0226e}", "nless",                    "not less-than"),
    .init("\u{0226f}", "ngtr",                     "not greater-than"),
    .init("\u{02270}", "nleq",                     "not less-than-or-equal"),
    .init("\u{02271}", "ngeq",                     "not greater-than-or-equal"),
    .init("\u{02272}", "lesssim",                  "less, similar"),
    .init("\u{02273}", "gtrsim",                   "greater, similar"),
    .init("\u{02274}", "nlesssim",                 "not less, similar"),
    .init("\u{02275}", "ngtrsim",                  "not greater, similar"),
    .init("\u{02276}", "lessgtr",                  "less, greater"),
    .init("\u{02277}", "gtrless",                  "greater, less"),
    .init("\u{02278}", "nlessgtr",                 "not less, greater"),
    .init("\u{02279}", "ngtrless",                 "not greater, less"),
    .init("\u{0227a}", "prec",                     "precedes"),
    .init("\u{0227b}", "succ",                     "succeeds"),
    .init("\u{0227c}", "preccurlyeq",              "precedes, curly equals"),
    .init("\u{0227d}", "succcurlyeq",              "succeeds, curly equals"),
    .init("\u{0227e}", "precsim",                  "precedes, similar"),
    .init("\u{0227f}", "succsim",                  "succeeds, similar"),
    .init("\u{02280}", "nprec",                    "not precedes"),
    .init("\u{02281}", "nsucc",                    "not succeeds"),
    .init("\u{02282}", "subset",                   "subset or is implied by"),
    .init("\u{02283}", "supset",                   "superset or implies"),
    .init("\u{02284}", "nsubset",                  "not subset, variant [slash negation]"),
    .init("\u{02285}", "nsupset",                  "not superset, variant [slash negation]"),
    .init("\u{02286}", "subseteq",                 "subset, equals"),
    .init("\u{02287}", "supseteq",                 "superset, equals"),
    .init("\u{02288}", "nsubseteq",                "not subset, equals"),
    .init("\u{02289}", "nsupseteq",                "not superset, equals"),
    .init("\u{0228a}", "subsetneq",                "subset, not equals"),
    .init("\u{0228b}", "supsetneq",                "superset, not equals"),
    .init("\u{0228c}", "cupleftarrow",             "multiset"),
    .init("\u{0228d}", "cupdot",                   "union, with dot"),
    .init("\u{0228e}", "uplus",                    "plus sign in union"),
    .init("\u{0228f}", "sqsubset",                 "square subset"),
    .init("\u{02290}", "sqsupset",                 "square superset"),
    .init("\u{02291}", "sqsubseteq",               "square subset, equals"),
    .init("\u{02292}", "sqsupseteq",               "square superset, equals"),
    .init("\u{02293}", "sqcap",                    "square intersection"),
    .init("\u{02294}", "sqcup",                    "square union"),
    .init("\u{02295}", "oplus",                    "plus sign in circle"),
    .init("\u{02296}", "ominus",                   "minus sign in circle"),
    .init("\u{02297}", "otimes",                   "multiply sign in circle"),
    .init("\u{02298}", "oslash",                   "solidus in circle"),
    .init("\u{02299}", "odot",                     "middle dot in circle"),
    .init("\u{0229a}", "circledcirc",              "small circle in circle"),
    .init("\u{0229b}", "circledast",               "asterisk in circle"),
    .init("\u{0229c}", "circledequal",             "equal in circle"),
    .init("\u{0229d}", "circleddash",              "hyphen in circle"),
    .init("\u{0229e}", "boxplus",                  "plus sign in box"),
    .init("\u{0229f}", "boxminus",                 "minus sign in box"),
    .init("\u{022a0}", "boxtimes",                 "multiply sign in box"),
    .init("\u{022a1}", "boxdot",                   "/dotsquare /boxdot b: small dot in box"),
    .init("\u{022a2}", "vdash",                    "vertical, dash"),
    .init("\u{022a3}", "dashv",                    "dash, vertical"),
    .init("\u{022a4}", "top",                      "top"),
    .init("\u{022a5}", "bot",                      "bottom"),
    .init("\u{022a6}", "assert",                   "assertion (vertical, short dash)"),
    .init("\u{022a7}", "models",                   "models (vertical, short double dash)"),
    .init("\u{022a8}", "vDash",                    "vertical, double dash"),
    .init("\u{022a9}", "Vdash",                    "double vertical, dash"),
    .init("\u{022aa}", "Vvdash",                   "triple vertical, dash"),
    .init("\u{022ab}", "VDash",                    "double vert, double dash"),
    .init("\u{022ac}", "nvdash",                   "not vertical, dash"),
    .init("\u{022ad}", "nvDash",                   "not vertical, double dash"),
    .init("\u{022ae}", "nVdash",                   "not double vertical, dash"),
    .init("\u{022af}", "nVDash",                   "not double vert, double dash"),
    .init("\u{022b0}", "prurel",                   "element precedes under relation"),
    .init("\u{022b1}", "scurel",                   "succeeds under relation"),
    .init("\u{022b2}", "vartriangleleft",          "left triangle, open, variant"),
    .init("\u{022b3}", "vartriangleright",         "right triangle, open, variant"),
    .init("\u{022b4}", "trianglelefteq",           "left triangle, equals"),
    .init("\u{022b5}", "trianglerighteq",          "right triangle, equals"),
    .init("\u{022b6}", "origof",                   "original of"),
    .init("\u{022b7}", "imageof",                  "image of"),
    .init("\u{022b8}", "multimap",                 "/multimap a:"),
    .init("\u{022b9}", "hermitmatrix",             "hermitian conjugate matrix"),
    .init("\u{022ba}", "intercal",                 "intercal"),
    .init("\u{022bb}", "veebar",                   "logical or, bar below (large vee); exclusive disjunction"),
    .init("\u{022bc}", "barwedge",                 "bar, wedge (large wedge)"),
    .init("\u{022bd}", "barvee",                   "bar, vee (large vee)"),
    .init("\u{022be}", "measuredrightangle",       "right angle-measured [with arc]"),
    .init("\u{022bf}", "varlrtriangle",            "right triangle"),
    .init("\u{022c0}", "bigwedge",                 "logical and operator"),
    .init("\u{022c1}", "bigvee",                   "logical or operator"),
    .init("\u{022c2}", "bigcap",                   "intersection operator"),
    .init("\u{022c3}", "bigcup",                   "union operator"),
    .init("\u{022c4}", "smwhtdiamond",             "white diamond"),
    .init("\u{022c5}", "cdot",                     "small middle dot"),
    .init("\u{022c6}", "star",                     "small star, filled, low"),
    .init("\u{022c7}", "divideontimes",            "division on times"),
    .init("\u{022c8}", "bowtie",                   "bowtie"),
    .init("\u{022c9}", "ltimes",                   "times sign, left closed"),
    .init("\u{022ca}", "rtimes",                   "times sign, right closed"),
    .init("\u{022cb}", "leftthreetimes",           "left semidirect product"),
    .init("\u{022cc}", "rightthreetimes",          "right semidirect product"),
    .init("\u{022cd}", "backsimeq",                "reverse similar, equals"),
    .init("\u{022ce}", "curlyvee",                 "curly logical or"),
    .init("\u{022cf}", "curlywedge",               "curly logical and"),
    .init("\u{022d0}", "Subset",                   "double subset"),
    .init("\u{022d1}", "Supset",                   "double superset"),
    .init("\u{022d2}", "Cap",                      "/cap /doublecap b: double intersection"),
    .init("\u{022d3}", "Cup",                      "/cup /doublecup b: double union"),
    .init("\u{022d4}", "pitchfork",                "pitchfork"),
    .init("\u{022d5}", "equalparallel",            "parallel, equal; equal or parallel"),
    .init("\u{022d6}", "lessdot",                  "less than, with dot"),
    .init("\u{022d7}", "gtrdot",                   "greater than, with dot"),
    .init("\u{022d8}", "lll",                      "/ll /lll /llless r: triple less-than"),
    .init("\u{022d9}", "ggg",                      "/ggg /gg /gggtr r: triple greater-than"),
    .init("\u{022da}", "lesseqgtr",                "less, equals, greater"),
    .init("\u{022db}", "gtreqless",                "greater, equals, less"),
    .init("\u{022dc}", "eqless",                   "equal-or-less"),
    .init("\u{022dd}", "eqgtr",                    "equal-or-greater"),
    .init("\u{022de}", "curlyeqprec",              "curly equals, precedes"),
    .init("\u{022df}", "curlyeqsucc",              "curly equals, succeeds"),
    .init("\u{022e0}", "npreccurlyeq",             "not precedes, curly equals"),
    .init("\u{022e1}", "nsucccurlyeq",             "not succeeds, curly equals"),
    .init("\u{022e2}", "nsqsubseteq",              "not, square subset, equals"),
    .init("\u{022e3}", "nsqsupseteq",              "not, square superset, equals"),
    .init("\u{022e4}", "sqsubsetneq",              "square subset, not equals"),
    .init("\u{022e5}", "sqsupsetneq",              "square superset, not equals"),
    .init("\u{022e6}", "lnsim",                    "less, not similar"),
    .init("\u{022e7}", "gnsim",                    "greater, not similar"),
    .init("\u{022e8}", "precnsim",                 "precedes, not similar"),
    .init("\u{022e9}", "succnsim",                 "succeeds, not similar"),
    .init("\u{022ea}", "nvartriangleleft",         "not left triangle"),
    .init("\u{022eb}", "nvartriangleright",        "not right triangle"),
    .init("\u{022ec}", "ntrianglelefteq",          "not left triangle, equals"),
    .init("\u{022ed}", "ntrianglerighteq",         "not right triangle, equals"),
    .init("\u{022ee}", "vdots",                    "vertical ellipsis"),
    .init("\u{022ef}", "unicodecdots",             "three dots, centered"),
    .init("\u{022f0}", "adots",                    "three dots, ascending"),
    .init("\u{022f1}", "ddots",                    "three dots, descending"),
    .init("\u{022f2}", "disin",                    "element of with long horizontal stroke"),
    .init("\u{022f3}", "varisins",                 "element of with vertical bar at end of horizontal stroke"),
    .init("\u{022f4}", "isins",                    "small element of with vertical bar at end of horizontal stroke"),
    .init("\u{022f5}", "isindot",                  "element of with dot above"),
    .init("\u{022f6}", "varisinobar",              "element of with overbar"),
    .init("\u{022f7}", "isinobar",                 "small element of with overbar"),
    .init("\u{022f8}", "isinvb",                   "element of with underbar"),
    .init("\u{022f9}", "isinE",                    "element of with two horizontal strokes"),
    .init("\u{022fa}", "nisd",                     "contains with long horizontal stroke"),
    .init("\u{022fb}", "varnis",                   "contains with vertical bar at end of horizontal stroke"),
    .init("\u{022fc}", "nis",                      "small contains with vertical bar at end of horizontal stroke"),
    .init("\u{022fd}", "varniobar",                "contains with overbar"),
    .init("\u{022fe}", "niobar",                   "small contains with overbar"),
    .init("\u{022ff}", "bagmember",                "z notation bag membership"),
    .init("\u{02300}", "diameter",                 "diameter sign"),
    .init("\u{02302}", "house",                    "house"),
    .init("\u{02305}", "varbarwedge",              "/barwedge b: logical and, bar above [projective (bar over small wedge)]"),
    .init("\u{02306}", "vardoublebarwedge",        "/doublebarwedge b: logical and, double bar above [perspective (double bar over small wedge)]"),
    .init("\u{02308}", "lceil",                    "left ceiling"),
    .init("\u{02309}", "rceil",                    "right ceiling"),
    .init("\u{0230a}", "lfloor",                   "left floor"),
    .init("\u{0230b}", "rfloor",                   "right floor"),
    .init("\u{02310}", "invnot",                   "reverse not"),
    .init("\u{02311}", "sqlozenge",                "square lozenge"),
    .init("\u{02312}", "profline",                 "profile of a line"),
    .init("\u{02313}", "profsurf",                 "profile of a surface"),
    .init("\u{02317}", "viewdata",                 "viewdata square"),
    .init("\u{02319}", "turnednot",                "turned not sign"),
    .init("\u{0231c}", "ulcorner",                 "upper left corner"),
    .init("\u{0231d}", "urcorner",                 "upper right corner"),
    .init("\u{0231e}", "llcorner",                 "lower left corner"),
    .init("\u{0231f}", "lrcorner",                 "lower right corner"),
    .init("\u{02320}", "inttop",                   "top half integral"),
    .init("\u{02321}", "intbottom",                "bottom half integral"),
    .init("\u{02322}", "frown",                    "down curve"),
    .init("\u{02323}", "smile",                    "up curve"),
    .init("\u{0232c}", "varhexagonlrbonds",        "six carbon ring, corner down, double bonds lower right etc"),
    .init("\u{02332}", "conictaper",               "conical taper "),
    .init("\u{02336}", "topbot",                   "top and bottom"),
    .init("\u{0233d}", "obar",                     "circle with vertical bar"),
    .init("\u{0233f}", "APLnotslash",              "solidus, bar through (apl functional symbol slash bar)"),
    .init("\u{02340}", "APLnotbackslash",          "apl functional symbol backslash bar"),
    .init("\u{02353}", "APLboxupcaret",            "boxed up caret"),
    .init("\u{02370}", "APLboxquestion",           "boxed question mark"),
    .init("\u{0237c}", "rangledownzigzagarrow",    "right angle with downwards zigzag arrow"),
    .init("\u{02394}", "hexagon",                  "horizontal benzene ring [hexagon flat open]"),
    .init("\u{0239b}", "lparenuend",               "left parenthesis upper hook"),
    .init("\u{0239c}", "lparenextender",           "left parenthesis extension"),
    .init("\u{0239d}", "lparenlend",               "left parenthesis lower hook"),
    .init("\u{0239e}", "rparenuend",               "right parenthesis upper hook"),
    .init("\u{0239f}", "rparenextender",           "right parenthesis extension"),
    .init("\u{023a0}", "rparenlend",               "right parenthesis lower hook"),
    .init("\u{023a1}", "lbrackuend",               "left square bracket upper corner"),
    .init("\u{023a2}", "lbrackextender",           "left square bracket extension"),
    .init("\u{023a3}", "lbracklend",               "left square bracket lower corner"),
    .init("\u{023a4}", "rbrackuend",               "right square bracket upper corner"),
    .init("\u{023a5}", "rbrackextender",           "right square bracket extension"),
    .init("\u{023a6}", "rbracklend",               "right square bracket lower corner"),
    .init("\u{023a7}", "lbraceuend",               "left curly bracket upper hook"),
    .init("\u{023a8}", "lbracemid",                "left curly bracket middle piece"),
    .init("\u{023a9}", "lbracelend",               "left curly bracket lower hook"),
    .init("\u{023aa}", "vbraceextender",           "curly bracket extension"),
    .init("\u{023ab}", "rbraceuend",               "right curly bracket upper hook"),
    .init("\u{023ac}", "rbracemid",                "right curly bracket middle piece"),
    .init("\u{023ad}", "rbracelend",               "right curly bracket lower hook"),
    .init("\u{023ae}", "intextender",              "integral extension"),
    .init("\u{023af}", "harrowextender",           "horizontal line extension (used to extend arrows)"),
    .init("\u{023b0}", "lmoustache",               "upper left or lower right curly bracket section"),
    .init("\u{023b1}", "rmoustache",               "upper right or lower left curly bracket section"),
    .init("\u{023b2}", "sumtop",                   "summation top"),
    .init("\u{023b3}", "sumbottom",                "summation bottom"),
    .init("\u{023b4}", "overbracket",              "top square bracket"),
    .init("\u{023b5}", "underbracket",             "bottom square bracket"),
    .init("\u{023b6}", "bbrktbrk",                 "bottom square bracket over top square bracket"),
    .init("\u{023b7}", "sqrtbottom",               "radical symbol bottom"),
    .init("\u{023b8}", "lvboxline",                "left vertical box line"),
    .init("\u{023b9}", "rvboxline",                "right vertical box line"),
    .init("\u{023ce}", "varcarriagereturn",        "return symbol"),
    .init("\u{023dc}", "overparen",                "top parenthesis (mathematical use)"),
    .init("\u{023dd}", "underparen",               "bottom parenthesis (mathematical use)"),
    .init("\u{023de}", "overbrace",                "top curly bracket (mathematical use)"),
    .init("\u{023df}", "underbrace",               "bottom curly bracket (mathematical use)"),
    .init("\u{023e0}", "obrbrak",                  "top tortoise shell bracket (mathematical use)"),
    .init("\u{023e1}", "ubrbrak",                  "bottom tortoise shell bracket (mathematical use)"),
    .init("\u{023e2}", "trapezium",                "white trapezium"),
    .init("\u{023e3}", "benzenr",                  "benzene ring with circle"),
    .init("\u{023e4}", "strns",                    "straightness"),
    .init("\u{023e5}", "fltns",                    "flatness"),
    .init("\u{023e6}", "accurrent",                "ac current"),
    .init("\u{023e7}", "elinters",                 "electrical intersection"),
    .init("\u{02422}", "blanksymbol",              "blank symbol"),
    .init("\u{02423}", "mathvisiblespace",         "open box"),
    .init("\u{02506}", "bdtriplevdash",            "doubly broken vert"),
    .init("\u{02580}", "blockuphalf",              "upper half block"),
    .init("\u{02584}", "blocklowhalf",             "lower half block"),
    .init("\u{02588}", "blockfull",                "full block"),
    .init("\u{0258c}", "blocklefthalf",            "left half block"),
    .init("\u{02590}", "blockrighthalf",           "right half block"),
    .init("\u{02591}", "blockqtrshaded",           "25\\% shaded block"),
    .init("\u{02592}", "blockhalfshaded",          "50\\% shaded block"),
    .init("\u{02593}", "blockthreeqtrshaded",      "75\\% shaded block"),
    .init("\u{025a0}", "mdlgblksquare",            "square, filled"),
    .init("\u{025a1}", "mdlgwhtsquare",            "square, open"),
    .init("\u{025a2}", "squoval",                  "white square with rounded corners"),
    .init("\u{025a3}", "blackinwhitesquare",       "white square containing black small square"),
    .init("\u{025a4}", "squarehfill",              "square, horizontal rule filled"),
    .init("\u{025a5}", "squarevfill",              "square, vertical rule filled"),
    .init("\u{025a6}", "squarehvfill",             "square with orthogonal crosshatch fill"),
    .init("\u{025a7}", "squarenwsefill",           "square, nw-to-se rule filled"),
    .init("\u{025a8}", "squareneswfill",           "square, ne-to-sw rule filled"),
    .init("\u{025a9}", "squarecrossfill",          "square with diagonal crosshatch fill"),
    .init("\u{025aa}", "smblksquare",              "/blacksquare - sq bullet, filled"),
    .init("\u{025ab}", "smwhtsquare",              "white small square"),
    .init("\u{025ac}", "hrectangleblack",          "black rectangle"),
    .init("\u{025ad}", "hrectangle",               "horizontal rectangle, open"),
    .init("\u{025ae}", "vrectangleblack",          "black vertical rectangle"),
    .init("\u{025af}", "vrectangle",               "rectangle, white (vertical)"),
    .init("\u{025b0}", "parallelogramblack",       "black parallelogram"),
    .init("\u{025b1}", "parallelogram",            "parallelogram, open"),
    .init("\u{025b2}", "bigblacktriangleup",       "black up-pointing triangle"),
    .init("\u{025b3}", "bigtriangleup",            "big up triangle, open"),
    .init("\u{025b4}", "blacktriangle",            "up triangle, filled"),
    .init("\u{025b5}", "vartriangle",              "/triangle - up triangle, open"),
    .init("\u{025b6}", "blacktriangleright",       "(large) right triangle, filled"),
    .init("\u{025b7}", "triangleright",            "(large) right triangle, open; z notation range restriction"),
    .init("\u{025b8}", "smallblacktriangleright",  "right triangle, filled"),
    .init("\u{025b9}", "smalltriangleright",       "right triangle, open"),
    .init("\u{025ba}", "blackpointerright",        "black right-pointing pointer"),
    .init("\u{025bb}", "whitepointerright",        "white right-pointing pointer"),
    .init("\u{025bc}", "bigblacktriangledown",     "big down triangle, filled"),
    .init("\u{025bd}", "bigtriangledown",          "big down triangle, open"),
    .init("\u{025be}", "blacktriangledown",        "down triangle, filled"),
    .init("\u{025bf}", "triangledown",             "down triangle, open"),
    .init("\u{025c0}", "blacktriangleleft",        "(large) left triangle, filled"),
    .init("\u{025c1}", "triangleleft",             "(large) left triangle, open; z notation domain restriction"),
    .init("\u{025c2}", "smallblacktriangleleft",   "left triangle, filled"),
    .init("\u{025c3}", "smalltriangleleft",        "left triangle, open"),
    .init("\u{025c4}", "blackpointerleft",         "black left-pointing pointer"),
    .init("\u{025c5}", "whitepointerleft",         "white left-pointing pointer"),
    .init("\u{025c6}", "mdlgblkdiamond",           "black diamond"),
    .init("\u{025c7}", "mdlgwhtdiamond",           "white diamond; diamond, open"),
    .init("\u{025c8}", "blackinwhitediamond",      "white diamond containing black small diamond"),
    .init("\u{025c9}", "fisheye",                  "fisheye"),
    .init("\u{025ca}", "mdlgwhtlozenge",           "lozenge or total mark"),
    .init("\u{025cb}", "mdlgwhtcircle",            "medium large circle"),
    .init("\u{025cc}", "dottedcircle",             "dotted circle"),
    .init("\u{025cd}", "circlevertfill",           "circle with vertical fill"),
    .init("\u{025ce}", "bullseye",                 "bullseye"),
    .init("\u{025cf}", "mdlgblkcircle",            "circle, filled"),
    .init("\u{025d0}", "circlelefthalfblack",      "circle, filled left half [harvey ball]"),
    .init("\u{025d1}", "circlerighthalfblack",     "circle, filled right half"),
    .init("\u{025d2}", "circlebottomhalfblack",    "circle, filled bottom half"),
    .init("\u{025d3}", "circletophalfblack",       "circle, filled top half"),
    .init("\u{025d4}", "circleurquadblack",        "circle with upper right quadrant black"),
    .init("\u{025d5}", "blackcircleulquadwhite",   "circle with all but upper left quadrant black"),
    .init("\u{025d6}", "blacklefthalfcircle",      "left half black circle"),
    .init("\u{025d7}", "blackrighthalfcircle",     "right half black circle"),
    .init("\u{025d8}", "inversebullet",            "inverse bullet "),
    .init("\u{025d9}", "inversewhitecircle",       "inverse white circle"),
    .init("\u{025da}", "invwhiteupperhalfcircle",  "upper half inverse white circle"),
    .init("\u{025db}", "invwhitelowerhalfcircle",  "lower half inverse white circle"),
    .init("\u{025dc}", "ularc",                    "upper left quadrant circular arc"),
    .init("\u{025dd}", "urarc",                    "upper right quadrant circular arc"),
    .init("\u{025de}", "lrarc",                    "lower right quadrant circular arc"),
    .init("\u{025df}", "llarc",                    "lower left quadrant circular arc"),
    .init("\u{025e0}", "topsemicircle",            "upper half circle"),
    .init("\u{025e1}", "botsemicircle",            "lower half circle"),
    .init("\u{025e2}", "lrblacktriangle",          "lower right triangle, filled"),
    .init("\u{025e3}", "llblacktriangle",          "lower left triangle, filled"),
    .init("\u{025e4}", "ulblacktriangle",          "upper left triangle, filled"),
    .init("\u{025e5}", "urblacktriangle",          "upper right triangle, filled"),
    .init("\u{025e6}", "smwhtcircle",              "white bullet"),
    .init("\u{025e7}", "squareleftblack",          "square, filled left half"),
    .init("\u{025e8}", "squarerightblack",         "square, filled right half"),
    .init("\u{025e9}", "squareulblack",            "square, filled top left corner"),
    .init("\u{025ea}", "squarelrblack",            "square, filled bottom right corner"),
    .init("\u{025eb}", "boxbar",                   "vertical bar in box"),
    .init("\u{025ec}", "trianglecdot",             "triangle with centered dot"),
    .init("\u{025ed}", "triangleleftblack",        "up-pointing triangle with left half black"),
    .init("\u{025ee}", "trianglerightblack",       "up-pointing triangle with right half black"),
    .init("\u{025ef}", "lgwhtcircle",              "large circle"),
    .init("\u{025f0}", "squareulquad",             "white square with upper left quadrant"),
    .init("\u{025f1}", "squarellquad",             "white square with lower left quadrant"),
    .init("\u{025f2}", "squarelrquad",             "white square with lower right quadrant"),
    .init("\u{025f3}", "squareurquad",             "white square with upper right quadrant"),
    .init("\u{025f4}", "circleulquad",             "white circle with upper left quadrant"),
    .init("\u{025f5}", "circlellquad",             "white circle with lower left quadrant"),
    .init("\u{025f6}", "circlelrquad",             "white circle with lower right quadrant"),
    .init("\u{025f7}", "circleurquad",             "white circle with upper right quadrant"),
    .init("\u{025f8}", "ultriangle",               "upper left triangle"),
    .init("\u{025f9}", "urtriangle",               "upper right triangle"),
    .init("\u{025fa}", "lltriangle",               "lower left triangle"),
    .init("\u{025fb}", "mdwhtsquare",              "white medium square"),
    .init("\u{025fc}", "mdblksquare",              "black medium square"),
    .init("\u{025fd}", "mdsmwhtsquare",            "white medium small square"),
    .init("\u{025fe}", "mdsmblksquare",            "black medium small square"),
    .init("\u{025ff}", "lrtriangle",               "lower right triangle"),
    .init("\u{02605}", "bigstar",                  "star, filled"),
    .init("\u{02606}", "bigwhitestar",             "star, open"),
    .init("\u{02609}", "astrosun",                 "sun"),
    .init("\u{02621}", "danger",                   "dangerous bend (caution sign)"),
    .init("\u{0263b}", "blacksmiley",              "black smiling face"),
    .init("\u{0263c}", "sun",                      "white sun with rays"),
    .init("\u{0263d}", "rightmoon",                "first quarter moon"),
    .init("\u{0263e}", "leftmoon",                 "last quarter moon"),
    .init("\u{02640}", "female",                   "venus, female"),
    .init("\u{02642}", "male",                     "mars, male"),
    .init("\u{02660}", "spadesuit",                "spades suit symbol"),
    .init("\u{02661}", "heartsuit",                "heart suit symbol"),
    .init("\u{02662}", "diamondsuit",              "diamond suit symbol"),
    .init("\u{02663}", "clubsuit",                 "club suit symbol"),
    .init("\u{02664}", "varspadesuit",             "spade, white (card suit)"),
    .init("\u{02665}", "varheartsuit",             "filled heart (card suit)"),
    .init("\u{02666}", "vardiamondsuit",           "filled diamond (card suit)"),
    .init("\u{02667}", "varclubsuit",              "club, white (card suit)"),
    .init("\u{02669}", "quarternote",              "music note (sung text sign)"),
    .init("\u{0266a}", "eighthnote",               "eighth note"),
    .init("\u{0266b}", "twonotes",                 "beamed eighth notes"),
    .init("\u{0266d}", "flat",                     "musical flat"),
    .init("\u{0266e}", "natural",                  "music natural"),
    .init("\u{0266f}", "sharp",                    "musical sharp"),
    .init("\u{0267e}", "acidfree",                 "permanent paper sign"),
    .init("\u{02680}", "dicei",                    "die face-1"),
    .init("\u{02681}", "diceii",                   "die face-2"),
    .init("\u{02682}", "diceiii",                  "die face-3"),
    .init("\u{02683}", "diceiv",                   "die face-4"),
    .init("\u{02684}", "dicev",                    "die face-5"),
    .init("\u{02685}", "dicevi",                   "die face-6"),
    .init("\u{02686}", "circledrightdot",          "white circle with dot right"),
    .init("\u{02687}", "circledtwodots",           "white circle with two dots"),
    .init("\u{02688}", "blackcircledrightdot",     "black circle with white dot right"),
    .init("\u{02689}", "blackcircledtwodots",      "black circle with two white dots"),
    .init("\u{026a5}", "Hermaphrodite",            "male and female sign"),
    .init("\u{026aa}", "mdwhtcircle",              "medium white circle"),
    .init("\u{026ab}", "mdblkcircle",              "medium black circle"),
    .init("\u{026ac}", "mdsmwhtcircle",            "medium small white circle"),
    .init("\u{026b2}", "neuter",                   "neuter"),
    .init("\u{02713}", "checkmark",                "tick, check mark"),
    .init("\u{02720}", "maltese",                  "maltese cross"),
    .init("\u{0272a}", "circledstar",              "circled white star"),
    .init("\u{02736}", "varstar",                  "six pointed black star"),
    .init("\u{0273d}", "dingasterisk",             "heavy teardrop-spoked asterisk"),
    .init("\u{02772}", "lbrbrak",                  "light left tortoise shell bracket ornament"),
    .init("\u{02773}", "rbrbrak",                  "light right tortoise shell bracket ornament"),
    .init("\u{0279b}", "draftingarrow",            "right arrow with bold head (drafting)"),
    .init("\u{027c0}", "threedangle",              "three dimensional angle"),
    .init("\u{027c1}", "whiteinwhitetriangle",     "white triangle containing small white triangle"),
    .init("\u{027c2}", "perp",                     "perpendicular"),
    .init("\u{027c3}", "subsetcirc",               "open subset"),
    .init("\u{027c4}", "supsetcirc",               "open superset"),
    .init("\u{027c5}", "lbag",                     "left s-shaped bag delimiter"),
    .init("\u{027c6}", "rbag",                     "right s-shaped bag delimiter"),
    .init("\u{027c7}", "veedot",                   "or with dot inside"),
    .init("\u{027c8}", "bsolhsub",                 "reverse solidus preceding subset"),
    .init("\u{027c9}", "suphsol",                  "superset preceding solidus"),
    .init("\u{027cb}", "diagup",                   "mathematical rising diagonal"),
    .init("\u{027cc}", "longdivision",             "long division"),
    .init("\u{027cd}", "diagdown",                 "mathematical falling diagonal"),
    .init("\u{027d0}", "diamondcdot",              "white diamond with centred dot"),
    .init("\u{027d1}", "wedgedot",                 "and with dot"),
    .init("\u{027d2}", "upin",                     "element of opening upwards"),
    .init("\u{027d3}", "pullback",                 "lower right corner with dot"),
    .init("\u{027d4}", "pushout",                  "upper left corner with dot"),
    .init("\u{027d5}", "leftouterjoin",            "left outer join"),
    .init("\u{027d6}", "rightouterjoin",           "right outer join"),
    .init("\u{027d7}", "fullouterjoin",            "full outer join"),
    .init("\u{027d8}", "bigbot",                   "large up tack"),
    .init("\u{027d9}", "bigtop",                   "large down tack"),
    .init("\u{027da}", "DashVDash",                "left and right double turnstile"),
    .init("\u{027db}", "dashVdash",                "left and right tack"),
    .init("\u{027dc}", "multimapinv",              "left multimap"),
    .init("\u{027dd}", "vlongdash",                "long left tack"),
    .init("\u{027de}", "longdashv",                "long right tack"),
    .init("\u{027df}", "cirbot",                   "up tack with circle above"),
    .init("\u{027e0}", "lozengeminus",             "lozenge divided by horizontal rule"),
    .init("\u{027e1}", "concavediamond",           "white concave-sided diamond"),
    .init("\u{027e2}", "concavediamondtickleft",   "white concave-sided diamond with leftwards tick"),
    .init("\u{027e3}", "concavediamondtickright",  "white concave-sided diamond with rightwards tick"),
    .init("\u{027e4}", "whitesquaretickleft",      "white square with leftwards tick"),
    .init("\u{027e5}", "whitesquaretickright",     "white square with rightwards tick"),
    .init("\u{027e6}", "lBrack",                   "mathematical left white square bracket"),
    .init("\u{027e7}", "rBrack",                   "mathematical right white square bracket"),
    .init("\u{027e8}", "langle",                   "mathematical left angle bracket"),
    .init("\u{027e9}", "rangle",                   "mathematical right angle bracket"),
    .init("\u{027ea}", "lAngle",                   "mathematical left double angle bracket"),
    .init("\u{027eb}", "rAngle",                   "mathematical right double angle bracket"),
    .init("\u{027ec}", "Lbrbrak",                  "mathematical left white tortoise shell bracket"),
    .init("\u{027ed}", "Rbrbrak",                  "mathematical right white tortoise shell bracket"),
    .init("\u{027ee}", "lgroup",                   "mathematical left flattened parenthesis"),
    .init("\u{027ef}", "rgroup",                   "mathematical right flattened parenthesis"),
    .init("\u{027f0}", "UUparrow",                 "upwards quadruple arrow"),
    .init("\u{027f1}", "DDownarrow",               "downwards quadruple arrow"),
    .init("\u{027f2}", "acwgapcirclearrow",        "anticlockwise gapped circle arrow"),
    .init("\u{027f3}", "cwgapcirclearrow",         "clockwise gapped circle arrow"),
    .init("\u{027f4}", "rightarrowonoplus",        "right arrow with circled plus"),
    .init("\u{027f5}", "longleftarrow",            "long leftwards arrow"),
    .init("\u{027f6}", "longrightarrow",           "long rightwards arrow"),
    .init("\u{027f7}", "longleftrightarrow",       "long left right arrow"),
    .init("\u{027f8}", "Longleftarrow",            "long leftwards double arrow"),
    .init("\u{027f9}", "Longrightarrow",           "long rightwards double arrow"),
    .init("\u{027fa}", "Longleftrightarrow",       "long left right double arrow"),
    .init("\u{027fb}", "longmapsfrom",             "long leftwards arrow from bar"),
    .init("\u{027fc}", "longmapsto",               "long rightwards arrow from bar"),
    .init("\u{027fd}", "Longmapsfrom",             "long leftwards double arrow from bar"),
    .init("\u{027fe}", "Longmapsto",               "long rightwards double arrow from bar"),
    .init("\u{027ff}", "longrightsquigarrow",      "long rightwards squiggle arrow"),
    .init("\u{02900}", "nvtwoheadrightarrow",      "rightwards two-headed arrow with vertical stroke"),
    .init("\u{02901}", "nVtwoheadrightarrow",      "rightwards two-headed arrow with double vertical stroke"),
    .init("\u{02902}", "nvLeftarrow",              "leftwards double arrow with vertical stroke"),
    .init("\u{02903}", "nvRightarrow",             "rightwards double arrow with vertical stroke"),
    .init("\u{02904}", "nvLeftrightarrow",         "left right double arrow with vertical stroke"),
    .init("\u{02905}", "twoheadmapsto",            "rightwards two-headed arrow from bar"),
    .init("\u{02906}", "Mapsfrom",                 "leftwards double arrow from bar"),
    .init("\u{02907}", "Mapsto",                   "rightwards double arrow from bar"),
    .init("\u{02908}", "downarrowbarred",          "downwards arrow with horizontal stroke"),
    .init("\u{02909}", "uparrowbarred",            "upwards arrow with horizontal stroke"),
    .init("\u{0290a}", "Uuparrow",                 "upwards triple arrow"),
    .init("\u{0290b}", "Ddownarrow",               "downwards triple arrow"),
    .init("\u{0290c}", "leftbkarrow",              "leftwards double dash arrow"),
    .init("\u{0290d}", "rightbkarrow",             "rightwards double dash arrow"),
    .init("\u{0290e}", "leftdbkarrow",             "leftwards triple dash arrow"),
    .init("\u{0290f}", "dbkarrow",                 "rightwards triple dash arrow"),
    .init("\u{02910}", "drbkarrow",                "rightwards two-headed triple dash arrow"),
    .init("\u{02911}", "rightdotarrow",            "rightwards arrow with dotted stem"),
    .init("\u{02912}", "baruparrow",               "upwards arrow to bar"),
    .init("\u{02913}", "downarrowbar",             "downwards arrow to bar"),
    .init("\u{02914}", "nvrightarrowtail",         "rightwards arrow with tail with vertical stroke"),
    .init("\u{02915}", "nVrightarrowtail",         "rightwards arrow with tail with double vertical stroke"),
    .init("\u{02916}", "twoheadrightarrowtail",    "rightwards two-headed arrow with tail"),
    .init("\u{02917}", "nvtwoheadrightarrowtail",  "rightwards two-headed arrow with tail with vertical stroke"),
    .init("\u{02918}", "nVtwoheadrightarrowtail",  "rightwards two-headed arrow with tail with double vertical stroke"),
    .init("\u{02919}", "lefttail",                 "leftwards arrow-tail"),
    .init("\u{0291a}", "righttail",                "rightwards arrow-tail"),
    .init("\u{0291b}", "leftdbltail",              "leftwards double arrow-tail"),
    .init("\u{0291c}", "rightdbltail",             "rightwards double arrow-tail"),
    .init("\u{0291d}", "diamondleftarrow",         "leftwards arrow to black diamond"),
    .init("\u{0291e}", "rightarrowdiamond",        "rightwards arrow to black diamond"),
    .init("\u{0291f}", "diamondleftarrowbar",      "leftwards arrow from bar to black diamond"),
    .init("\u{02920}", "barrightarrowdiamond",     "rightwards arrow from bar to black diamond"),
    .init("\u{02921}", "nwsearrow",                "north west and south east arrow"),
    .init("\u{02922}", "neswarrow",                "north east and south west arrow"),
    .init("\u{02923}", "hknwarrow",                "north west arrow with hook"),
    .init("\u{02924}", "hknearrow",                "north east arrow with hook"),
    .init("\u{02925}", "hksearrow",                "south east arrow with hook"),
    .init("\u{02926}", "hkswarrow",                "south west arrow with hook"),
    .init("\u{02927}", "tona",                     "north west arrow and north east arrow"),
    .init("\u{02928}", "toea",                     "north east arrow and south east arrow"),
    .init("\u{02929}", "tosa",                     "south east arrow and south west arrow"),
    .init("\u{0292a}", "towa",                     "south west arrow and north west arrow"),
    .init("\u{0292b}", "rdiagovfdiag",             "rising diagonal crossing falling diagonal"),
    .init("\u{0292c}", "fdiagovrdiag",             "falling diagonal crossing rising diagonal"),
    .init("\u{0292d}", "seovnearrow",              "south east arrow crossing north east arrow"),
    .init("\u{0292e}", "neovsearrow",              "north east arrow crossing south east arrow"),
    .init("\u{0292f}", "fdiagovnearrow",           "falling diagonal crossing north east arrow"),
    .init("\u{02930}", "rdiagovsearrow",           "rising diagonal crossing south east arrow"),
    .init("\u{02931}", "neovnwarrow",              "north east arrow crossing north west arrow"),
    .init("\u{02932}", "nwovnearrow",              "north west arrow crossing north east arrow"),
    .init("\u{02933}", "rightcurvedarrow",         "wave arrow pointing directly right"),
    .init("\u{02934}", "uprightcurvearrow",        "arrow pointing rightwards then curving upwards"),
    .init("\u{02935}", "downrightcurvedarrow",     "arrow pointing rightwards then curving downwards"),
    .init("\u{02936}", "leftdowncurvedarrow",      "arrow pointing downwards then curving leftwards"),
    .init("\u{02937}", "rightdowncurvedarrow",     "arrow pointing downwards then curving rightwards"),
    .init("\u{02938}", "cwrightarcarrow",          "right-side arc clockwise arrow"),
    .init("\u{02939}", "acwleftarcarrow",          "left-side arc anticlockwise arrow"),
    .init("\u{0293a}", "acwoverarcarrow",          "top arc anticlockwise arrow"),
    .init("\u{0293b}", "acwunderarcarrow",         "bottom arc anticlockwise arrow"),
    .init("\u{0293c}", "curvearrowrightminus",     "top arc clockwise arrow with minus"),
    .init("\u{0293d}", "curvearrowleftplus",       "top arc anticlockwise arrow with plus"),
    .init("\u{0293e}", "cwundercurvearrow",        "lower right semicircular clockwise arrow"),
    .init("\u{0293f}", "ccwundercurvearrow",       "lower left semicircular anticlockwise arrow"),
    .init("\u{02940}", "acwcirclearrow",           "anticlockwise closed circle arrow"),
    .init("\u{02941}", "cwcirclearrow",            "clockwise closed circle arrow"),
    .init("\u{02942}", "rightarrowshortleftarrow", "rightwards arrow above short leftwards arrow"),
    .init("\u{02943}", "leftarrowshortrightarrow", "leftwards arrow above short rightwards arrow"),
    .init("\u{02944}", "shortrightarrowleftarrow", "short rightwards arrow above leftwards arrow"),
    .init("\u{02945}", "rightarrowplus",           "rightwards arrow with plus below"),
    .init("\u{02946}", "leftarrowplus",            "leftwards arrow with plus below"),
    .init("\u{02947}", "rightarrowx",              "rightwards arrow through x"),
    .init("\u{02948}", "leftrightarrowcircle",     "left right arrow through small circle"),
    .init("\u{02949}", "twoheaduparrowcircle",     "upwards two-headed arrow from small circle"),
    .init("\u{0294a}", "leftrightharpoonupdown",   "left barb up right barb down harpoon"),
    .init("\u{0294b}", "leftrightharpoondownup",   "left barb down right barb up harpoon"),
    .init("\u{0294c}", "updownharpoonrightleft",   "up barb right down barb left harpoon"),
    .init("\u{0294d}", "updownharpoonleftright",   "up barb left down barb right harpoon"),
    .init("\u{0294e}", "leftrightharpoonupup",     "left barb up right barb up harpoon"),
    .init("\u{0294f}", "updownharpoonrightright",  "up barb right down barb right harpoon"),
    .init("\u{02950}", "leftrightharpoondowndown", "left barb down right barb down harpoon"),
    .init("\u{02951}", "updownharpoonleftleft",    "up barb left down barb left harpoon"),
    .init("\u{02952}", "barleftharpoonup",         "leftwards harpoon with barb up to bar"),
    .init("\u{02953}", "rightharpoonupbar",        "rightwards harpoon with barb up to bar"),
    .init("\u{02954}", "barupharpoonright",        "upwards harpoon with barb right to bar"),
    .init("\u{02955}", "downharpoonrightbar",      "downwards harpoon with barb right to bar"),
    .init("\u{02956}", "barleftharpoondown",       "leftwards harpoon with barb down to bar"),
    .init("\u{02957}", "rightharpoondownbar",      "rightwards harpoon with barb down to bar"),
    .init("\u{02958}", "barupharpoonleft",         "upwards harpoon with barb left to bar"),
    .init("\u{02959}", "downharpoonleftbar",       "downwards harpoon with barb left to bar"),
    .init("\u{0295a}", "leftharpoonupbar",         "leftwards harpoon with barb up from bar"),
    .init("\u{0295b}", "barrightharpoonup",        "rightwards harpoon with barb up from bar"),
    .init("\u{0295c}", "upharpoonrightbar",        "upwards harpoon with barb right from bar"),
    .init("\u{0295d}", "bardownharpoonright",      "downwards harpoon with barb right from bar"),
    .init("\u{0295e}", "leftharpoondownbar",       "leftwards harpoon with barb down from bar"),
    .init("\u{0295f}", "barrightharpoondown",      "rightwards harpoon with barb down from bar"),
    .init("\u{02960}", "upharpoonleftbar",         "upwards harpoon with barb left from bar"),
    .init("\u{02961}", "bardownharpoonleft",       "downwards harpoon with barb left from bar"),
    .init("\u{02962}", "leftharpoonsupdown",       "leftwards harpoon with barb up above leftwards harpoon with barb down"),
    .init("\u{02963}", "upharpoonsleftright",      "upwards harpoon with barb left beside upwards harpoon with barb right"),
    .init("\u{02964}", "rightharpoonsupdown",      "rightwards harpoon with barb up above rightwards harpoon with barb down"),
    .init("\u{02965}", "downharpoonsleftright",    "downwards harpoon with barb left beside downwards harpoon with barb right"),
    .init("\u{02966}", "leftrightharpoonsup",      "leftwards harpoon with barb up above rightwards harpoon with barb up"),
    .init("\u{02967}", "leftrightharpoonsdown",    "leftwards harpoon with barb down above rightwards harpoon with barb down"),
    .init("\u{02968}", "rightleftharpoonsup",      "rightwards harpoon with barb up above leftwards harpoon with barb up"),
    .init("\u{02969}", "rightleftharpoonsdown",    "rightwards harpoon with barb down above leftwards harpoon with barb down"),
    .init("\u{0296a}", "leftharpoonupdash",        "leftwards harpoon with barb up above long dash"),
    .init("\u{0296b}", "dashleftharpoondown",      "leftwards harpoon with barb down below long dash"),
    .init("\u{0296c}", "rightharpoonupdash",       "rightwards harpoon with barb up above long dash"),
    .init("\u{0296d}", "dashrightharpoondown",     "rightwards harpoon with barb down below long dash"),
    .init("\u{0296e}", "updownharpoonsleftright",  "upwards harpoon with barb left beside downwards harpoon with barb right"),
    .init("\u{0296f}", "downupharpoonsleftright",  "downwards harpoon with barb left beside upwards harpoon with barb right"),
    .init("\u{02970}", "rightimply",               "right double arrow with rounded head"),
    .init("\u{02971}", "equalrightarrow",          "equals sign above rightwards arrow"),
    .init("\u{02972}", "similarrightarrow",        "tilde operator above rightwards arrow"),
    .init("\u{02973}", "leftarrowsimilar",         "leftwards arrow above tilde operator"),
    .init("\u{02974}", "rightarrowsimilar",        "rightwards arrow above tilde operator"),
    .init("\u{02975}", "rightarrowapprox",         "rightwards arrow above almost equal to"),
    .init("\u{02976}", "ltlarr",                   "less-than above leftwards arrow"),
    .init("\u{02977}", "leftarrowless",            "leftwards arrow through less-than"),
    .init("\u{02978}", "gtrarr",                   "greater-than above rightwards arrow"),
    .init("\u{02979}", "subrarr",                  "subset above rightwards arrow"),
    .init("\u{0297a}", "leftarrowsubset",          "leftwards arrow through subset"),
    .init("\u{0297b}", "suplarr",                  "superset above leftwards arrow"),
    .init("\u{0297c}", "leftfishtail",             "left fish tail"),
    .init("\u{0297d}", "rightfishtail",            "right fish tail"),
    .init("\u{0297e}", "upfishtail",               "up fish tail"),
    .init("\u{0297f}", "downfishtail",             "down fish tail"),
    .init("\u{02980}", "Vvert",                    "triple vertical bar delimiter"),
    .init("\u{02981}", "mdsmblkcircle",            "z notation spot"),
    .init("\u{02982}", "typecolon",                "z notation type colon"),
    .init("\u{02983}", "lBrace",                   "left white curly bracket"),
    .init("\u{02984}", "rBrace",                   "right white curly bracket"),
    .init("\u{02985}", "lParen",                   "left white parenthesis"),
    .init("\u{02986}", "rParen",                   "right white parenthesis"),
    .init("\u{02987}", "llparenthesis",            "z notation left image bracket"),
    .init("\u{02988}", "rrparenthesis",            "z notation right image bracket"),
    .init("\u{02989}", "llangle",                  "z notation left binding bracket"),
    .init("\u{0298a}", "rrangle",                  "z notation right binding bracket"),
    .init("\u{0298b}", "lbrackubar",               "left square bracket with underbar"),
    .init("\u{0298c}", "rbrackubar",               "right square bracket with underbar"),
    .init("\u{0298d}", "lbrackultick",             "left square bracket with tick in top corner"),
    .init("\u{0298e}", "rbracklrtick",             "right square bracket with tick in bottom corner"),
    .init("\u{0298f}", "lbracklltick",             "left square bracket with tick in bottom corner"),
    .init("\u{02990}", "rbrackurtick",             "right square bracket with tick in top corner"),
    .init("\u{02991}", "langledot",                "left angle bracket with dot"),
    .init("\u{02992}", "rangledot",                "right angle bracket with dot"),
    .init("\u{02993}", "lparenless",               "left arc less-than bracket"),
    .init("\u{02994}", "rparengtr",                "right arc greater-than bracket"),
    .init("\u{02995}", "Lparengtr",                "double left arc greater-than bracket"),
    .init("\u{02996}", "Rparenless",               "double right arc less-than bracket"),
    .init("\u{02997}", "lblkbrbrak",               "left black tortoise shell bracket"),
    .init("\u{02998}", "rblkbrbrak",               "right black tortoise shell bracket"),
    .init("\u{02999}", "fourvdots",                "dotted fence"),
    .init("\u{0299a}", "vzigzag",                  "vertical zigzag line"),
    .init("\u{0299b}", "measuredangleleft",        "measured angle opening left"),
    .init("\u{0299c}", "rightanglesqr",            "right angle variant with square"),
    .init("\u{0299d}", "rightanglemdot",           "measured right angle with dot"),
    .init("\u{0299e}", "angles",                   "angle with s inside"),
    .init("\u{0299f}", "angdnr",                   "acute angle"),
    .init("\u{029a0}", "gtlpar",                   "spherical angle opening left"),
    .init("\u{029a1}", "sphericalangleup",         "spherical angle opening up"),
    .init("\u{029a2}", "turnangle",                "turned angle"),
    .init("\u{029a3}", "revangle",                 "reversed angle"),
    .init("\u{029a4}", "angleubar",                "angle with underbar"),
    .init("\u{029a5}", "revangleubar",             "reversed angle with underbar"),
    .init("\u{029a6}", "wideangledown",            "oblique angle opening up"),
    .init("\u{029a7}", "wideangleup",              "oblique angle opening down"),
    .init("\u{029a8}", "measanglerutone",          "measured angle with open arm ending in arrow pointing up and right"),
    .init("\u{029a9}", "measanglelutonw",          "measured angle with open arm ending in arrow pointing up and left"),
    .init("\u{029aa}", "measanglerdtose",          "measured angle with open arm ending in arrow pointing down and right"),
    .init("\u{029ab}", "measangleldtosw",          "measured angle with open arm ending in arrow pointing down and left"),
    .init("\u{029ac}", "measangleurtone",          "measured angle with open arm ending in arrow pointing right and up"),
    .init("\u{029ad}", "measangleultonw",          "measured angle with open arm ending in arrow pointing left and up"),
    .init("\u{029ae}", "measangledrtose",          "measured angle with open arm ending in arrow pointing right and down"),
    .init("\u{029af}", "measangledltosw",          "measured angle with open arm ending in arrow pointing left and down"),
    .init("\u{029b0}", "revemptyset",              "reversed empty set"),
    .init("\u{029b1}", "emptysetobar",             "empty set with overbar"),
    .init("\u{029b2}", "emptysetocirc",            "empty set with small circle above"),
    .init("\u{029b3}", "emptysetoarr",             "empty set with right arrow above"),
    .init("\u{029b4}", "emptysetoarrl",            "empty set with left arrow above"),
    .init("\u{029b5}", "circlehbar",               "circle with horizontal bar"),
    .init("\u{029b6}", "circledvert",              "circled vertical bar"),
    .init("\u{029b7}", "circledparallel",          "circled parallel"),
    .init("\u{029b8}", "obslash",                  "circled reverse solidus"),
    .init("\u{029b9}", "operp",                    "circled perpendicular"),
    .init("\u{029ba}", "obot",                     "circle divided by horizontal bar and top half divided by vertical bar"),
    .init("\u{029bb}", "olcross",                  "circle with superimposed x"),
    .init("\u{029bc}", "odotslashdot",             "circled anticlockwise-rotated division sign"),
    .init("\u{029bd}", "uparrowoncircle",          "up arrow through circle"),
    .init("\u{029be}", "circledwhitebullet",       "circled white bullet"),
    .init("\u{029bf}", "circledbullet",            "circled bullet"),
    .init("\u{029c0}", "olessthan",                "circled less-than"),
    .init("\u{029c1}", "ogreaterthan",             "circled greater-than"),
    .init("\u{029c2}", "cirscir",                  "circle with small circle to the right"),
    .init("\u{029c3}", "cirE",                     "circle with two horizontal strokes to the right"),
    .init("\u{029c4}", "boxdiag",                  "squared rising diagonal slash"),
    .init("\u{029c5}", "boxbslash",                "squared falling diagonal slash"),
    .init("\u{029c6}", "boxast",                   "squared asterisk"),
    .init("\u{029c7}", "boxcircle",                "squared small circle"),
    .init("\u{029c8}", "boxbox",                   "squared square"),
    .init("\u{029c9}", "boxonbox",                 "two joined squares"),
    .init("\u{029ca}", "triangleodot",             "triangle with dot above"),
    .init("\u{029cb}", "triangleubar",             "triangle with underbar"),
    .init("\u{029cc}", "triangles",                "s in triangle"),
    .init("\u{029cd}", "triangleserifs",           "triangle with serifs at bottom"),
    .init("\u{029ce}", "rtriltri",                 "right triangle above left triangle"),
    .init("\u{029cf}", "ltrivb",                   "left triangle beside vertical bar"),
    .init("\u{029d0}", "vbrtri",                   "vertical bar beside right triangle"),
    .init("\u{029d1}", "lfbowtie",                 "left black bowtie"),
    .init("\u{029d2}", "rfbowtie",                 "right black bowtie"),
    .init("\u{029d3}", "fbowtie",                  "black bowtie"),
    .init("\u{029d4}", "lftimes",                  "left black times"),
    .init("\u{029d5}", "rftimes",                  "right black times"),
    .init("\u{029d6}", "hourglass",                "white hourglass"),
    .init("\u{029d7}", "blackhourglass",           "black hourglass"),
    .init("\u{029d8}", "lvzigzag",                 "left wiggly fence"),
    .init("\u{029d9}", "rvzigzag",                 "right wiggly fence"),
    .init("\u{029da}", "Lvzigzag",                 "left double wiggly fence"),
    .init("\u{029db}", "Rvzigzag",                 "right double wiggly fence"),
    .init("\u{029dc}", "iinfin",                   "incomplete infinity"),
    .init("\u{029dd}", "tieinfty",                 "tie over infinity"),
    .init("\u{029de}", "nvinfty",                  "infinity negated with vertical bar"),
    .init("\u{029df}", "dualmap",                  "double-ended multimap"),
    .init("\u{029e0}", "laplac",                   "square with contoured outline"),
    .init("\u{029e1}", "lrtriangleeq",             "increases as"),
    .init("\u{029e2}", "shuffle",                  "shuffle product"),
    .init("\u{029e3}", "eparsl",                   "equals sign and slanted parallel"),
    .init("\u{029e4}", "smeparsl",                 "equals sign and slanted parallel with tilde above"),
    .init("\u{029e5}", "eqvparsl",                 "identical to and slanted parallel"),
    .init("\u{029e6}", "gleichstark",              "gleich stark"),
    .init("\u{029e7}", "thermod",                  "thermodynamic"),
    .init("\u{029e8}", "downtriangleleftblack",    "down-pointing triangle with left half black"),
    .init("\u{029e9}", "downtrianglerightblack",   "down-pointing triangle with right half black"),
    .init("\u{029ea}", "blackdiamonddownarrow",    "black diamond with down arrow"),
    .init("\u{029eb}", "mdlgblklozenge",           "black lozenge"),
    .init("\u{029ec}", "circledownarrow",          "white circle with down arrow"),
    .init("\u{029ed}", "blackcircledownarrow",     "black circle with down arrow"),
    .init("\u{029ee}", "errbarsquare",             "error-barred white square"),
    .init("\u{029ef}", "errbarblacksquare",        "error-barred black square"),
    .init("\u{029f0}", "errbardiamond",            "error-barred white diamond"),
    .init("\u{029f1}", "errbarblackdiamond",       "error-barred black diamond"),
    .init("\u{029f2}", "errbarcircle",             "error-barred white circle"),
    .init("\u{029f3}", "errbarblackcircle",        "error-barred black circle"),
    .init("\u{029f4}", "ruledelayed",              "rule-delayed"),
    .init("\u{029f5}", "reversesolidus",           "reverse solidus"),
    .init("\u{029f6}", "dsol",                     "solidus with overbar"),
    .init("\u{029f7}", "rsolbar",                  "reverse solidus with horizontal stroke"),
    .init("\u{029f8}", "xsol",                     "big solidus"),
    .init("\u{029f9}", "xbsol",                    "big reverse solidus"),
    .init("\u{029fa}", "doubleplus",               "double plus"),
    .init("\u{029fb}", "tripleplus",               "triple plus"),
    .init("\u{029fc}", "lcurvyangle",              "left pointing curved angle bracket"),
    .init("\u{029fd}", "rcurvyangle",              "right pointing curved angle bracket"),
    .init("\u{029fe}", "tplus",                    "tiny"),
    .init("\u{029ff}", "tminus",                   "miny"),
    .init("\u{02a00}", "bigodot",                  "n-ary circled dot operator"),
    .init("\u{02a01}", "bigoplus",                 "n-ary circled plus operator"),
    .init("\u{02a02}", "bigotimes",                "n-ary circled times operator"),
    .init("\u{02a03}", "bigcupdot",                "n-ary union operator with dot"),
    .init("\u{02a04}", "biguplus",                 "n-ary union operator with plus"),
    .init("\u{02a05}", "bigsqcap",                 "n-ary square intersection operator"),
    .init("\u{02a06}", "bigsqcup",                 "n-ary square union operator"),
    .init("\u{02a07}", "conjquant",                "two logical and operator"),
    .init("\u{02a08}", "disjquant",                "two logical or operator"),
    .init("\u{02a09}", "bigtimes",                 "n-ary times operator"),
    .init("\u{02a0a}", "modtwosum",                "modulo two sum"),
    .init("\u{02a0b}", "sumint",                   "summation with integral"),
    .init("\u{02a0c}", "iiiint",                   "quadruple integral operator"),
    .init("\u{02a0d}", "intbar",                   "finite part integral"),
    .init("\u{02a0e}", "intBar",                   "integral with double stroke"),
    .init("\u{02a0f}", "fint",                     "integral average with slash"),
    .init("\u{02a10}", "cirfnint",                 "circulation function"),
    .init("\u{02a11}", "awint",                    "anticlockwise integration"),
    .init("\u{02a12}", "rppolint",                 "line integration with rectangular path around pole"),
    .init("\u{02a13}", "scpolint",                 "line integration with semicircular path around pole"),
    .init("\u{02a14}", "npolint",                  "line integration not including the pole"),
    .init("\u{02a15}", "pointint",                 "integral around a point operator"),
    .init("\u{02a16}", "sqint",                    "quaternion integral operator"),
    .init("\u{02a17}", "intlarhk",                 "integral with leftwards arrow with hook"),
    .init("\u{02a18}", "intx",                     "integral with times sign"),
    .init("\u{02a19}", "intcap",                   "integral with intersection"),
    .init("\u{02a1a}", "intcup",                   "integral with union"),
    .init("\u{02a1b}", "upint",                    "integral with overbar"),
    .init("\u{02a1c}", "lowint",                   "integral with underbar"),
    .init("\u{02a1d}", "Join",                     "join"),
    .init("\u{02a1e}", "bigtriangleleft",          "large left triangle operator"),
    .init("\u{02a1f}", "zcmp",                     "z notation schema composition"),
    .init("\u{02a20}", "zpipe",                    "z notation schema piping"),
    .init("\u{02a21}", "zproject",                 "z notation schema projection"),
    .init("\u{02a22}", "ringplus",                 "plus sign with small circle above"),
    .init("\u{02a23}", "plushat",                  "plus sign with circumflex accent above"),
    .init("\u{02a24}", "simplus",                  "plus sign with tilde above"),
    .init("\u{02a25}", "plusdot",                  "plus sign with dot below"),
    .init("\u{02a26}", "plussim",                  "plus sign with tilde below"),
    .init("\u{02a27}", "plussubtwo",               "plus sign with subscript two"),
    .init("\u{02a28}", "plustrif",                 "plus sign with black triangle"),
    .init("\u{02a29}", "commaminus",               "minus sign with comma above"),
    .init("\u{02a2a}", "minusdot",                 "minus sign with dot below"),
    .init("\u{02a2b}", "minusfdots",               "minus sign with falling dots"),
    .init("\u{02a2c}", "minusrdots",               "minus sign with rising dots"),
    .init("\u{02a2d}", "opluslhrim",               "plus sign in left half circle"),
    .init("\u{02a2e}", "oplusrhrim",               "plus sign in right half circle"),
    .init("\u{02a2f}", "vectimes",                 "vector or cross product"),
    .init("\u{02a30}", "dottimes",                 "multiplication sign with dot above"),
    .init("\u{02a31}", "timesbar",                 "multiplication sign with underbar"),
    .init("\u{02a32}", "btimes",                   "semidirect product with bottom closed"),
    .init("\u{02a33}", "smashtimes",               "smash product"),
    .init("\u{02a34}", "otimeslhrim",              "multiplication sign in left half circle"),
    .init("\u{02a35}", "otimesrhrim",              "multiplication sign in right half circle"),
    .init("\u{02a36}", "otimeshat",                "circled multiplication sign with circumflex accent"),
    .init("\u{02a37}", "Otimes",                   "multiplication sign in double circle"),
    .init("\u{02a38}", "odiv",                     "circled division sign"),
    .init("\u{02a39}", "triangleplus",             "plus sign in triangle"),
    .init("\u{02a3a}", "triangleminus",            "minus sign in triangle"),
    .init("\u{02a3b}", "triangletimes",            "multiplication sign in triangle"),
    .init("\u{02a3c}", "intprod",                  "interior product"),
    .init("\u{02a3d}", "intprodr",                 "righthand interior product"),
    .init("\u{02a3e}", "fcmp",                     "z notation relational composition"),
    .init("\u{02a3f}", "amalg",                    "amalgamation or coproduct"),
    .init("\u{02a40}", "capdot",                   "intersection with dot"),
    .init("\u{02a41}", "uminus",                   "union with minus sign"),
    .init("\u{02a42}", "barcup",                   "union with overbar"),
    .init("\u{02a43}", "barcap",                   "intersection with overbar"),
    .init("\u{02a44}", "capwedge",                 "intersection with logical and"),
    .init("\u{02a45}", "cupvee",                   "union with logical or"),
    .init("\u{02a46}", "cupovercap",               "union above intersection"),
    .init("\u{02a47}", "capovercup",               "intersection above union"),
    .init("\u{02a48}", "cupbarcap",                "union above bar above intersection"),
    .init("\u{02a49}", "capbarcup",                "intersection above bar above union"),
    .init("\u{02a4a}", "twocups",                  "union beside and joined with union"),
    .init("\u{02a4b}", "twocaps",                  "intersection beside and joined with intersection"),
    .init("\u{02a4c}", "closedvarcup",             "closed union with serifs"),
    .init("\u{02a4d}", "closedvarcap",             "closed intersection with serifs"),
    .init("\u{02a4e}", "Sqcap",                    "double square intersection"),
    .init("\u{02a4f}", "Sqcup",                    "double square union"),
    .init("\u{02a50}", "closedvarcupsmashprod",    "closed union with serifs and smash product"),
    .init("\u{02a51}", "wedgeodot",                "logical and with dot above"),
    .init("\u{02a52}", "veeodot",                  "logical or with dot above"),
    .init("\u{02a53}", "Wedge",                    "double logical and"),
    .init("\u{02a54}", "Vee",                      "double logical or"),
    .init("\u{02a55}", "wedgeonwedge",             "two intersecting logical and"),
    .init("\u{02a56}", "veeonvee",                 "two intersecting logical or"),
    .init("\u{02a57}", "bigslopedvee",             "sloping large or"),
    .init("\u{02a58}", "bigslopedwedge",           "sloping large and"),
    .init("\u{02a59}", "veeonwedge",               "logical or overlapping logical and"),
    .init("\u{02a5a}", "wedgemidvert",             "logical and with middle stem"),
    .init("\u{02a5b}", "veemidvert",               "logical or with middle stem"),
    .init("\u{02a5c}", "midbarwedge",              "ogical and with horizontal dash"),
    .init("\u{02a5d}", "midbarvee",                "logical or with horizontal dash"),
    .init("\u{02a5e}", "doublebarwedge",           "logical and with double overbar"),
    .init("\u{02a5f}", "wedgebar",                 "logical and with underbar"),
    .init("\u{02a60}", "wedgedoublebar",           "logical and with double underbar"),
    .init("\u{02a61}", "varveebar",                "small vee with underbar"),
    .init("\u{02a62}", "doublebarvee",             "logical or with double overbar"),
    .init("\u{02a63}", "veedoublebar",             "logical or with double underbar"),
    .init("\u{02a64}", "dsub",                     "z notation domain antirestriction"),
    .init("\u{02a65}", "rsub",                     "z notation range antirestriction"),
    .init("\u{02a66}", "eqdot",                    "equals sign with dot below"),
    .init("\u{02a67}", "dotequiv",                 "identical with dot above"),
    .init("\u{02a68}", "equivVert",                "triple horizontal bar with double vertical stroke"),
    .init("\u{02a69}", "equivVvert",               "triple horizontal bar with triple vertical stroke"),
    .init("\u{02a6a}", "dotsim",                   "tilde operator with dot above"),
    .init("\u{02a6b}", "simrdots",                 "tilde operator with rising dots"),
    .init("\u{02a6c}", "simminussim",              "similar minus similar"),
    .init("\u{02a6d}", "congdot",                  "congruent with dot above"),
    .init("\u{02a6e}", "asteq",                    "equals with asterisk"),
    .init("\u{02a6f}", "hatapprox",                "almost equal to with circumflex accent"),
    .init("\u{02a70}", "approxeqq",                "approximately equal or equal to"),
    .init("\u{02a71}", "eqqplus",                  "equals sign above plus sign"),
    .init("\u{02a72}", "pluseqq",                  "plus sign above equals sign"),
    .init("\u{02a73}", "eqqsim",                   "equals sign above tilde operator"),
    .init("\u{02a74}", "Coloneq",                  "double colon equal"),
    .init("\u{02a75}", "eqeq",                     "two consecutive equals signs"),
    .init("\u{02a76}", "eqeqeq",                   "three consecutive equals signs"),
    .init("\u{02a77}", "ddotseq",                  "equals sign with two dots above and two dots below"),
    .init("\u{02a78}", "equivDD",                  "equivalent with four dots above"),
    .init("\u{02a79}", "ltcir",                    "less-than with circle inside"),
    .init("\u{02a7a}", "gtcir",                    "greater-than with circle inside"),
    .init("\u{02a7b}", "ltquest",                  "less-than with question mark above"),
    .init("\u{02a7c}", "gtquest",                  "greater-than with question mark above"),
    .init("\u{02a7d}", "leqslant",                 "less-than or slanted equal to"),
    .init("\u{02a7e}", "geqslant",                 "greater-than or slanted equal to"),
    .init("\u{02a7f}", "lesdot",                   "less-than or slanted equal to with dot inside"),
    .init("\u{02a80}", "gesdot",                   "greater-than or slanted equal to with dot inside"),
    .init("\u{02a81}", "lesdoto",                  "less-than or slanted equal to with dot above"),
    .init("\u{02a82}", "gesdoto",                  "greater-than or slanted equal to with dot above"),
    .init("\u{02a83}", "lesdotor",                 "less-than or slanted equal to with dot above right"),
    .init("\u{02a84}", "gesdotol",                 "greater-than or slanted equal to with dot above left"),
    .init("\u{02a85}", "lessapprox",               "less-than or approximate"),
    .init("\u{02a86}", "gtrapprox",                "greater-than or approximate"),
    .init("\u{02a87}", "lneq",                     "less-than and single-line not equal to"),
    .init("\u{02a88}", "gneq",                     "greater-than and single-line not equal to"),
    .init("\u{02a89}", "lnapprox",                 "less-than and not approximate"),
    .init("\u{02a8a}", "gnapprox",                 "greater-than and not approximate"),
    .init("\u{02a8b}", "lesseqqgtr",               "less-than above double-line equal above greater-than"),
    .init("\u{02a8c}", "gtreqqless",               "greater-than above double-line equal above less-than"),
    .init("\u{02a8d}", "lsime",                    "less-than above similar or equal"),
    .init("\u{02a8e}", "gsime",                    "greater-than above similar or equal"),
    .init("\u{02a8f}", "lsimg",                    "less-than above similar above greater-than"),
    .init("\u{02a90}", "gsiml",                    "greater-than above similar above less-than"),
    .init("\u{02a91}", "lgE",                      "less-than above greater-than above double-line equal"),
    .init("\u{02a92}", "glE",                      "greater-than above less-than above double-line equal"),
    .init("\u{02a93}", "lesges",                   "less-than above slanted equal above greater-than above slanted equal"),
    .init("\u{02a94}", "gesles",                   "greater-than above slanted equal above less-than above slanted equal"),
    .init("\u{02a95}", "eqslantless",              "slanted equal to or less-than"),
    .init("\u{02a96}", "eqslantgtr",               "slanted equal to or greater-than"),
    .init("\u{02a97}", "elsdot",                   "slanted equal to or less-than with dot inside"),
    .init("\u{02a98}", "egsdot",                   "slanted equal to or greater-than with dot inside"),
    .init("\u{02a99}", "eqqless",                  "double-line equal to or less-than"),
    .init("\u{02a9a}", "eqqgtr",                   "double-line equal to or greater-than"),
    .init("\u{02a9b}", "eqqslantless",             "double-line slanted equal to or less-than"),
    .init("\u{02a9c}", "eqqslantgtr",              "double-line slanted equal to or greater-than"),
    .init("\u{02a9d}", "simless",                  "similar or less-than"),
    .init("\u{02a9e}", "simgtr",                   "similar or greater-than"),
    .init("\u{02a9f}", "simlE",                    "similar above less-than above equals sign"),
    .init("\u{02aa0}", "simgE",                    "similar above greater-than above equals sign"),
    .init("\u{02aa1}", "Lt",                       "double nested less-than"),
    .init("\u{02aa2}", "Gt",                       "double nested greater-than"),
    .init("\u{02aa3}", "partialmeetcontraction",   "double less-than with underbar"),
    .init("\u{02aa4}", "glj",                      "greater-than overlapping less-than"),
    .init("\u{02aa5}", "gla",                      "greater-than beside less-than"),
    .init("\u{02aa6}", "ltcc",                     "less-than closed by curve"),
    .init("\u{02aa7}", "gtcc",                     "greater-than closed by curve"),
    .init("\u{02aa8}", "lescc",                    "less-than closed by curve above slanted equal"),
    .init("\u{02aa9}", "gescc",                    "greater-than closed by curve above slanted equal"),
    .init("\u{02aaa}", "smt",                      "smaller than"),
    .init("\u{02aab}", "lat",                      "larger than"),
    .init("\u{02aac}", "smte",                     "smaller than or equal to"),
    .init("\u{02aad}", "late",                     "larger than or equal to"),
    .init("\u{02aae}", "bumpeqq",                  "equals sign with bumpy above"),
    .init("\u{02aaf}", "preceq",                   "precedes above single-line equals sign"),
    .init("\u{02ab0}", "succeq",                   "succeeds above single-line equals sign"),
    .init("\u{02ab1}", "precneq",                  "precedes above single-line not equal to"),
    .init("\u{02ab2}", "succneq",                  "succeeds above single-line not equal to"),
    .init("\u{02ab3}", "preceqq",                  "precedes above equals sign"),
    .init("\u{02ab4}", "succeqq",                  "succeeds above equals sign"),
    .init("\u{02ab5}", "precneqq",                 "precedes above not equal to"),
    .init("\u{02ab6}", "succneqq",                 "succeeds above not equal to"),
    .init("\u{02ab7}", "precapprox",               "precedes above almost equal to"),
    .init("\u{02ab8}", "succapprox",               "succeeds above almost equal to"),
    .init("\u{02ab9}", "precnapprox",              "precedes above not almost equal to"),
    .init("\u{02aba}", "succnapprox",              "succeeds above not almost equal to"),
    .init("\u{02abb}", "Prec",                     "double precedes"),
    .init("\u{02abc}", "Succ",                     "double succeeds"),
    .init("\u{02abd}", "subsetdot",                "subset with dot"),
    .init("\u{02abe}", "supsetdot",                "superset with dot"),
    .init("\u{02abf}", "subsetplus",               "subset with plus sign below"),
    .init("\u{02ac0}", "supsetplus",               "superset with plus sign below"),
    .init("\u{02ac1}", "submult",                  "subset with multiplication sign below"),
    .init("\u{02ac2}", "supmult",                  "superset with multiplication sign below"),
    .init("\u{02ac3}", "subedot",                  "subset of or equal to with dot above"),
    .init("\u{02ac4}", "supedot",                  "superset of or equal to with dot above"),
    .init("\u{02ac5}", "subseteqq",                "subset of above equals sign"),
    .init("\u{02ac6}", "supseteqq",                "superset of above equals sign"),
    .init("\u{02ac7}", "subsim",                   "subset of above tilde operator"),
    .init("\u{02ac8}", "supsim",                   "superset of above tilde operator"),
    .init("\u{02ac9}", "subsetapprox",             "subset of above almost equal to"),
    .init("\u{02aca}", "supsetapprox",             "superset of above almost equal to"),
    .init("\u{02acb}", "subsetneqq",               "subset of above not equal to"),
    .init("\u{02acc}", "supsetneqq",               "superset of above not equal to"),
    .init("\u{02acd}", "lsqhook",                  "square left open box operator"),
    .init("\u{02ace}", "rsqhook",                  "square right open box operator"),
    .init("\u{02acf}", "csub",                     "closed subset"),
    .init("\u{02ad0}", "csup",                     "closed superset"),
    .init("\u{02ad1}", "csube",                    "closed subset or equal to"),
    .init("\u{02ad2}", "csupe",                    "closed superset or equal to"),
    .init("\u{02ad3}", "subsup",                   "subset above superset"),
    .init("\u{02ad4}", "supsub",                   "superset above subset"),
    .init("\u{02ad5}", "subsub",                   "subset above subset"),
    .init("\u{02ad6}", "supsup",                   "superset above superset"),
    .init("\u{02ad7}", "suphsub",                  "superset beside subset"),
    .init("\u{02ad8}", "supdsub",                  "superset beside and joined by dash with subset"),
    .init("\u{02ad9}", "forkv",                    "element of opening downwards"),
    .init("\u{02ada}", "topfork",                  "pitchfork with tee top"),
    .init("\u{02adb}", "mlcp",                     "transversal intersection"),
    .init("\u{02adc}", "forks",                    "forking"),
    .init("\u{02add}", "forksnot",                 "nonforking"),
    .init("\u{02ade}", "shortlefttack",            "short left tack"),
    .init("\u{02adf}", "shortdowntack",            "short down tack"),
    .init("\u{02ae0}", "shortuptack",              "short up tack"),
    .init("\u{02ae1}", "perps",                    "perpendicular with s"),
    .init("\u{02ae2}", "vDdash",                   "vertical bar triple right turnstile"),
    .init("\u{02ae3}", "dashV",                    "double vertical bar left turnstile"),
    .init("\u{02ae4}", "Dashv",                    "vertical bar double left turnstile"),
    .init("\u{02ae5}", "DashV",                    "double vertical bar double left turnstile"),
    .init("\u{02ae6}", "varVdash",                 "long dash from left member of double vertical"),
    .init("\u{02ae7}", "Barv",                     "short down tack with overbar"),
    .init("\u{02ae8}", "vBar",                     "short up tack with underbar"),
    .init("\u{02ae9}", "vBarv",                    "short up tack above short down tack"),
    .init("\u{02aea}", "barV",                     "double down tack"),
    .init("\u{02aeb}", "Vbar",                     "double up tack"),
    .init("\u{02aec}", "Not",                      "double stroke not sign"),
    .init("\u{02aed}", "bNot",                     "reversed double stroke not sign"),
    .init("\u{02aee}", "revnmid",                  "does not divide with reversed negation slash"),
    .init("\u{02aef}", "cirmid",                   "vertical line with circle above"),
    .init("\u{02af0}", "midcir",                   "vertical line with circle below"),
    .init("\u{02af1}", "topcir",                   "down tack with circle below"),
    .init("\u{02af2}", "nhpar",                    "parallel with horizontal stroke"),
    .init("\u{02af3}", "parsim",                   "parallel with tilde operator"),
    .init("\u{02af4}", "interleave",               "triple vertical bar binary relation"),
    .init("\u{02af5}", "nhVvert",                  "triple vertical bar with horizontal stroke"),
    .init("\u{02af6}", "threedotcolon",            "triple colon operator"),
    .init("\u{02af7}", "lllnest",                  "stacked very much less-than"),
    .init("\u{02af8}", "gggnest",                  "stacked very much greater-than"),
    .init("\u{02af9}", "leqqslant",                "double-line slanted less-than or equal to"),
    .init("\u{02afa}", "geqqslant",                "double-line slanted greater-than or equal to"),
    .init("\u{02afb}", "trslash",                  "triple solidus binary relation"),
    .init("\u{02afc}", "biginterleave",            "large triple vertical bar operator"),
    .init("\u{02afd}", "sslash",                   "double solidus operator"),
    .init("\u{02afe}", "talloblong",               "white vertical bar"),
    .init("\u{02aff}", "bigtalloblong",            "n-ary white vertical bar"),
    .init("\u{02b12}", "squaretopblack",           "square with top half black"),
    .init("\u{02b13}", "squarebotblack",           "square with bottom half black"),
    .init("\u{02b14}", "squareurblack",            "square with upper right diagonal half black"),
    .init("\u{02b15}", "squarellblack",            "square with lower left diagonal half black"),
    .init("\u{02b16}", "diamondleftblack",         "diamond with left half black"),
    .init("\u{02b17}", "diamondrightblack",        "diamond with right half black"),
    .init("\u{02b18}", "diamondtopblack",          "diamond with top half black"),
    .init("\u{02b19}", "diamondbotblack",          "diamond with bottom half black"),
    .init("\u{02b1a}", "dottedsquare",             "dotted square"),
    .init("\u{02b1b}", "lgblksquare",              "black large square"),
    .init("\u{02b1c}", "lgwhtsquare",              "white large square"),
    .init("\u{02b1d}", "vysmblksquare",            "black very small square"),
    .init("\u{02b1e}", "vysmwhtsquare",            "white very small square"),
    .init("\u{02b1f}", "pentagonblack",            "black pentagon"),
    .init("\u{02b20}", "pentagon",                 "white pentagon"),
    .init("\u{02b21}", "varhexagon",               "white hexagon"),
    .init("\u{02b22}", "varhexagonblack",          "black hexagon"),
    .init("\u{02b23}", "hexagonblack",             "horizontal black hexagon"),
    .init("\u{02b24}", "lgblkcircle",              "black large circle"),
    .init("\u{02b25}", "mdblkdiamond",             "black medium diamond"),
    .init("\u{02b26}", "mdwhtdiamond",             "white medium diamond"),
    .init("\u{02b27}", "mdblklozenge",             "black medium lozenge"),
    .init("\u{02b28}", "mdwhtlozenge",             "white medium lozenge"),
    .init("\u{02b29}", "smblkdiamond",             "black small diamond"),
    .init("\u{02b2a}", "smblklozenge",             "black small lozenge"),
    .init("\u{02b2b}", "smwhtlozenge",             "white small lozenge"),
    .init("\u{02b2c}", "blkhorzoval",              "black horizontal ellipse"),
    .init("\u{02b2d}", "whthorzoval",              "white horizontal ellipse"),
    .init("\u{02b2e}", "blkvertoval",              "black vertical ellipse"),
    .init("\u{02b2f}", "whtvertoval",              "white vertical ellipse"),
    .init("\u{02b30}", "circleonleftarrow",        "left arrow with small circle"),
    .init("\u{02b31}", "leftthreearrows",          "three leftwards arrows"),
    .init("\u{02b32}", "leftarrowonoplus",         "left arrow with circled plus"),
    .init("\u{02b33}", "longleftsquigarrow",       "long leftwards squiggle arrow"),
    .init("\u{02b34}", "nvtwoheadleftarrow",       "leftwards two-headed arrow with vertical stroke"),
    .init("\u{02b35}", "nVtwoheadleftarrow",       "leftwards two-headed arrow with double vertical stroke"),
    .init("\u{02b36}", "twoheadmapsfrom",          "leftwards two-headed arrow from bar"),
    .init("\u{02b37}", "twoheadleftdbkarrow",      "leftwards two-headed triple-dash arrow"),
    .init("\u{02b38}", "leftdotarrow",             "leftwards arrow with dotted stem"),
    .init("\u{02b39}", "nvleftarrowtail",          "leftwards arrow with tail with vertical stroke"),
    .init("\u{02b3a}", "nVleftarrowtail",          "leftwards arrow with tail with double vertical stroke"),
    .init("\u{02b3b}", "twoheadleftarrowtail",     "leftwards two-headed arrow with tail"),
    .init("\u{02b3c}", "nvtwoheadleftarrowtail",   "leftwards two-headed arrow with tail with vertical stroke"),
    .init("\u{02b3d}", "nVtwoheadleftarrowtail",   "leftwards two-headed arrow with tail with double vertical stroke"),
    .init("\u{02b3e}", "leftarrowx",               "leftwards arrow through x"),
    .init("\u{02b3f}", "leftcurvedarrow",          "wave arrow pointing directly left"),
    .init("\u{02b40}", "equalleftarrow",           "equals sign above leftwards arrow"),
    .init("\u{02b41}", "bsimilarleftarrow",        "reverse tilde operator above leftwards arrow"),
    .init("\u{02b42}", "leftarrowbackapprox",      "leftwards arrow above reverse almost equal to"),
    .init("\u{02b43}", "rightarrowgtr",            "rightwards arrow through greater-than"),
    .init("\u{02b44}", "rightarrowsupset",         "rightwards arrow through subset"),
    .init("\u{02b45}", "LLeftarrow",               "leftwards quadruple arrow"),
    .init("\u{02b46}", "RRightarrow",              "rightwards quadruple arrow"),
    .init("\u{02b47}", "bsimilarrightarrow",       "reverse tilde operator above rightwards arrow"),
    .init("\u{02b48}", "rightarrowbackapprox",     "rightwards arrow above reverse almost equal to"),
    .init("\u{02b49}", "similarleftarrow",         "tilde operator above leftwards arrow"),
    .init("\u{02b4a}", "leftarrowapprox",          "leftwards arrow above almost equal to"),
    .init("\u{02b4b}", "leftarrowbsimilar",        "leftwards arrow above reverse tilde operator"),
    .init("\u{02b4c}", "rightarrowbsimilar",       "righttwards arrow above reverse tilde operator"),
    .init("\u{02b50}", "medwhitestar",             "white medium star"),
    .init("\u{02b51}", "medblackstar",             "black medium star"),
    .init("\u{02b52}", "smwhitestar",              "white small star"),
    .init("\u{02b53}", "rightpentagonblack",       "black right-pointing pentagon"),
    .init("\u{02b54}", "rightpentagon",            "white right-pointing pentagon"),
    .init("\u{03012}", "postalmark",               "postal mark"),
    .init("\u{03030}", "hzigzag",                  "zigzag"),
    .init("\u{1d400}", "mbfA",                     "mathematical bold capital a"),
    .init("\u{1d401}", "mbfB",                     "mathematical bold capital b"),
    .init("\u{1d402}", "mbfC",                     "mathematical bold capital c"),
    .init("\u{1d403}", "mbfD",                     "mathematical bold capital d"),
    .init("\u{1d404}", "mbfE",                     "mathematical bold capital e"),
    .init("\u{1d405}", "mbfF",                     "mathematical bold capital f"),
    .init("\u{1d406}", "mbfG",                     "mathematical bold capital g"),
    .init("\u{1d407}", "mbfH",                     "mathematical bold capital h"),
    .init("\u{1d408}", "mbfI",                     "mathematical bold capital i"),
    .init("\u{1d409}", "mbfJ",                     "mathematical bold capital j"),
    .init("\u{1d40a}", "mbfK",                     "mathematical bold capital k"),
    .init("\u{1d40b}", "mbfL",                     "mathematical bold capital l"),
    .init("\u{1d40c}", "mbfM",                     "mathematical bold capital m"),
    .init("\u{1d40d}", "mbfN",                     "mathematical bold capital n"),
    .init("\u{1d40e}", "mbfO",                     "mathematical bold capital o"),
    .init("\u{1d40f}", "mbfP",                     "mathematical bold capital p"),
    .init("\u{1d410}", "mbfQ",                     "mathematical bold capital q"),
    .init("\u{1d411}", "mbfR",                     "mathematical bold capital r"),
    .init("\u{1d412}", "mbfS",                     "mathematical bold capital s"),
    .init("\u{1d413}", "mbfT",                     "mathematical bold capital t"),
    .init("\u{1d414}", "mbfU",                     "mathematical bold capital u"),
    .init("\u{1d415}", "mbfV",                     "mathematical bold capital v"),
    .init("\u{1d416}", "mbfW",                     "mathematical bold capital w"),
    .init("\u{1d417}", "mbfX",                     "mathematical bold capital x"),
    .init("\u{1d418}", "mbfY",                     "mathematical bold capital y"),
    .init("\u{1d419}", "mbfZ",                     "mathematical bold capital z"),
    .init("\u{1d41a}", "mbfa",                     "mathematical bold small a"),
    .init("\u{1d41b}", "mbfb",                     "mathematical bold small b"),
    .init("\u{1d41c}", "mbfc",                     "mathematical bold small c"),
    .init("\u{1d41d}", "mbfd",                     "mathematical bold small d"),
    .init("\u{1d41e}", "mbfe",                     "mathematical bold small e"),
    .init("\u{1d41f}", "mbff",                     "mathematical bold small f"),
    .init("\u{1d420}", "mbfg",                     "mathematical bold small g"),
    .init("\u{1d421}", "mbfh",                     "mathematical bold small h"),
    .init("\u{1d422}", "mbfi",                     "mathematical bold small i"),
    .init("\u{1d423}", "mbfj",                     "mathematical bold small j"),
    .init("\u{1d424}", "mbfk",                     "mathematical bold small k"),
    .init("\u{1d425}", "mbfl",                     "mathematical bold small l"),
    .init("\u{1d426}", "mbfm",                     "mathematical bold small m"),
    .init("\u{1d427}", "mbfn",                     "mathematical bold small n"),
    .init("\u{1d428}", "mbfo",                     "mathematical bold small o"),
    .init("\u{1d429}", "mbfp",                     "mathematical bold small p"),
    .init("\u{1d42a}", "mbfq",                     "mathematical bold small q"),
    .init("\u{1d42b}", "mbfr",                     "mathematical bold small r"),
    .init("\u{1d42c}", "mbfs",                     "mathematical bold small s"),
    .init("\u{1d42d}", "mbft",                     "mathematical bold small t"),
    .init("\u{1d42e}", "mbfu",                     "mathematical bold small u"),
    .init("\u{1d42f}", "mbfv",                     "mathematical bold small v"),
    .init("\u{1d430}", "mbfw",                     "mathematical bold small w"),
    .init("\u{1d431}", "mbfx",                     "mathematical bold small x"),
    .init("\u{1d432}", "mbfy",                     "mathematical bold small y"),
    .init("\u{1d433}", "mbfz",                     "mathematical bold small z"),
    .init("\u{1d434}", "mitA",                     "mathematical italic capital a"),
    .init("\u{1d435}", "mitB",                     "mathematical italic capital b"),
    .init("\u{1d436}", "mitC",                     "mathematical italic capital c"),
    .init("\u{1d437}", "mitD",                     "mathematical italic capital d"),
    .init("\u{1d438}", "mitE",                     "mathematical italic capital e"),
    .init("\u{1d439}", "mitF",                     "mathematical italic capital f"),
    .init("\u{1d43a}", "mitG",                     "mathematical italic capital g"),
    .init("\u{1d43b}", "mitH",                     "mathematical italic capital h"),
    .init("\u{1d43c}", "mitI",                     "mathematical italic capital i"),
    .init("\u{1d43d}", "mitJ",                     "mathematical italic capital j"),
    .init("\u{1d43e}", "mitK",                     "mathematical italic capital k"),
    .init("\u{1d43f}", "mitL",                     "mathematical italic capital l"),
    .init("\u{1d440}", "mitM",                     "mathematical italic capital m"),
    .init("\u{1d441}", "mitN",                     "mathematical italic capital n"),
    .init("\u{1d442}", "mitO",                     "mathematical italic capital o"),
    .init("\u{1d443}", "mitP",                     "mathematical italic capital p"),
    .init("\u{1d444}", "mitQ",                     "mathematical italic capital q"),
    .init("\u{1d445}", "mitR",                     "mathematical italic capital r"),
    .init("\u{1d446}", "mitS",                     "mathematical italic capital s"),
    .init("\u{1d447}", "mitT",                     "mathematical italic capital t"),
    .init("\u{1d448}", "mitU",                     "mathematical italic capital u"),
    .init("\u{1d449}", "mitV",                     "mathematical italic capital v"),
    .init("\u{1d44a}", "mitW",                     "mathematical italic capital w"),
    .init("\u{1d44b}", "mitX",                     "mathematical italic capital x"),
    .init("\u{1d44c}", "mitY",                     "mathematical italic capital y"),
    .init("\u{1d44d}", "mitZ",                     "mathematical italic capital z"),
    .init("\u{1d44e}", "mita",                     "mathematical italic small a"),
    .init("\u{1d44f}", "mitb",                     "mathematical italic small b"),
    .init("\u{1d450}", "mitc",                     "mathematical italic small c"),
    .init("\u{1d451}", "mitd",                     "mathematical italic small d"),
    .init("\u{1d452}", "mite",                     "mathematical italic small e"),
    .init("\u{1d453}", "mitf",                     "mathematical italic small f"),
    .init("\u{1d454}", "mitg",                     "mathematical italic small g"),
    .init("\u{1d456}", "miti",                     "mathematical italic small i"),
    .init("\u{1d457}", "mitj",                     "mathematical italic small j"),
    .init("\u{1d458}", "mitk",                     "mathematical italic small k"),
    .init("\u{1d459}", "mitl",                     "mathematical italic small l"),
    .init("\u{1d45a}", "mitm",                     "mathematical italic small m"),
    .init("\u{1d45b}", "mitn",                     "mathematical italic small n"),
    .init("\u{1d45c}", "mito",                     "mathematical italic small o"),
    .init("\u{1d45d}", "mitp",                     "mathematical italic small p"),
    .init("\u{1d45e}", "mitq",                     "mathematical italic small q"),
    .init("\u{1d45f}", "mitr",                     "mathematical italic small r"),
    .init("\u{1d460}", "mits",                     "mathematical italic small s"),
    .init("\u{1d461}", "mitt",                     "mathematical italic small t"),
    .init("\u{1d462}", "mitu",                     "mathematical italic small u"),
    .init("\u{1d463}", "mitv",                     "mathematical italic small v"),
    .init("\u{1d464}", "mitw",                     "mathematical italic small w"),
    .init("\u{1d465}", "mitx",                     "mathematical italic small x"),
    .init("\u{1d466}", "mity",                     "mathematical italic small y"),
    .init("\u{1d467}", "mitz",                     "mathematical italic small z"),
    .init("\u{1d468}", "mbfitA",                   "mathematical bold italic capital a"),
    .init("\u{1d469}", "mbfitB",                   "mathematical bold italic capital b"),
    .init("\u{1d46a}", "mbfitC",                   "mathematical bold italic capital c"),
    .init("\u{1d46b}", "mbfitD",                   "mathematical bold italic capital d"),
    .init("\u{1d46c}", "mbfitE",                   "mathematical bold italic capital e"),
    .init("\u{1d46d}", "mbfitF",                   "mathematical bold italic capital f"),
    .init("\u{1d46e}", "mbfitG",                   "mathematical bold italic capital g"),
    .init("\u{1d46f}", "mbfitH",                   "mathematical bold italic capital h"),
    .init("\u{1d470}", "mbfitI",                   "mathematical bold italic capital i"),
    .init("\u{1d471}", "mbfitJ",                   "mathematical bold italic capital j"),
    .init("\u{1d472}", "mbfitK",                   "mathematical bold italic capital k"),
    .init("\u{1d473}", "mbfitL",                   "mathematical bold italic capital l"),
    .init("\u{1d474}", "mbfitM",                   "mathematical bold italic capital m"),
    .init("\u{1d475}", "mbfitN",                   "mathematical bold italic capital n"),
    .init("\u{1d476}", "mbfitO",                   "mathematical bold italic capital o"),
    .init("\u{1d477}", "mbfitP",                   "mathematical bold italic capital p"),
    .init("\u{1d478}", "mbfitQ",                   "mathematical bold italic capital q"),
    .init("\u{1d479}", "mbfitR",                   "mathematical bold italic capital r"),
    .init("\u{1d47a}", "mbfitS",                   "mathematical bold italic capital s"),
    .init("\u{1d47b}", "mbfitT",                   "mathematical bold italic capital t"),
    .init("\u{1d47c}", "mbfitU",                   "mathematical bold italic capital u"),
    .init("\u{1d47d}", "mbfitV",                   "mathematical bold italic capital v"),
    .init("\u{1d47e}", "mbfitW",                   "mathematical bold italic capital w"),
    .init("\u{1d47f}", "mbfitX",                   "mathematical bold italic capital x"),
    .init("\u{1d480}", "mbfitY",                   "mathematical bold italic capital y"),
    .init("\u{1d481}", "mbfitZ",                   "mathematical bold italic capital z"),
    .init("\u{1d482}", "mbfita",                   "mathematical bold italic small a"),
    .init("\u{1d483}", "mbfitb",                   "mathematical bold italic small b"),
    .init("\u{1d484}", "mbfitc",                   "mathematical bold italic small c"),
    .init("\u{1d485}", "mbfitd",                   "mathematical bold italic small d"),
    .init("\u{1d486}", "mbfite",                   "mathematical bold italic small e"),
    .init("\u{1d487}", "mbfitf",                   "mathematical bold italic small f"),
    .init("\u{1d488}", "mbfitg",                   "mathematical bold italic small g"),
    .init("\u{1d489}", "mbfith",                   "mathematical bold italic small h"),
    .init("\u{1d48a}", "mbfiti",                   "mathematical bold italic small i"),
    .init("\u{1d48b}", "mbfitj",                   "mathematical bold italic small j"),
    .init("\u{1d48c}", "mbfitk",                   "mathematical bold italic small k"),
    .init("\u{1d48d}", "mbfitl",                   "mathematical bold italic small l"),
    .init("\u{1d48e}", "mbfitm",                   "mathematical bold italic small m"),
    .init("\u{1d48f}", "mbfitn",                   "mathematical bold italic small n"),
    .init("\u{1d490}", "mbfito",                   "mathematical bold italic small o"),
    .init("\u{1d491}", "mbfitp",                   "mathematical bold italic small p"),
    .init("\u{1d492}", "mbfitq",                   "mathematical bold italic small q"),
    .init("\u{1d493}", "mbfitr",                   "mathematical bold italic small r"),
    .init("\u{1d494}", "mbfits",                   "mathematical bold italic small s"),
    .init("\u{1d495}", "mbfitt",                   "mathematical bold italic small t"),
    .init("\u{1d496}", "mbfitu",                   "mathematical bold italic small u"),
    .init("\u{1d497}", "mbfitv",                   "mathematical bold italic small v"),
    .init("\u{1d498}", "mbfitw",                   "mathematical bold italic small w"),
    .init("\u{1d499}", "mbfitx",                   "mathematical bold italic small x"),
    .init("\u{1d49a}", "mbfity",                   "mathematical bold italic small y"),
    .init("\u{1d49b}", "mbfitz",                   "mathematical bold italic small z"),
    .init("\u{1d49c}", "mscrA",                    "mathematical script capital a"),
    .init("\u{1d49e}", "mscrC",                    "mathematical script capital c"),
    .init("\u{1d49f}", "mscrD",                    "mathematical script capital d"),
    .init("\u{1d4a2}", "mscrG",                    "mathematical script capital g"),
    .init("\u{1d4a5}", "mscrJ",                    "mathematical script capital j"),
    .init("\u{1d4a6}", "mscrK",                    "mathematical script capital k"),
    .init("\u{1d4a9}", "mscrN",                    "mathematical script capital n"),
    .init("\u{1d4aa}", "mscrO",                    "mathematical script capital o"),
    .init("\u{1d4ab}", "mscrP",                    "mathematical script capital p"),
    .init("\u{1d4ac}", "mscrQ",                    "mathematical script capital q"),
    .init("\u{1d4ae}", "mscrS",                    "mathematical script capital s"),
    .init("\u{1d4af}", "mscrT",                    "mathematical script capital t"),
    .init("\u{1d4b0}", "mscrU",                    "mathematical script capital u"),
    .init("\u{1d4b1}", "mscrV",                    "mathematical script capital v"),
    .init("\u{1d4b2}", "mscrW",                    "mathematical script capital w"),
    .init("\u{1d4b3}", "mscrX",                    "mathematical script capital x"),
    .init("\u{1d4b4}", "mscrY",                    "mathematical script capital y"),
    .init("\u{1d4b5}", "mscrZ",                    "mathematical script capital z"),
    .init("\u{1d4b6}", "mscra",                    "mathematical script small a"),
    .init("\u{1d4b7}", "mscrb",                    "mathematical script small b"),
    .init("\u{1d4b8}", "mscrc",                    "mathematical script small c"),
    .init("\u{1d4b9}", "mscrd",                    "mathematical script small d"),
    .init("\u{1d4bb}", "mscrf",                    "mathematical script small f"),
    .init("\u{1d4bd}", "mscrh",                    "mathematical script small h"),
    .init("\u{1d4be}", "mscri",                    "mathematical script small i"),
    .init("\u{1d4bf}", "mscrj",                    "mathematical script small j"),
    .init("\u{1d4c0}", "mscrk",                    "mathematical script small k"),
    .init("\u{1d4c1}", "mscrl",                    "mathematical script small l"),
    .init("\u{1d4c2}", "mscrm",                    "mathematical script small m"),
    .init("\u{1d4c3}", "mscrn",                    "mathematical script small n"),
    .init("\u{1d4c5}", "mscrp",                    "mathematical script small p"),
    .init("\u{1d4c6}", "mscrq",                    "mathematical script small q"),
    .init("\u{1d4c7}", "mscrr",                    "mathematical script small r"),
    .init("\u{1d4c8}", "mscrs",                    "mathematical script small s"),
    .init("\u{1d4c9}", "mscrt",                    "mathematical script small t"),
    .init("\u{1d4ca}", "mscru",                    "mathematical script small u"),
    .init("\u{1d4cb}", "mscrv",                    "mathematical script small v"),
    .init("\u{1d4cc}", "mscrw",                    "mathematical script small w"),
    .init("\u{1d4cd}", "mscrx",                    "mathematical script small x"),
    .init("\u{1d4ce}", "mscry",                    "mathematical script small y"),
    .init("\u{1d4cf}", "mscrz",                    "mathematical script small z"),
    .init("\u{1d4d0}", "mbfscrA",                  "mathematical bold script capital a"),
    .init("\u{1d4d1}", "mbfscrB",                  "mathematical bold script capital b"),
    .init("\u{1d4d2}", "mbfscrC",                  "mathematical bold script capital c"),
    .init("\u{1d4d3}", "mbfscrD",                  "mathematical bold script capital d"),
    .init("\u{1d4d4}", "mbfscrE",                  "mathematical bold script capital e"),
    .init("\u{1d4d5}", "mbfscrF",                  "mathematical bold script capital f"),
    .init("\u{1d4d6}", "mbfscrG",                  "mathematical bold script capital g"),
    .init("\u{1d4d7}", "mbfscrH",                  "mathematical bold script capital h"),
    .init("\u{1d4d8}", "mbfscrI",                  "mathematical bold script capital i"),
    .init("\u{1d4d9}", "mbfscrJ",                  "mathematical bold script capital j"),
    .init("\u{1d4da}", "mbfscrK",                  "mathematical bold script capital k"),
    .init("\u{1d4db}", "mbfscrL",                  "mathematical bold script capital l"),
    .init("\u{1d4dc}", "mbfscrM",                  "mathematical bold script capital m"),
    .init("\u{1d4dd}", "mbfscrN",                  "mathematical bold script capital n"),
    .init("\u{1d4de}", "mbfscrO",                  "mathematical bold script capital o"),
    .init("\u{1d4df}", "mbfscrP",                  "mathematical bold script capital p"),
    .init("\u{1d4e0}", "mbfscrQ",                  "mathematical bold script capital q"),
    .init("\u{1d4e1}", "mbfscrR",                  "mathematical bold script capital r"),
    .init("\u{1d4e2}", "mbfscrS",                  "mathematical bold script capital s"),
    .init("\u{1d4e3}", "mbfscrT",                  "mathematical bold script capital t"),
    .init("\u{1d4e4}", "mbfscrU",                  "mathematical bold script capital u"),
    .init("\u{1d4e5}", "mbfscrV",                  "mathematical bold script capital v"),
    .init("\u{1d4e6}", "mbfscrW",                  "mathematical bold script capital w"),
    .init("\u{1d4e7}", "mbfscrX",                  "mathematical bold script capital x"),
    .init("\u{1d4e8}", "mbfscrY",                  "mathematical bold script capital y"),
    .init("\u{1d4e9}", "mbfscrZ",                  "mathematical bold script capital z"),
    .init("\u{1d4ea}", "mbfscra",                  "mathematical bold script small a"),
    .init("\u{1d4eb}", "mbfscrb",                  "mathematical bold script small b"),
    .init("\u{1d4ec}", "mbfscrc",                  "mathematical bold script small c"),
    .init("\u{1d4ed}", "mbfscrd",                  "mathematical bold script small d"),
    .init("\u{1d4ee}", "mbfscre",                  "mathematical bold script small e"),
    .init("\u{1d4ef}", "mbfscrf",                  "mathematical bold script small f"),
    .init("\u{1d4f0}", "mbfscrg",                  "mathematical bold script small g"),
    .init("\u{1d4f1}", "mbfscrh",                  "mathematical bold script small h"),
    .init("\u{1d4f2}", "mbfscri",                  "mathematical bold script small i"),
    .init("\u{1d4f3}", "mbfscrj",                  "mathematical bold script small j"),
    .init("\u{1d4f4}", "mbfscrk",                  "mathematical bold script small k"),
    .init("\u{1d4f5}", "mbfscrl",                  "mathematical bold script small l"),
    .init("\u{1d4f6}", "mbfscrm",                  "mathematical bold script small m"),
    .init("\u{1d4f7}", "mbfscrn",                  "mathematical bold script small n"),
    .init("\u{1d4f8}", "mbfscro",                  "mathematical bold script small o"),
    .init("\u{1d4f9}", "mbfscrp",                  "mathematical bold script small p"),
    .init("\u{1d4fa}", "mbfscrq",                  "mathematical bold script small q"),
    .init("\u{1d4fb}", "mbfscrr",                  "mathematical bold script small r"),
    .init("\u{1d4fc}", "mbfscrs",                  "mathematical bold script small s"),
    .init("\u{1d4fd}", "mbfscrt",                  "mathematical bold script small t"),
    .init("\u{1d4fe}", "mbfscru",                  "mathematical bold script small u"),
    .init("\u{1d4ff}", "mbfscrv",                  "mathematical bold script small v"),
    .init("\u{1d500}", "mbfscrw",                  "mathematical bold script small w"),
    .init("\u{1d501}", "mbfscrx",                  "mathematical bold script small x"),
    .init("\u{1d502}", "mbfscry",                  "mathematical bold script small y"),
    .init("\u{1d503}", "mbfscrz",                  "mathematical bold script small z"),
    .init("\u{1d504}", "mfrakA",                   "mathematical fraktur capital a"),
    .init("\u{1d505}", "mfrakB",                   "mathematical fraktur capital b"),
    .init("\u{1d507}", "mfrakD",                   "mathematical fraktur capital d"),
    .init("\u{1d508}", "mfrakE",                   "mathematical fraktur capital e"),
    .init("\u{1d509}", "mfrakF",                   "mathematical fraktur capital f"),
    .init("\u{1d50a}", "mfrakG",                   "mathematical fraktur capital g"),
    .init("\u{1d50d}", "mfrakJ",                   "mathematical fraktur capital j"),
    .init("\u{1d50e}", "mfrakK",                   "mathematical fraktur capital k"),
    .init("\u{1d50f}", "mfrakL",                   "mathematical fraktur capital l"),
    .init("\u{1d510}", "mfrakM",                   "mathematical fraktur capital m"),
    .init("\u{1d511}", "mfrakN",                   "mathematical fraktur capital n"),
    .init("\u{1d512}", "mfrakO",                   "mathematical fraktur capital o"),
    .init("\u{1d513}", "mfrakP",                   "mathematical fraktur capital p"),
    .init("\u{1d514}", "mfrakQ",                   "mathematical fraktur capital q"),
    .init("\u{1d516}", "mfrakS",                   "mathematical fraktur capital s"),
    .init("\u{1d517}", "mfrakT",                   "mathematical fraktur capital t"),
    .init("\u{1d518}", "mfrakU",                   "mathematical fraktur capital u"),
    .init("\u{1d519}", "mfrakV",                   "mathematical fraktur capital v"),
    .init("\u{1d51a}", "mfrakW",                   "mathematical fraktur capital w"),
    .init("\u{1d51b}", "mfrakX",                   "mathematical fraktur capital x"),
    .init("\u{1d51c}", "mfrakY",                   "mathematical fraktur capital y"),
    .init("\u{1d51e}", "mfraka",                   "mathematical fraktur small a"),
    .init("\u{1d51f}", "mfrakb",                   "mathematical fraktur small b"),
    .init("\u{1d520}", "mfrakc",                   "mathematical fraktur small c"),
    .init("\u{1d521}", "mfrakd",                   "mathematical fraktur small d"),
    .init("\u{1d522}", "mfrake",                   "mathematical fraktur small e"),
    .init("\u{1d523}", "mfrakf",                   "mathematical fraktur small f"),
    .init("\u{1d524}", "mfrakg",                   "mathematical fraktur small g"),
    .init("\u{1d525}", "mfrakh",                   "mathematical fraktur small h"),
    .init("\u{1d526}", "mfraki",                   "mathematical fraktur small i"),
    .init("\u{1d527}", "mfrakj",                   "mathematical fraktur small j"),
    .init("\u{1d528}", "mfrakk",                   "mathematical fraktur small k"),
    .init("\u{1d529}", "mfrakl",                   "mathematical fraktur small l"),
    .init("\u{1d52a}", "mfrakm",                   "mathematical fraktur small m"),
    .init("\u{1d52b}", "mfrakn",                   "mathematical fraktur small n"),
    .init("\u{1d52c}", "mfrako",                   "mathematical fraktur small o"),
    .init("\u{1d52d}", "mfrakp",                   "mathematical fraktur small p"),
    .init("\u{1d52e}", "mfrakq",                   "mathematical fraktur small q"),
    .init("\u{1d52f}", "mfrakr",                   "mathematical fraktur small r"),
    .init("\u{1d530}", "mfraks",                   "mathematical fraktur small s"),
    .init("\u{1d531}", "mfrakt",                   "mathematical fraktur small t"),
    .init("\u{1d532}", "mfraku",                   "mathematical fraktur small u"),
    .init("\u{1d533}", "mfrakv",                   "mathematical fraktur small v"),
    .init("\u{1d534}", "mfrakw",                   "mathematical fraktur small w"),
    .init("\u{1d535}", "mfrakx",                   "mathematical fraktur small x"),
    .init("\u{1d536}", "mfraky",                   "mathematical fraktur small y"),
    .init("\u{1d537}", "mfrakz",                   "mathematical fraktur small z"),
    .init("\u{1d538}", "BbbA",                     "mathematical double-struck capital a"),
    .init("\u{1d539}", "BbbB",                     "mathematical double-struck capital b"),
    .init("\u{1d53b}", "BbbD",                     "mathematical double-struck capital d"),
    .init("\u{1d53c}", "BbbE",                     "mathematical double-struck capital e"),
    .init("\u{1d53d}", "BbbF",                     "mathematical double-struck capital f"),
    .init("\u{1d53e}", "BbbG",                     "mathematical double-struck capital g"),
    .init("\u{1d540}", "BbbI",                     "mathematical double-struck capital i"),
    .init("\u{1d541}", "BbbJ",                     "mathematical double-struck capital j"),
    .init("\u{1d542}", "BbbK",                     "mathematical double-struck capital k"),
    .init("\u{1d543}", "BbbL",                     "mathematical double-struck capital l"),
    .init("\u{1d544}", "BbbM",                     "mathematical double-struck capital m"),
    .init("\u{1d546}", "BbbO",                     "mathematical double-struck capital o"),
    .init("\u{1d54a}", "BbbS",                     "mathematical double-struck capital s"),
    .init("\u{1d54b}", "BbbT",                     "mathematical double-struck capital t"),
    .init("\u{1d54c}", "BbbU",                     "mathematical double-struck capital u"),
    .init("\u{1d54d}", "BbbV",                     "mathematical double-struck capital v"),
    .init("\u{1d54e}", "BbbW",                     "mathematical double-struck capital w"),
    .init("\u{1d54f}", "BbbX",                     "mathematical double-struck capital x"),
    .init("\u{1d550}", "BbbY",                     "mathematical double-struck capital y"),
    .init("\u{1d552}", "Bbba",                     "mathematical double-struck small a"),
    .init("\u{1d553}", "Bbbb",                     "mathematical double-struck small b"),
    .init("\u{1d554}", "Bbbc",                     "mathematical double-struck small c"),
    .init("\u{1d555}", "Bbbd",                     "mathematical double-struck small d"),
    .init("\u{1d556}", "Bbbe",                     "mathematical double-struck small e"),
    .init("\u{1d557}", "Bbbf",                     "mathematical double-struck small f"),
    .init("\u{1d558}", "Bbbg",                     "mathematical double-struck small g"),
    .init("\u{1d559}", "Bbbh",                     "mathematical double-struck small h"),
    .init("\u{1d55a}", "Bbbi",                     "mathematical double-struck small i"),
    .init("\u{1d55b}", "Bbbj",                     "mathematical double-struck small j"),
    .init("\u{1d55c}", "Bbbk",                     "mathematical double-struck small k"),
    .init("\u{1d55d}", "Bbbl",                     "mathematical double-struck small l"),
    .init("\u{1d55e}", "Bbbm",                     "mathematical double-struck small m"),
    .init("\u{1d55f}", "Bbbn",                     "mathematical double-struck small n"),
    .init("\u{1d560}", "Bbbo",                     "mathematical double-struck small o"),
    .init("\u{1d561}", "Bbbp",                     "mathematical double-struck small p"),
    .init("\u{1d562}", "Bbbq",                     "mathematical double-struck small q"),
    .init("\u{1d563}", "Bbbr",                     "mathematical double-struck small r"),
    .init("\u{1d564}", "Bbbs",                     "mathematical double-struck small s"),
    .init("\u{1d565}", "Bbbt",                     "mathematical double-struck small t"),
    .init("\u{1d566}", "Bbbu",                     "mathematical double-struck small u"),
    .init("\u{1d567}", "Bbbv",                     "mathematical double-struck small v"),
    .init("\u{1d568}", "Bbbw",                     "mathematical double-struck small w"),
    .init("\u{1d569}", "Bbbx",                     "mathematical double-struck small x"),
    .init("\u{1d56a}", "Bbby",                     "mathematical double-struck small y"),
    .init("\u{1d56b}", "Bbbz",                     "mathematical double-struck small z"),
    .init("\u{1d56c}", "mbffrakA",                 "mathematical bold fraktur capital a"),
    .init("\u{1d56d}", "mbffrakB",                 "mathematical bold fraktur capital b"),
    .init("\u{1d56e}", "mbffrakC",                 "mathematical bold fraktur capital c"),
    .init("\u{1d56f}", "mbffrakD",                 "mathematical bold fraktur capital d"),
    .init("\u{1d570}", "mbffrakE",                 "mathematical bold fraktur capital e"),
    .init("\u{1d571}", "mbffrakF",                 "mathematical bold fraktur capital f"),
    .init("\u{1d572}", "mbffrakG",                 "mathematical bold fraktur capital g"),
    .init("\u{1d573}", "mbffrakH",                 "mathematical bold fraktur capital h"),
    .init("\u{1d574}", "mbffrakI",                 "mathematical bold fraktur capital i"),
    .init("\u{1d575}", "mbffrakJ",                 "mathematical bold fraktur capital j"),
    .init("\u{1d576}", "mbffrakK",                 "mathematical bold fraktur capital k"),
    .init("\u{1d577}", "mbffrakL",                 "mathematical bold fraktur capital l"),
    .init("\u{1d578}", "mbffrakM",                 "mathematical bold fraktur capital m"),
    .init("\u{1d579}", "mbffrakN",                 "mathematical bold fraktur capital n"),
    .init("\u{1d57a}", "mbffrakO",                 "mathematical bold fraktur capital o"),
    .init("\u{1d57b}", "mbffrakP",                 "mathematical bold fraktur capital p"),
    .init("\u{1d57c}", "mbffrakQ",                 "mathematical bold fraktur capital q"),
    .init("\u{1d57d}", "mbffrakR",                 "mathematical bold fraktur capital r"),
    .init("\u{1d57e}", "mbffrakS",                 "mathematical bold fraktur capital s"),
    .init("\u{1d57f}", "mbffrakT",                 "mathematical bold fraktur capital t"),
    .init("\u{1d580}", "mbffrakU",                 "mathematical bold fraktur capital u"),
    .init("\u{1d581}", "mbffrakV",                 "mathematical bold fraktur capital v"),
    .init("\u{1d582}", "mbffrakW",                 "mathematical bold fraktur capital w"),
    .init("\u{1d583}", "mbffrakX",                 "mathematical bold fraktur capital x"),
    .init("\u{1d584}", "mbffrakY",                 "mathematical bold fraktur capital y"),
    .init("\u{1d585}", "mbffrakZ",                 "mathematical bold fraktur capital z"),
    .init("\u{1d586}", "mbffraka",                 "mathematical bold fraktur small a"),
    .init("\u{1d587}", "mbffrakb",                 "mathematical bold fraktur small b"),
    .init("\u{1d588}", "mbffrakc",                 "mathematical bold fraktur small c"),
    .init("\u{1d589}", "mbffrakd",                 "mathematical bold fraktur small d"),
    .init("\u{1d58a}", "mbffrake",                 "mathematical bold fraktur small e"),
    .init("\u{1d58b}", "mbffrakf",                 "mathematical bold fraktur small f"),
    .init("\u{1d58c}", "mbffrakg",                 "mathematical bold fraktur small g"),
    .init("\u{1d58d}", "mbffrakh",                 "mathematical bold fraktur small h"),
    .init("\u{1d58e}", "mbffraki",                 "mathematical bold fraktur small i"),
    .init("\u{1d58f}", "mbffrakj",                 "mathematical bold fraktur small j"),
    .init("\u{1d590}", "mbffrakk",                 "mathematical bold fraktur small k"),
    .init("\u{1d591}", "mbffrakl",                 "mathematical bold fraktur small l"),
    .init("\u{1d592}", "mbffrakm",                 "mathematical bold fraktur small m"),
    .init("\u{1d593}", "mbffrakn",                 "mathematical bold fraktur small n"),
    .init("\u{1d594}", "mbffrako",                 "mathematical bold fraktur small o"),
    .init("\u{1d595}", "mbffrakp",                 "mathematical bold fraktur small p"),
    .init("\u{1d596}", "mbffrakq",                 "mathematical bold fraktur small q"),
    .init("\u{1d597}", "mbffrakr",                 "mathematical bold fraktur small r"),
    .init("\u{1d598}", "mbffraks",                 "mathematical bold fraktur small s"),
    .init("\u{1d599}", "mbffrakt",                 "mathematical bold fraktur small t"),
    .init("\u{1d59a}", "mbffraku",                 "mathematical bold fraktur small u"),
    .init("\u{1d59b}", "mbffrakv",                 "mathematical bold fraktur small v"),
    .init("\u{1d59c}", "mbffrakw",                 "mathematical bold fraktur small w"),
    .init("\u{1d59d}", "mbffrakx",                 "mathematical bold fraktur small x"),
    .init("\u{1d59e}", "mbffraky",                 "mathematical bold fraktur small y"),
    .init("\u{1d59f}", "mbffrakz",                 "mathematical bold fraktur small z"),
    .init("\u{1d5a0}", "msansA",                   "mathematical sans-serif capital a"),
    .init("\u{1d5a1}", "msansB",                   "mathematical sans-serif capital b"),
    .init("\u{1d5a2}", "msansC",                   "mathematical sans-serif capital c"),
    .init("\u{1d5a3}", "msansD",                   "mathematical sans-serif capital d"),
    .init("\u{1d5a4}", "msansE",                   "mathematical sans-serif capital e"),
    .init("\u{1d5a5}", "msansF",                   "mathematical sans-serif capital f"),
    .init("\u{1d5a6}", "msansG",                   "mathematical sans-serif capital g"),
    .init("\u{1d5a7}", "msansH",                   "mathematical sans-serif capital h"),
    .init("\u{1d5a8}", "msansI",                   "mathematical sans-serif capital i"),
    .init("\u{1d5a9}", "msansJ",                   "mathematical sans-serif capital j"),
    .init("\u{1d5aa}", "msansK",                   "mathematical sans-serif capital k"),
    .init("\u{1d5ab}", "msansL",                   "mathematical sans-serif capital l"),
    .init("\u{1d5ac}", "msansM",                   "mathematical sans-serif capital m"),
    .init("\u{1d5ad}", "msansN",                   "mathematical sans-serif capital n"),
    .init("\u{1d5ae}", "msansO",                   "mathematical sans-serif capital o"),
    .init("\u{1d5af}", "msansP",                   "mathematical sans-serif capital p"),
    .init("\u{1d5b0}", "msansQ",                   "mathematical sans-serif capital q"),
    .init("\u{1d5b1}", "msansR",                   "mathematical sans-serif capital r"),
    .init("\u{1d5b2}", "msansS",                   "mathematical sans-serif capital s"),
    .init("\u{1d5b3}", "msansT",                   "mathematical sans-serif capital t"),
    .init("\u{1d5b4}", "msansU",                   "mathematical sans-serif capital u"),
    .init("\u{1d5b5}", "msansV",                   "mathematical sans-serif capital v"),
    .init("\u{1d5b6}", "msansW",                   "mathematical sans-serif capital w"),
    .init("\u{1d5b7}", "msansX",                   "mathematical sans-serif capital x"),
    .init("\u{1d5b8}", "msansY",                   "mathematical sans-serif capital y"),
    .init("\u{1d5b9}", "msansZ",                   "mathematical sans-serif capital z"),
    .init("\u{1d5ba}", "msansa",                   "mathematical sans-serif small a"),
    .init("\u{1d5bb}", "msansb",                   "mathematical sans-serif small b"),
    .init("\u{1d5bc}", "msansc",                   "mathematical sans-serif small c"),
    .init("\u{1d5bd}", "msansd",                   "mathematical sans-serif small d"),
    .init("\u{1d5be}", "msanse",                   "mathematical sans-serif small e"),
    .init("\u{1d5bf}", "msansf",                   "mathematical sans-serif small f"),
    .init("\u{1d5c0}", "msansg",                   "mathematical sans-serif small g"),
    .init("\u{1d5c1}", "msansh",                   "mathematical sans-serif small h"),
    .init("\u{1d5c2}", "msansi",                   "mathematical sans-serif small i"),
    .init("\u{1d5c3}", "msansj",                   "mathematical sans-serif small j"),
    .init("\u{1d5c4}", "msansk",                   "mathematical sans-serif small k"),
    .init("\u{1d5c5}", "msansl",                   "mathematical sans-serif small l"),
    .init("\u{1d5c6}", "msansm",                   "mathematical sans-serif small m"),
    .init("\u{1d5c7}", "msansn",                   "mathematical sans-serif small n"),
    .init("\u{1d5c8}", "msanso",                   "mathematical sans-serif small o"),
    .init("\u{1d5c9}", "msansp",                   "mathematical sans-serif small p"),
    .init("\u{1d5ca}", "msansq",                   "mathematical sans-serif small q"),
    .init("\u{1d5cb}", "msansr",                   "mathematical sans-serif small r"),
    .init("\u{1d5cc}", "msanss",                   "mathematical sans-serif small s"),
    .init("\u{1d5cd}", "msanst",                   "mathematical sans-serif small t"),
    .init("\u{1d5ce}", "msansu",                   "mathematical sans-serif small u"),
    .init("\u{1d5cf}", "msansv",                   "mathematical sans-serif small v"),
    .init("\u{1d5d0}", "msansw",                   "mathematical sans-serif small w"),
    .init("\u{1d5d1}", "msansx",                   "mathematical sans-serif small x"),
    .init("\u{1d5d2}", "msansy",                   "mathematical sans-serif small y"),
    .init("\u{1d5d3}", "msansz",                   "mathematical sans-serif small z"),
    .init("\u{1d5d4}", "mbfsansA",                 "mathematical sans-serif bold capital a"),
    .init("\u{1d5d5}", "mbfsansB",                 "mathematical sans-serif bold capital b"),
    .init("\u{1d5d6}", "mbfsansC",                 "mathematical sans-serif bold capital c"),
    .init("\u{1d5d7}", "mbfsansD",                 "mathematical sans-serif bold capital d"),
    .init("\u{1d5d8}", "mbfsansE",                 "mathematical sans-serif bold capital e"),
    .init("\u{1d5d9}", "mbfsansF",                 "mathematical sans-serif bold capital f"),
    .init("\u{1d5da}", "mbfsansG",                 "mathematical sans-serif bold capital g"),
    .init("\u{1d5db}", "mbfsansH",                 "mathematical sans-serif bold capital h"),
    .init("\u{1d5dc}", "mbfsansI",                 "mathematical sans-serif bold capital i"),
    .init("\u{1d5dd}", "mbfsansJ",                 "mathematical sans-serif bold capital j"),
    .init("\u{1d5de}", "mbfsansK",                 "mathematical sans-serif bold capital k"),
    .init("\u{1d5df}", "mbfsansL",                 "mathematical sans-serif bold capital l"),
    .init("\u{1d5e0}", "mbfsansM",                 "mathematical sans-serif bold capital m"),
    .init("\u{1d5e1}", "mbfsansN",                 "mathematical sans-serif bold capital n"),
    .init("\u{1d5e2}", "mbfsansO",                 "mathematical sans-serif bold capital o"),
    .init("\u{1d5e3}", "mbfsansP",                 "mathematical sans-serif bold capital p"),
    .init("\u{1d5e4}", "mbfsansQ",                 "mathematical sans-serif bold capital q"),
    .init("\u{1d5e5}", "mbfsansR",                 "mathematical sans-serif bold capital r"),
    .init("\u{1d5e6}", "mbfsansS",                 "mathematical sans-serif bold capital s"),
    .init("\u{1d5e7}", "mbfsansT",                 "mathematical sans-serif bold capital t"),
    .init("\u{1d5e8}", "mbfsansU",                 "mathematical sans-serif bold capital u"),
    .init("\u{1d5e9}", "mbfsansV",                 "mathematical sans-serif bold capital v"),
    .init("\u{1d5ea}", "mbfsansW",                 "mathematical sans-serif bold capital w"),
    .init("\u{1d5eb}", "mbfsansX",                 "mathematical sans-serif bold capital x"),
    .init("\u{1d5ec}", "mbfsansY",                 "mathematical sans-serif bold capital y"),
    .init("\u{1d5ed}", "mbfsansZ",                 "mathematical sans-serif bold capital z"),
    .init("\u{1d5ee}", "mbfsansa",                 "mathematical sans-serif bold small a"),
    .init("\u{1d5ef}", "mbfsansb",                 "mathematical sans-serif bold small b"),
    .init("\u{1d5f0}", "mbfsansc",                 "mathematical sans-serif bold small c"),
    .init("\u{1d5f1}", "mbfsansd",                 "mathematical sans-serif bold small d"),
    .init("\u{1d5f2}", "mbfsanse",                 "mathematical sans-serif bold small e"),
    .init("\u{1d5f3}", "mbfsansf",                 "mathematical sans-serif bold small f"),
    .init("\u{1d5f4}", "mbfsansg",                 "mathematical sans-serif bold small g"),
    .init("\u{1d5f5}", "mbfsansh",                 "mathematical sans-serif bold small h"),
    .init("\u{1d5f6}", "mbfsansi",                 "mathematical sans-serif bold small i"),
    .init("\u{1d5f7}", "mbfsansj",                 "mathematical sans-serif bold small j"),
    .init("\u{1d5f8}", "mbfsansk",                 "mathematical sans-serif bold small k"),
    .init("\u{1d5f9}", "mbfsansl",                 "mathematical sans-serif bold small l"),
    .init("\u{1d5fa}", "mbfsansm",                 "mathematical sans-serif bold small m"),
    .init("\u{1d5fb}", "mbfsansn",                 "mathematical sans-serif bold small n"),
    .init("\u{1d5fc}", "mbfsanso",                 "mathematical sans-serif bold small o"),
    .init("\u{1d5fd}", "mbfsansp",                 "mathematical sans-serif bold small p"),
    .init("\u{1d5fe}", "mbfsansq",                 "mathematical sans-serif bold small q"),
    .init("\u{1d5ff}", "mbfsansr",                 "mathematical sans-serif bold small r"),
    .init("\u{1d600}", "mbfsanss",                 "mathematical sans-serif bold small s"),
    .init("\u{1d601}", "mbfsanst",                 "mathematical sans-serif bold small t"),
    .init("\u{1d602}", "mbfsansu",                 "mathematical sans-serif bold small u"),
    .init("\u{1d603}", "mbfsansv",                 "mathematical sans-serif bold small v"),
    .init("\u{1d604}", "mbfsansw",                 "mathematical sans-serif bold small w"),
    .init("\u{1d605}", "mbfsansx",                 "mathematical sans-serif bold small x"),
    .init("\u{1d606}", "mbfsansy",                 "mathematical sans-serif bold small y"),
    .init("\u{1d607}", "mbfsansz",                 "mathematical sans-serif bold small z"),
    .init("\u{1d608}", "mitsansA",                 "mathematical sans-serif italic capital a"),
    .init("\u{1d609}", "mitsansB",                 "mathematical sans-serif italic capital b"),
    .init("\u{1d60a}", "mitsansC",                 "mathematical sans-serif italic capital c"),
    .init("\u{1d60b}", "mitsansD",                 "mathematical sans-serif italic capital d"),
    .init("\u{1d60c}", "mitsansE",                 "mathematical sans-serif italic capital e"),
    .init("\u{1d60d}", "mitsansF",                 "mathematical sans-serif italic capital f"),
    .init("\u{1d60e}", "mitsansG",                 "mathematical sans-serif italic capital g"),
    .init("\u{1d60f}", "mitsansH",                 "mathematical sans-serif italic capital h"),
    .init("\u{1d610}", "mitsansI",                 "mathematical sans-serif italic capital i"),
    .init("\u{1d611}", "mitsansJ",                 "mathematical sans-serif italic capital j"),
    .init("\u{1d612}", "mitsansK",                 "mathematical sans-serif italic capital k"),
    .init("\u{1d613}", "mitsansL",                 "mathematical sans-serif italic capital l"),
    .init("\u{1d614}", "mitsansM",                 "mathematical sans-serif italic capital m"),
    .init("\u{1d615}", "mitsansN",                 "mathematical sans-serif italic capital n"),
    .init("\u{1d616}", "mitsansO",                 "mathematical sans-serif italic capital o"),
    .init("\u{1d617}", "mitsansP",                 "mathematical sans-serif italic capital p"),
    .init("\u{1d618}", "mitsansQ",                 "mathematical sans-serif italic capital q"),
    .init("\u{1d619}", "mitsansR",                 "mathematical sans-serif italic capital r"),
    .init("\u{1d61a}", "mitsansS",                 "mathematical sans-serif italic capital s"),
    .init("\u{1d61b}", "mitsansT",                 "mathematical sans-serif italic capital t"),
    .init("\u{1d61c}", "mitsansU",                 "mathematical sans-serif italic capital u"),
    .init("\u{1d61d}", "mitsansV",                 "mathematical sans-serif italic capital v"),
    .init("\u{1d61e}", "mitsansW",                 "mathematical sans-serif italic capital w"),
    .init("\u{1d61f}", "mitsansX",                 "mathematical sans-serif italic capital x"),
    .init("\u{1d620}", "mitsansY",                 "mathematical sans-serif italic capital y"),
    .init("\u{1d621}", "mitsansZ",                 "mathematical sans-serif italic capital z"),
    .init("\u{1d622}", "mitsansa",                 "mathematical sans-serif italic small a"),
    .init("\u{1d623}", "mitsansb",                 "mathematical sans-serif italic small b"),
    .init("\u{1d624}", "mitsansc",                 "mathematical sans-serif italic small c"),
    .init("\u{1d625}", "mitsansd",                 "mathematical sans-serif italic small d"),
    .init("\u{1d626}", "mitsanse",                 "mathematical sans-serif italic small e"),
    .init("\u{1d627}", "mitsansf",                 "mathematical sans-serif italic small f"),
    .init("\u{1d628}", "mitsansg",                 "mathematical sans-serif italic small g"),
    .init("\u{1d629}", "mitsansh",                 "mathematical sans-serif italic small h"),
    .init("\u{1d62a}", "mitsansi",                 "mathematical sans-serif italic small i"),
    .init("\u{1d62b}", "mitsansj",                 "mathematical sans-serif italic small j"),
    .init("\u{1d62c}", "mitsansk",                 "mathematical sans-serif italic small k"),
    .init("\u{1d62d}", "mitsansl",                 "mathematical sans-serif italic small l"),
    .init("\u{1d62e}", "mitsansm",                 "mathematical sans-serif italic small m"),
    .init("\u{1d62f}", "mitsansn",                 "mathematical sans-serif italic small n"),
    .init("\u{1d630}", "mitsanso",                 "mathematical sans-serif italic small o"),
    .init("\u{1d631}", "mitsansp",                 "mathematical sans-serif italic small p"),
    .init("\u{1d632}", "mitsansq",                 "mathematical sans-serif italic small q"),
    .init("\u{1d633}", "mitsansr",                 "mathematical sans-serif italic small r"),
    .init("\u{1d634}", "mitsanss",                 "mathematical sans-serif italic small s"),
    .init("\u{1d635}", "mitsanst",                 "mathematical sans-serif italic small t"),
    .init("\u{1d636}", "mitsansu",                 "mathematical sans-serif italic small u"),
    .init("\u{1d637}", "mitsansv",                 "mathematical sans-serif italic small v"),
    .init("\u{1d638}", "mitsansw",                 "mathematical sans-serif italic small w"),
    .init("\u{1d639}", "mitsansx",                 "mathematical sans-serif italic small x"),
    .init("\u{1d63a}", "mitsansy",                 "mathematical sans-serif italic small y"),
    .init("\u{1d63b}", "mitsansz",                 "mathematical sans-serif italic small z"),
    .init("\u{1d63c}", "mbfitsansA",               "mathematical sans-serif bold italic capital a"),
    .init("\u{1d63d}", "mbfitsansB",               "mathematical sans-serif bold italic capital b"),
    .init("\u{1d63e}", "mbfitsansC",               "mathematical sans-serif bold italic capital c"),
    .init("\u{1d63f}", "mbfitsansD",               "mathematical sans-serif bold italic capital d"),
    .init("\u{1d640}", "mbfitsansE",               "mathematical sans-serif bold italic capital e"),
    .init("\u{1d641}", "mbfitsansF",               "mathematical sans-serif bold italic capital f"),
    .init("\u{1d642}", "mbfitsansG",               "mathematical sans-serif bold italic capital g"),
    .init("\u{1d643}", "mbfitsansH",               "mathematical sans-serif bold italic capital h"),
    .init("\u{1d644}", "mbfitsansI",               "mathematical sans-serif bold italic capital i"),
    .init("\u{1d645}", "mbfitsansJ",               "mathematical sans-serif bold italic capital j"),
    .init("\u{1d646}", "mbfitsansK",               "mathematical sans-serif bold italic capital k"),
    .init("\u{1d647}", "mbfitsansL",               "mathematical sans-serif bold italic capital l"),
    .init("\u{1d648}", "mbfitsansM",               "mathematical sans-serif bold italic capital m"),
    .init("\u{1d649}", "mbfitsansN",               "mathematical sans-serif bold italic capital n"),
    .init("\u{1d64a}", "mbfitsansO",               "mathematical sans-serif bold italic capital o"),
    .init("\u{1d64b}", "mbfitsansP",               "mathematical sans-serif bold italic capital p"),
    .init("\u{1d64c}", "mbfitsansQ",               "mathematical sans-serif bold italic capital q"),
    .init("\u{1d64d}", "mbfitsansR",               "mathematical sans-serif bold italic capital r"),
    .init("\u{1d64e}", "mbfitsansS",               "mathematical sans-serif bold italic capital s"),
    .init("\u{1d64f}", "mbfitsansT",               "mathematical sans-serif bold italic capital t"),
    .init("\u{1d650}", "mbfitsansU",               "mathematical sans-serif bold italic capital u"),
    .init("\u{1d651}", "mbfitsansV",               "mathematical sans-serif bold italic capital v"),
    .init("\u{1d652}", "mbfitsansW",               "mathematical sans-serif bold italic capital w"),
    .init("\u{1d653}", "mbfitsansX",               "mathematical sans-serif bold italic capital x"),
    .init("\u{1d654}", "mbfitsansY",               "mathematical sans-serif bold italic capital y"),
    .init("\u{1d655}", "mbfitsansZ",               "mathematical sans-serif bold italic capital z"),
    .init("\u{1d656}", "mbfitsansa",               "mathematical sans-serif bold italic small a"),
    .init("\u{1d657}", "mbfitsansb",               "mathematical sans-serif bold italic small b"),
    .init("\u{1d658}", "mbfitsansc",               "mathematical sans-serif bold italic small c"),
    .init("\u{1d659}", "mbfitsansd",               "mathematical sans-serif bold italic small d"),
    .init("\u{1d65a}", "mbfitsanse",               "mathematical sans-serif bold italic small e"),
    .init("\u{1d65b}", "mbfitsansf",               "mathematical sans-serif bold italic small f"),
    .init("\u{1d65c}", "mbfitsansg",               "mathematical sans-serif bold italic small g"),
    .init("\u{1d65d}", "mbfitsansh",               "mathematical sans-serif bold italic small h"),
    .init("\u{1d65e}", "mbfitsansi",               "mathematical sans-serif bold italic small i"),
    .init("\u{1d65f}", "mbfitsansj",               "mathematical sans-serif bold italic small j"),
    .init("\u{1d660}", "mbfitsansk",               "mathematical sans-serif bold italic small k"),
    .init("\u{1d661}", "mbfitsansl",               "mathematical sans-serif bold italic small l"),
    .init("\u{1d662}", "mbfitsansm",               "mathematical sans-serif bold italic small m"),
    .init("\u{1d663}", "mbfitsansn",               "mathematical sans-serif bold italic small n"),
    .init("\u{1d664}", "mbfitsanso",               "mathematical sans-serif bold italic small o"),
    .init("\u{1d665}", "mbfitsansp",               "mathematical sans-serif bold italic small p"),
    .init("\u{1d666}", "mbfitsansq",               "mathematical sans-serif bold italic small q"),
    .init("\u{1d667}", "mbfitsansr",               "mathematical sans-serif bold italic small r"),
    .init("\u{1d668}", "mbfitsanss",               "mathematical sans-serif bold italic small s"),
    .init("\u{1d669}", "mbfitsanst",               "mathematical sans-serif bold italic small t"),
    .init("\u{1d66a}", "mbfitsansu",               "mathematical sans-serif bold italic small u"),
    .init("\u{1d66b}", "mbfitsansv",               "mathematical sans-serif bold italic small v"),
    .init("\u{1d66c}", "mbfitsansw",               "mathematical sans-serif bold italic small w"),
    .init("\u{1d66d}", "mbfitsansx",               "mathematical sans-serif bold italic small x"),
    .init("\u{1d66e}", "mbfitsansy",               "mathematical sans-serif bold italic small y"),
    .init("\u{1d66f}", "mbfitsansz",               "mathematical sans-serif bold italic small z"),
    .init("\u{1d670}", "mttA",                     "mathematical monospace capital a"),
    .init("\u{1d671}", "mttB",                     "mathematical monospace capital b"),
    .init("\u{1d672}", "mttC",                     "mathematical monospace capital c"),
    .init("\u{1d673}", "mttD",                     "mathematical monospace capital d"),
    .init("\u{1d674}", "mttE",                     "mathematical monospace capital e"),
    .init("\u{1d675}", "mttF",                     "mathematical monospace capital f"),
    .init("\u{1d676}", "mttG",                     "mathematical monospace capital g"),
    .init("\u{1d677}", "mttH",                     "mathematical monospace capital h"),
    .init("\u{1d678}", "mttI",                     "mathematical monospace capital i"),
    .init("\u{1d679}", "mttJ",                     "mathematical monospace capital j"),
    .init("\u{1d67a}", "mttK",                     "mathematical monospace capital k"),
    .init("\u{1d67b}", "mttL",                     "mathematical monospace capital l"),
    .init("\u{1d67c}", "mttM",                     "mathematical monospace capital m"),
    .init("\u{1d67d}", "mttN",                     "mathematical monospace capital n"),
    .init("\u{1d67e}", "mttO",                     "mathematical monospace capital o"),
    .init("\u{1d67f}", "mttP",                     "mathematical monospace capital p"),
    .init("\u{1d680}", "mttQ",                     "mathematical monospace capital q"),
    .init("\u{1d681}", "mttR",                     "mathematical monospace capital r"),
    .init("\u{1d682}", "mttS",                     "mathematical monospace capital s"),
    .init("\u{1d683}", "mttT",                     "mathematical monospace capital t"),
    .init("\u{1d684}", "mttU",                     "mathematical monospace capital u"),
    .init("\u{1d685}", "mttV",                     "mathematical monospace capital v"),
    .init("\u{1d686}", "mttW",                     "mathematical monospace capital w"),
    .init("\u{1d687}", "mttX",                     "mathematical monospace capital x"),
    .init("\u{1d688}", "mttY",                     "mathematical monospace capital y"),
    .init("\u{1d689}", "mttZ",                     "mathematical monospace capital z"),
    .init("\u{1d68a}", "mtta",                     "mathematical monospace small a"),
    .init("\u{1d68b}", "mttb",                     "mathematical monospace small b"),
    .init("\u{1d68c}", "mttc",                     "mathematical monospace small c"),
    .init("\u{1d68d}", "mttd",                     "mathematical monospace small d"),
    .init("\u{1d68e}", "mtte",                     "mathematical monospace small e"),
    .init("\u{1d68f}", "mttf",                     "mathematical monospace small f"),
    .init("\u{1d690}", "mttg",                     "mathematical monospace small g"),
    .init("\u{1d691}", "mtth",                     "mathematical monospace small h"),
    .init("\u{1d692}", "mtti",                     "mathematical monospace small i"),
    .init("\u{1d693}", "mttj",                     "mathematical monospace small j"),
    .init("\u{1d694}", "mttk",                     "mathematical monospace small k"),
    .init("\u{1d695}", "mttl",                     "mathematical monospace small l"),
    .init("\u{1d696}", "mttm",                     "mathematical monospace small m"),
    .init("\u{1d697}", "mttn",                     "mathematical monospace small n"),
    .init("\u{1d698}", "mtto",                     "mathematical monospace small o"),
    .init("\u{1d699}", "mttp",                     "mathematical monospace small p"),
    .init("\u{1d69a}", "mttq",                     "mathematical monospace small q"),
    .init("\u{1d69b}", "mttr",                     "mathematical monospace small r"),
    .init("\u{1d69c}", "mtts",                     "mathematical monospace small s"),
    .init("\u{1d69d}", "mttt",                     "mathematical monospace small t"),
    .init("\u{1d69e}", "mttu",                     "mathematical monospace small u"),
    .init("\u{1d69f}", "mttv",                     "mathematical monospace small v"),
    .init("\u{1d6a0}", "mttw",                     "mathematical monospace small w"),
    .init("\u{1d6a1}", "mttx",                     "mathematical monospace small x"),
    .init("\u{1d6a2}", "mtty",                     "mathematical monospace small y"),
    .init("\u{1d6a3}", "mttz",                     "mathematical monospace small z"),
    .init("\u{1d6a4}", "imath",                    "mathematical italic small dotless i"),
    .init("\u{1d6a5}", "jmath",                    "mathematical italic small dotless j"),
    .init("\u{1d6a8}", "mbfAlpha",                 "mathematical bold capital alpha"),
    .init("\u{1d6a9}", "mbfBeta",                  "mathematical bold capital beta"),
    .init("\u{1d6aa}", "mbfGamma",                 "mathematical bold capital gamma"),
    .init("\u{1d6ab}", "mbfDelta",                 "mathematical bold capital delta"),
    .init("\u{1d6ac}", "mbfEpsilon",               "mathematical bold capital epsilon"),
    .init("\u{1d6ad}", "mbfZeta",                  "mathematical bold capital zeta"),
    .init("\u{1d6ae}", "mbfEta",                   "mathematical bold capital eta"),
    .init("\u{1d6af}", "mbfTheta",                 "mathematical bold capital theta"),
    .init("\u{1d6b0}", "mbfIota",                  "mathematical bold capital iota"),
    .init("\u{1d6b1}", "mbfKappa",                 "mathematical bold capital kappa"),
    .init("\u{1d6b2}", "mbfLambda",                "mathematical bold capital lambda"),
    .init("\u{1d6b3}", "mbfMu",                    "mathematical bold capital mu"),
    .init("\u{1d6b4}", "mbfNu",                    "mathematical bold capital nu"),
    .init("\u{1d6b5}", "mbfXi",                    "mathematical bold capital xi"),
    .init("\u{1d6b6}", "mbfOmicron",               "mathematical bold capital omicron"),
    .init("\u{1d6b7}", "mbfPi",                    "mathematical bold capital pi"),
    .init("\u{1d6b8}", "mbfRho",                   "mathematical bold capital rho"),
    .init("\u{1d6b9}", "mbfvarTheta",              "mathematical bold capital theta symbol"),
    .init("\u{1d6ba}", "mbfSigma",                 "mathematical bold capital sigma"),
    .init("\u{1d6bb}", "mbfTau",                   "mathematical bold capital tau"),
    .init("\u{1d6bc}", "mbfUpsilon",               "mathematical bold capital upsilon"),
    .init("\u{1d6bd}", "mbfPhi",                   "mathematical bold capital phi"),
    .init("\u{1d6be}", "mbfChi",                   "mathematical bold capital chi"),
    .init("\u{1d6bf}", "mbfPsi",                   "mathematical bold capital psi"),
    .init("\u{1d6c0}", "mbfOmega",                 "mathematical bold capital omega"),
    .init("\u{1d6c1}", "mbfnabla",                 "mathematical bold nabla"),
    .init("\u{1d6c2}", "mbfalpha",                 "mathematical bold small alpha"),
    .init("\u{1d6c3}", "mbfbeta",                  "mathematical bold small beta"),
    .init("\u{1d6c4}", "mbfgamma",                 "mathematical bold small gamma"),
    .init("\u{1d6c5}", "mbfdelta",                 "mathematical bold small delta"),
    .init("\u{1d6c6}", "mbfvarepsilon",            "mathematical bold small varepsilon"),
    .init("\u{1d6c7}", "mbfzeta",                  "mathematical bold small zeta"),
    .init("\u{1d6c8}", "mbfeta",                   "mathematical bold small eta"),
    .init("\u{1d6c9}", "mbftheta",                 "mathematical bold small theta"),
    .init("\u{1d6ca}", "mbfiota",                  "mathematical bold small iota"),
    .init("\u{1d6cb}", "mbfkappa",                 "mathematical bold small kappa"),
    .init("\u{1d6cc}", "mbflambda",                "mathematical bold small lambda"),
    .init("\u{1d6cd}", "mbfmu",                    "mathematical bold small mu"),
    .init("\u{1d6ce}", "mbfnu",                    "mathematical bold small nu"),
    .init("\u{1d6cf}", "mbfxi",                    "mathematical bold small xi"),
    .init("\u{1d6d0}", "mbfomicron",               "mathematical bold small omicron"),
    .init("\u{1d6d1}", "mbfpi",                    "mathematical bold small pi"),
    .init("\u{1d6d2}", "mbfrho",                   "mathematical bold small rho"),
    .init("\u{1d6d3}", "mbfvarsigma",              "mathematical bold small final sigma"),
    .init("\u{1d6d4}", "mbfsigma",                 "mathematical bold small sigma"),
    .init("\u{1d6d5}", "mbftau",                   "mathematical bold small tau"),
    .init("\u{1d6d6}", "mbfupsilon",               "mathematical bold small upsilon"),
    .init("\u{1d6d7}", "mbfvarphi",                "mathematical bold small phi"),
    .init("\u{1d6d8}", "mbfchi",                   "mathematical bold small chi"),
    .init("\u{1d6d9}", "mbfpsi",                   "mathematical bold small psi"),
    .init("\u{1d6da}", "mbfomega",                 "mathematical bold small omega"),
    .init("\u{1d6db}", "mbfpartial",               "mathematical bold partial differential"),
    .init("\u{1d6dc}", "mbfepsilon",               "mathematical bold varepsilon symbol"),
    .init("\u{1d6dd}", "mbfvartheta",              "mathematical bold theta symbol"),
    .init("\u{1d6de}", "mbfvarkappa",              "mathematical bold kappa symbol"),
    .init("\u{1d6df}", "mbfphi",                   "mathematical bold phi symbol"),
    .init("\u{1d6e0}", "mbfvarrho",                "mathematical bold rho symbol"),
    .init("\u{1d6e1}", "mbfvarpi",                 "mathematical bold pi symbol"),
    .init("\u{1d6e2}", "mitAlpha",                 "mathematical italic capital alpha"),
    .init("\u{1d6e3}", "mitBeta",                  "mathematical italic capital beta"),
    .init("\u{1d6e4}", "mitGamma",                 "mathematical italic capital gamma"),
    .init("\u{1d6e5}", "mitDelta",                 "mathematical italic capital delta"),
    .init("\u{1d6e6}", "mitEpsilon",               "mathematical italic capital epsilon"),
    .init("\u{1d6e7}", "mitZeta",                  "mathematical italic capital zeta"),
    .init("\u{1d6e8}", "mitEta",                   "mathematical italic capital eta"),
    .init("\u{1d6e9}", "mitTheta",                 "mathematical italic capital theta"),
    .init("\u{1d6ea}", "mitIota",                  "mathematical italic capital iota"),
    .init("\u{1d6eb}", "mitKappa",                 "mathematical italic capital kappa"),
    .init("\u{1d6ec}", "mitLambda",                "mathematical italic capital lambda"),
    .init("\u{1d6ed}", "mitMu",                    "mathematical italic capital mu"),
    .init("\u{1d6ee}", "mitNu",                    "mathematical italic capital nu"),
    .init("\u{1d6ef}", "mitXi",                    "mathematical italic capital xi"),
    .init("\u{1d6f0}", "mitOmicron",               "mathematical italic capital omicron"),
    .init("\u{1d6f1}", "mitPi",                    "mathematical italic capital pi"),
    .init("\u{1d6f2}", "mitRho",                   "mathematical italic capital rho"),
    .init("\u{1d6f3}", "mitvarTheta",              "mathematical italic capital theta symbol"),
    .init("\u{1d6f4}", "mitSigma",                 "mathematical italic capital sigma"),
    .init("\u{1d6f5}", "mitTau",                   "mathematical italic capital tau"),
    .init("\u{1d6f6}", "mitUpsilon",               "mathematical italic capital upsilon"),
    .init("\u{1d6f7}", "mitPhi",                   "mathematical italic capital phi"),
    .init("\u{1d6f8}", "mitChi",                   "mathematical italic capital chi"),
    .init("\u{1d6f9}", "mitPsi",                   "mathematical italic capital psi"),
    .init("\u{1d6fa}", "mitOmega",                 "mathematical italic capital omega"),
    .init("\u{1d6fb}", "mitnabla",                 "mathematical italic nabla"),
    .init("\u{1d6fc}", "mitalpha",                 "mathematical italic small alpha"),
    .init("\u{1d6fd}", "mitbeta",                  "mathematical italic small beta"),
    .init("\u{1d6fe}", "mitgamma",                 "mathematical italic small gamma"),
    .init("\u{1d6ff}", "mitdelta",                 "mathematical italic small delta"),
    .init("\u{1d700}", "mitvarepsilon",            "mathematical italic small varepsilon"),
    .init("\u{1d701}", "mitzeta",                  "mathematical italic small zeta"),
    .init("\u{1d702}", "miteta",                   "mathematical italic small eta"),
    .init("\u{1d703}", "mittheta",                 "mathematical italic small theta"),
    .init("\u{1d704}", "mitiota",                  "mathematical italic small iota"),
    .init("\u{1d705}", "mitkappa",                 "mathematical italic small kappa"),
    .init("\u{1d706}", "mitlambda",                "mathematical italic small lambda"),
    .init("\u{1d707}", "mitmu",                    "mathematical italic small mu"),
    .init("\u{1d708}", "mitnu",                    "mathematical italic small nu"),
    .init("\u{1d709}", "mitxi",                    "mathematical italic small xi"),
    .init("\u{1d70a}", "mitomicron",               "mathematical italic small omicron"),
    .init("\u{1d70b}", "mitpi",                    "mathematical italic small pi"),
    .init("\u{1d70c}", "mitrho",                   "mathematical italic small rho"),
    .init("\u{1d70d}", "mitvarsigma",              "mathematical italic small final sigma"),
    .init("\u{1d70e}", "mitsigma",                 "mathematical italic small sigma"),
    .init("\u{1d70f}", "mittau",                   "mathematical italic small tau"),
    .init("\u{1d710}", "mitupsilon",               "mathematical italic small upsilon"),
    .init("\u{1d711}", "mitvarphi",                "mathematical italic small phi"),
    .init("\u{1d712}", "mitchi",                   "mathematical italic small chi"),
    .init("\u{1d713}", "mitpsi",                   "mathematical italic small psi"),
    .init("\u{1d714}", "mitomega",                 "mathematical italic small omega"),
    .init("\u{1d715}", "mitpartial",               "mathematical italic partial differential"),
    .init("\u{1d716}", "mitepsilon",               "mathematical italic varepsilon symbol"),
    .init("\u{1d717}", "mitvartheta",              "mathematical italic theta symbol"),
    .init("\u{1d718}", "mitvarkappa",              "mathematical italic kappa symbol"),
    .init("\u{1d719}", "mitphi",                   "mathematical italic phi symbol"),
    .init("\u{1d71a}", "mitvarrho",                "mathematical italic rho symbol"),
    .init("\u{1d71b}", "mitvarpi",                 "mathematical italic pi symbol"),
    .init("\u{1d71c}", "mbfitAlpha",               "mathematical bold italic capital alpha"),
    .init("\u{1d71d}", "mbfitBeta",                "mathematical bold italic capital beta"),
    .init("\u{1d71e}", "mbfitGamma",               "mathematical bold italic capital gamma"),
    .init("\u{1d71f}", "mbfitDelta",               "mathematical bold italic capital delta"),
    .init("\u{1d720}", "mbfitEpsilon",             "mathematical bold italic capital epsilon"),
    .init("\u{1d721}", "mbfitZeta",                "mathematical bold italic capital zeta"),
    .init("\u{1d722}", "mbfitEta",                 "mathematical bold italic capital eta"),
    .init("\u{1d723}", "mbfitTheta",               "mathematical bold italic capital theta"),
    .init("\u{1d724}", "mbfitIota",                "mathematical bold italic capital iota"),
    .init("\u{1d725}", "mbfitKappa",               "mathematical bold italic capital kappa"),
    .init("\u{1d726}", "mbfitLambda",              "mathematical bold italic capital lambda"),
    .init("\u{1d727}", "mbfitMu",                  "mathematical bold italic capital mu"),
    .init("\u{1d728}", "mbfitNu",                  "mathematical bold italic capital nu"),
    .init("\u{1d729}", "mbfitXi",                  "mathematical bold italic capital xi"),
    .init("\u{1d72a}", "mbfitOmicron",             "mathematical bold italic capital omicron"),
    .init("\u{1d72b}", "mbfitPi",                  "mathematical bold italic capital pi"),
    .init("\u{1d72c}", "mbfitRho",                 "mathematical bold italic capital rho"),
    .init("\u{1d72d}", "mbfitvarTheta",            "mathematical bold italic capital theta symbol"),
    .init("\u{1d72e}", "mbfitSigma",               "mathematical bold italic capital sigma"),
    .init("\u{1d72f}", "mbfitTau",                 "mathematical bold italic capital tau"),
    .init("\u{1d730}", "mbfitUpsilon",             "mathematical bold italic capital upsilon"),
    .init("\u{1d731}", "mbfitPhi",                 "mathematical bold italic capital phi"),
    .init("\u{1d732}", "mbfitChi",                 "mathematical bold italic capital chi"),
    .init("\u{1d733}", "mbfitPsi",                 "mathematical bold italic capital psi"),
    .init("\u{1d734}", "mbfitOmega",               "mathematical bold italic capital omega"),
    .init("\u{1d735}", "mbfitnabla",               "mathematical bold italic nabla"),
    .init("\u{1d736}", "mbfitalpha",               "mathematical bold italic small alpha"),
    .init("\u{1d737}", "mbfitbeta",                "mathematical bold italic small beta"),
    .init("\u{1d738}", "mbfitgamma",               "mathematical bold italic small gamma"),
    .init("\u{1d739}", "mbfitdelta",               "mathematical bold italic small delta"),
    .init("\u{1d73a}", "mbfitvarepsilon",          "mathematical bold italic small varepsilon"),
    .init("\u{1d73b}", "mbfitzeta",                "mathematical bold italic small zeta"),
    .init("\u{1d73c}", "mbfiteta",                 "mathematical bold italic small eta"),
    .init("\u{1d73d}", "mbfittheta",               "mathematical bold italic small theta"),
    .init("\u{1d73e}", "mbfitiota",                "mathematical bold italic small iota"),
    .init("\u{1d73f}", "mbfitkappa",               "mathematical bold italic small kappa"),
    .init("\u{1d740}", "mbfitlambda",              "mathematical bold italic small lambda"),
    .init("\u{1d741}", "mbfitmu",                  "mathematical bold italic small mu"),
    .init("\u{1d742}", "mbfitnu",                  "mathematical bold italic small nu"),
    .init("\u{1d743}", "mbfitxi",                  "mathematical bold italic small xi"),
    .init("\u{1d744}", "mbfitomicron",             "mathematical bold italic small omicron"),
    .init("\u{1d745}", "mbfitpi",                  "mathematical bold italic small pi"),
    .init("\u{1d746}", "mbfitrho",                 "mathematical bold italic small rho"),
    .init("\u{1d747}", "mbfitvarsigma",            "mathematical bold italic small final sigma"),
    .init("\u{1d748}", "mbfitsigma",               "mathematical bold italic small sigma"),
    .init("\u{1d749}", "mbfittau",                 "mathematical bold italic small tau"),
    .init("\u{1d74a}", "mbfitupsilon",             "mathematical bold italic small upsilon"),
    .init("\u{1d74b}", "mbfitvarphi",              "mathematical bold italic small phi"),
    .init("\u{1d74c}", "mbfitchi",                 "mathematical bold italic small chi"),
    .init("\u{1d74d}", "mbfitpsi",                 "mathematical bold italic small psi"),
    .init("\u{1d74e}", "mbfitomega",               "mathematical bold italic small omega"),
    .init("\u{1d74f}", "mbfitpartial",             "mathematical bold italic partial differential"),
    .init("\u{1d750}", "mbfitepsilon",             "mathematical bold italic varepsilon symbol"),
    .init("\u{1d751}", "mbfitvartheta",            "mathematical bold italic theta symbol"),
    .init("\u{1d752}", "mbfitvarkappa",            "mathematical bold italic kappa symbol"),
    .init("\u{1d753}", "mbfitphi",                 "mathematical bold italic phi symbol"),
    .init("\u{1d754}", "mbfitvarrho",              "mathematical bold italic rho symbol"),
    .init("\u{1d755}", "mbfitvarpi",               "mathematical bold italic pi symbol"),
    .init("\u{1d756}", "mbfsansAlpha",             "mathematical sans-serif bold capital alpha"),
    .init("\u{1d757}", "mbfsansBeta",              "mathematical sans-serif bold capital beta"),
    .init("\u{1d758}", "mbfsansGamma",             "mathematical sans-serif bold capital gamma"),
    .init("\u{1d759}", "mbfsansDelta",             "mathematical sans-serif bold capital delta"),
    .init("\u{1d75a}", "mbfsansEpsilon",           "mathematical sans-serif bold capital epsilon"),
    .init("\u{1d75b}", "mbfsansZeta",              "mathematical sans-serif bold capital zeta"),
    .init("\u{1d75c}", "mbfsansEta",               "mathematical sans-serif bold capital eta"),
    .init("\u{1d75d}", "mbfsansTheta",             "mathematical sans-serif bold capital theta"),
    .init("\u{1d75e}", "mbfsansIota",              "mathematical sans-serif bold capital iota"),
    .init("\u{1d75f}", "mbfsansKappa",             "mathematical sans-serif bold capital kappa"),
    .init("\u{1d760}", "mbfsansLambda",            "mathematical sans-serif bold capital lambda"),
    .init("\u{1d761}", "mbfsansMu",                "mathematical sans-serif bold capital mu"),
    .init("\u{1d762}", "mbfsansNu",                "mathematical sans-serif bold capital nu"),
    .init("\u{1d763}", "mbfsansXi",                "mathematical sans-serif bold capital xi"),
    .init("\u{1d764}", "mbfsansOmicron",           "mathematical sans-serif bold capital omicron"),
    .init("\u{1d765}", "mbfsansPi",                "mathematical sans-serif bold capital pi"),
    .init("\u{1d766}", "mbfsansRho",               "mathematical sans-serif bold capital rho"),
    .init("\u{1d767}", "mbfsansvarTheta",          "mathematical sans-serif bold capital theta symbol"),
    .init("\u{1d768}", "mbfsansSigma",             "mathematical sans-serif bold capital sigma"),
    .init("\u{1d769}", "mbfsansTau",               "mathematical sans-serif bold capital tau"),
    .init("\u{1d76a}", "mbfsansUpsilon",           "mathematical sans-serif bold capital upsilon"),
    .init("\u{1d76b}", "mbfsansPhi",               "mathematical sans-serif bold capital phi"),
    .init("\u{1d76c}", "mbfsansChi",               "mathematical sans-serif bold capital chi"),
    .init("\u{1d76d}", "mbfsansPsi",               "mathematical sans-serif bold capital psi"),
    .init("\u{1d76e}", "mbfsansOmega",             "mathematical sans-serif bold capital omega"),
    .init("\u{1d76f}", "mbfsansnabla",             "mathematical sans-serif bold nabla"),
    .init("\u{1d770}", "mbfsansalpha",             "mathematical sans-serif bold small alpha"),
    .init("\u{1d771}", "mbfsansbeta",              "mathematical sans-serif bold small beta"),
    .init("\u{1d772}", "mbfsansgamma",             "mathematical sans-serif bold small gamma"),
    .init("\u{1d773}", "mbfsansdelta",             "mathematical sans-serif bold small delta"),
    .init("\u{1d774}", "mbfsansvarepsilon",        "mathematical sans-serif bold small varepsilon"),
    .init("\u{1d775}", "mbfsanszeta",              "mathematical sans-serif bold small zeta"),
    .init("\u{1d776}", "mbfsanseta",               "mathematical sans-serif bold small eta"),
    .init("\u{1d777}", "mbfsanstheta",             "mathematical sans-serif bold small theta"),
    .init("\u{1d778}", "mbfsansiota",              "mathematical sans-serif bold small iota"),
    .init("\u{1d779}", "mbfsanskappa",             "mathematical sans-serif bold small kappa"),
    .init("\u{1d77a}", "mbfsanslambda",            "mathematical sans-serif bold small lambda"),
    .init("\u{1d77b}", "mbfsansmu",                "mathematical sans-serif bold small mu"),
    .init("\u{1d77c}", "mbfsansnu",                "mathematical sans-serif bold small nu"),
    .init("\u{1d77d}", "mbfsansxi",                "mathematical sans-serif bold small xi"),
    .init("\u{1d77e}", "mbfsansomicron",           "mathematical sans-serif bold small omicron"),
    .init("\u{1d77f}", "mbfsanspi",                "mathematical sans-serif bold small pi"),
    .init("\u{1d780}", "mbfsansrho",               "mathematical sans-serif bold small rho"),
    .init("\u{1d781}", "mbfsansvarsigma",          "mathematical sans-serif bold small final sigma"),
    .init("\u{1d782}", "mbfsanssigma",             "mathematical sans-serif bold small sigma"),
    .init("\u{1d783}", "mbfsanstau",               "mathematical sans-serif bold small tau"),
    .init("\u{1d784}", "mbfsansupsilon",           "mathematical sans-serif bold small upsilon"),
    .init("\u{1d785}", "mbfsansvarphi",            "mathematical sans-serif bold small phi"),
    .init("\u{1d786}", "mbfsanschi",               "mathematical sans-serif bold small chi"),
    .init("\u{1d787}", "mbfsanspsi",               "mathematical sans-serif bold small psi"),
    .init("\u{1d788}", "mbfsansomega",             "mathematical sans-serif bold small omega"),
    .init("\u{1d789}", "mbfsanspartial",           "mathematical sans-serif bold partial differential"),
    .init("\u{1d78a}", "mbfsansepsilon",           "mathematical sans-serif bold varepsilon symbol"),
    .init("\u{1d78b}", "mbfsansvartheta",          "mathematical sans-serif bold theta symbol"),
    .init("\u{1d78c}", "mbfsansvarkappa",          "mathematical sans-serif bold kappa symbol"),
    .init("\u{1d78d}", "mbfsansphi",               "mathematical sans-serif bold phi symbol"),
    .init("\u{1d78e}", "mbfsansvarrho",            "mathematical sans-serif bold rho symbol"),
    .init("\u{1d78f}", "mbfsansvarpi",             "mathematical sans-serif bold pi symbol"),
    .init("\u{1d790}", "mbfitsansAlpha",           "mathematical sans-serif bold italic capital alpha"),
    .init("\u{1d791}", "mbfitsansBeta",            "mathematical sans-serif bold italic capital beta"),
    .init("\u{1d792}", "mbfitsansGamma",           "mathematical sans-serif bold italic capital gamma"),
    .init("\u{1d793}", "mbfitsansDelta",           "mathematical sans-serif bold italic capital delta"),
    .init("\u{1d794}", "mbfitsansEpsilon",         "mathematical sans-serif bold italic capital epsilon"),
    .init("\u{1d795}", "mbfitsansZeta",            "mathematical sans-serif bold italic capital zeta"),
    .init("\u{1d796}", "mbfitsansEta",             "mathematical sans-serif bold italic capital eta"),
    .init("\u{1d797}", "mbfitsansTheta",           "mathematical sans-serif bold italic capital theta"),
    .init("\u{1d798}", "mbfitsansIota",            "mathematical sans-serif bold italic capital iota"),
    .init("\u{1d799}", "mbfitsansKappa",           "mathematical sans-serif bold italic capital kappa"),
    .init("\u{1d79a}", "mbfitsansLambda",          "mathematical sans-serif bold italic capital lambda"),
    .init("\u{1d79b}", "mbfitsansMu",              "mathematical sans-serif bold italic capital mu"),
    .init("\u{1d79c}", "mbfitsansNu",              "mathematical sans-serif bold italic capital nu"),
    .init("\u{1d79d}", "mbfitsansXi",              "mathematical sans-serif bold italic capital xi"),
    .init("\u{1d79e}", "mbfitsansOmicron",         "mathematical sans-serif bold italic capital omicron"),
    .init("\u{1d79f}", "mbfitsansPi",              "mathematical sans-serif bold italic capital pi"),
    .init("\u{1d7a0}", "mbfitsansRho",             "mathematical sans-serif bold italic capital rho"),
    .init("\u{1d7a1}", "mbfitsansvarTheta",        "mathematical sans-serif bold italic capital theta symbol"),
    .init("\u{1d7a2}", "mbfitsansSigma",           "mathematical sans-serif bold italic capital sigma"),
    .init("\u{1d7a3}", "mbfitsansTau",             "mathematical sans-serif bold italic capital tau"),
    .init("\u{1d7a4}", "mbfitsansUpsilon",         "mathematical sans-serif bold italic capital upsilon"),
    .init("\u{1d7a5}", "mbfitsansPhi",             "mathematical sans-serif bold italic capital phi"),
    .init("\u{1d7a6}", "mbfitsansChi",             "mathematical sans-serif bold italic capital chi"),
    .init("\u{1d7a7}", "mbfitsansPsi",             "mathematical sans-serif bold italic capital psi"),
    .init("\u{1d7a8}", "mbfitsansOmega",           "mathematical sans-serif bold italic capital omega"),
    .init("\u{1d7a9}", "mbfitsansnabla",           "mathematical sans-serif bold italic nabla"),
    .init("\u{1d7aa}", "mbfitsansalpha",           "mathematical sans-serif bold italic small alpha"),
    .init("\u{1d7ab}", "mbfitsansbeta",            "mathematical sans-serif bold italic small beta"),
    .init("\u{1d7ac}", "mbfitsansgamma",           "mathematical sans-serif bold italic small gamma"),
    .init("\u{1d7ad}", "mbfitsansdelta",           "mathematical sans-serif bold italic small delta"),
    .init("\u{1d7ae}", "mbfitsansvarepsilon",      "mathematical sans-serif bold italic small varepsilon"),
    .init("\u{1d7af}", "mbfitsanszeta",            "mathematical sans-serif bold italic small zeta"),
    .init("\u{1d7b0}", "mbfitsanseta",             "mathematical sans-serif bold italic small eta"),
    .init("\u{1d7b1}", "mbfitsanstheta",           "mathematical sans-serif bold italic small theta"),
    .init("\u{1d7b2}", "mbfitsansiota",            "mathematical sans-serif bold italic small iota"),
    .init("\u{1d7b3}", "mbfitsanskappa",           "mathematical sans-serif bold italic small kappa"),
    .init("\u{1d7b4}", "mbfitsanslambda",          "mathematical sans-serif bold italic small lambda"),
    .init("\u{1d7b5}", "mbfitsansmu",              "mathematical sans-serif bold italic small mu"),
    .init("\u{1d7b6}", "mbfitsansnu",              "mathematical sans-serif bold italic small nu"),
    .init("\u{1d7b7}", "mbfitsansxi",              "mathematical sans-serif bold italic small xi"),
    .init("\u{1d7b8}", "mbfitsansomicron",         "mathematical sans-serif bold italic small omicron"),
    .init("\u{1d7b9}", "mbfitsanspi",              "mathematical sans-serif bold italic small pi"),
    .init("\u{1d7ba}", "mbfitsansrho",             "mathematical sans-serif bold italic small rho"),
    .init("\u{1d7bb}", "mbfitsansvarsigma",        "mathematical sans-serif bold italic small final sigma"),
    .init("\u{1d7bc}", "mbfitsanssigma",           "mathematical sans-serif bold italic small sigma"),
    .init("\u{1d7bd}", "mbfitsanstau",             "mathematical sans-serif bold italic small tau"),
    .init("\u{1d7be}", "mbfitsansupsilon",         "mathematical sans-serif bold italic small upsilon"),
    .init("\u{1d7bf}", "mbfitsansvarphi",          "mathematical sans-serif bold italic small phi"),
    .init("\u{1d7c0}", "mbfitsanschi",             "mathematical sans-serif bold italic small chi"),
    .init("\u{1d7c1}", "mbfitsanspsi",             "mathematical sans-serif bold italic small psi"),
    .init("\u{1d7c2}", "mbfitsansomega",           "mathematical sans-serif bold italic small omega"),
    .init("\u{1d7c3}", "mbfitsanspartial",         "mathematical sans-serif bold italic partial differential"),
    .init("\u{1d7c4}", "mbfitsansepsilon",         "mathematical sans-serif bold italic varepsilon symbol"),
    .init("\u{1d7c5}", "mbfitsansvartheta",        "mathematical sans-serif bold italic theta symbol"),
    .init("\u{1d7c6}", "mbfitsansvarkappa",        "mathematical sans-serif bold italic kappa symbol"),
    .init("\u{1d7c7}", "mbfitsansphi",             "mathematical sans-serif bold italic phi symbol"),
    .init("\u{1d7c8}", "mbfitsansvarrho",          "mathematical sans-serif bold italic rho symbol"),
    .init("\u{1d7c9}", "mbfitsansvarpi",           "mathematical sans-serif bold italic pi symbol"),
    .init("\u{1d7ca}", "mbfDigamma",               "mathematical bold capital digamma"),
    .init("\u{1d7cb}", "mbfdigamma",               "mathematical bold small digamma"),
    .init("\u{1d7ce}", "mbfzero",                  "mathematical bold digit 0"),
    .init("\u{1d7cf}", "mbfone",                   "mathematical bold digit 1"),
    .init("\u{1d7d0}", "mbftwo",                   "mathematical bold digit 2"),
    .init("\u{1d7d1}", "mbfthree",                 "mathematical bold digit 3"),
    .init("\u{1d7d2}", "mbffour",                  "mathematical bold digit 4"),
    .init("\u{1d7d3}", "mbffive",                  "mathematical bold digit 5"),
    .init("\u{1d7d4}", "mbfsix",                   "mathematical bold digit 6"),
    .init("\u{1d7d5}", "mbfseven",                 "mathematical bold digit 7"),
    .init("\u{1d7d6}", "mbfeight",                 "mathematical bold digit 8"),
    .init("\u{1d7d7}", "mbfnine",                  "mathematical bold digit 9"),
    .init("\u{1d7d8}", "Bbbzero",                  "mathematical double-struck digit 0"),
    .init("\u{1d7d9}", "Bbbone",                   "mathematical double-struck digit 1"),
    .init("\u{1d7da}", "Bbbtwo",                   "mathematical double-struck digit 2"),
    .init("\u{1d7db}", "Bbbthree",                 "mathematical double-struck digit 3"),
    .init("\u{1d7dc}", "Bbbfour",                  "mathematical double-struck digit 4"),
    .init("\u{1d7dd}", "Bbbfive",                  "mathematical double-struck digit 5"),
    .init("\u{1d7de}", "Bbbsix",                   "mathematical double-struck digit 6"),
    .init("\u{1d7df}", "Bbbseven",                 "mathematical double-struck digit 7"),
    .init("\u{1d7e0}", "Bbbeight",                 "mathematical double-struck digit 8"),
    .init("\u{1d7e1}", "Bbbnine",                  "mathematical double-struck digit 9"),
    .init("\u{1d7e2}", "msanszero",                "mathematical sans-serif digit 0"),
    .init("\u{1d7e3}", "msansone",                 "mathematical sans-serif digit 1"),
    .init("\u{1d7e4}", "msanstwo",                 "mathematical sans-serif digit 2"),
    .init("\u{1d7e5}", "msansthree",               "mathematical sans-serif digit 3"),
    .init("\u{1d7e6}", "msansfour",                "mathematical sans-serif digit 4"),
    .init("\u{1d7e7}", "msansfive",                "mathematical sans-serif digit 5"),
    .init("\u{1d7e8}", "msanssix",                 "mathematical sans-serif digit 6"),
    .init("\u{1d7e9}", "msansseven",               "mathematical sans-serif digit 7"),
    .init("\u{1d7ea}", "msanseight",               "mathematical sans-serif digit 8"),
    .init("\u{1d7eb}", "msansnine",                "mathematical sans-serif digit 9"),
    .init("\u{1d7ec}", "mbfsanszero",              "mathematical sans-serif bold digit 0"),
    .init("\u{1d7ed}", "mbfsansone",               "mathematical sans-serif bold digit 1"),
    .init("\u{1d7ee}", "mbfsanstwo",               "mathematical sans-serif bold digit 2"),
    .init("\u{1d7ef}", "mbfsansthree",             "mathematical sans-serif bold digit 3"),
    .init("\u{1d7f0}", "mbfsansfour",              "mathematical sans-serif bold digit 4"),
    .init("\u{1d7f1}", "mbfsansfive",              "mathematical sans-serif bold digit 5"),
    .init("\u{1d7f2}", "mbfsanssix",               "mathematical sans-serif bold digit 6"),
    .init("\u{1d7f3}", "mbfsansseven",             "mathematical sans-serif bold digit 7"),
    .init("\u{1d7f4}", "mbfsanseight",             "mathematical sans-serif bold digit 8"),
    .init("\u{1d7f5}", "mbfsansnine",              "mathematical sans-serif bold digit 9"),
    .init("\u{1d7f6}", "mttzero",                  "mathematical monospace digit 0"),
    .init("\u{1d7f7}", "mttone",                   "mathematical monospace digit 1"),
    .init("\u{1d7f8}", "mtttwo",                   "mathematical monospace digit 2"),
    .init("\u{1d7f9}", "mttthree",                 "mathematical monospace digit 3"),
    .init("\u{1d7fa}", "mttfour",                  "mathematical monospace digit 4"),
    .init("\u{1d7fb}", "mttfive",                  "mathematical monospace digit 5"),
    .init("\u{1d7fc}", "mttsix",                   "mathematical monospace digit 6"),
    .init("\u{1d7fd}", "mttseven",                 "mathematical monospace digit 7"),
    .init("\u{1d7fe}", "mtteight",                 "mathematical monospace digit 8"),
    .init("\u{1d7ff}", "mttnine",                  "mathematical monospace digit 9"),
    .init("\u{1eef0}", "arabicmaj",                "arabic mathematical operator meem with hah with tatweel"),
    .init("\u{1eef1}", "arabichad",                "arabic mathematical operator hah with dal"),
];
